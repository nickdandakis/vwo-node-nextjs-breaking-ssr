/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/index"],{

/***/ "./node_modules/cookie-storage/lib/cookie-storage.js":
/*!***********************************************************!*\
  !*** ./node_modules/cookie-storage/lib/cookie-storage.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.CookieStorage = void 0;\n\nvar format_cookie_1 = __webpack_require__(/*! ./format-cookie */ \"./node_modules/cookie-storage/lib/format-cookie.js\");\n\nvar parse_cookies_1 = __webpack_require__(/*! ./parse-cookies */ \"./node_modules/cookie-storage/lib/parse-cookies.js\");\n\nvar CookieStorage = function () {\n  function CookieStorage(defaultOptions) {\n    _classCallCheck(this, CookieStorage);\n\n    this._defaultOptions = Object.assign({\n      domain: null,\n      expires: null,\n      path: null,\n      secure: false\n    }, defaultOptions);\n    if (typeof Proxy !== \"undefined\") return new Proxy(this, cookieStorageHandler);\n  }\n\n  _createClass(CookieStorage, [{\n    key: \"clear\",\n    value: function clear() {\n      var _this = this;\n\n      var parsed = parse_cookies_1.parseCookies(this._getCookie());\n      var keys = Object.keys(parsed);\n      keys.forEach(function (key) {\n        return _this.removeItem(key);\n      });\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(key) {\n      var parsed = parse_cookies_1.parseCookies(this._getCookie());\n      return Object.prototype.hasOwnProperty.call(parsed, key) ? parsed[key] : null;\n    }\n  }, {\n    key: \"key\",\n    value: function key(index) {\n      var parsed = parse_cookies_1.parseCookies(this._getCookie());\n      var sortedKeys = Object.keys(parsed).sort();\n      return index < sortedKeys.length ? sortedKeys[index] : null;\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(key, cookieOptions) {\n      var data = \"\";\n      var options = Object.assign(Object.assign(Object.assign({}, this._defaultOptions), cookieOptions), {\n        expires: new Date(0)\n      });\n      var formatted = format_cookie_1.formatCookie(key, data, options);\n\n      this._setCookie(formatted);\n    }\n  }, {\n    key: \"setItem\",\n    value: function setItem(key, data, options) {\n      var opts = Object.assign(Object.assign({}, this._defaultOptions), options);\n      var formatted = format_cookie_1.formatCookie(key, data, opts);\n\n      this._setCookie(formatted);\n    }\n  }, {\n    key: \"_getCookie\",\n    value: function _getCookie() {\n      return typeof document === \"undefined\" ? \"\" : typeof document.cookie === \"undefined\" ? \"\" : document.cookie;\n    }\n  }, {\n    key: \"_setCookie\",\n    value: function _setCookie(value) {\n      document.cookie = value;\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      var parsed = parse_cookies_1.parseCookies(this._getCookie());\n      var keys = Object.keys(parsed);\n      return keys.length;\n    }\n  }]);\n\n  return CookieStorage;\n}();\n\nexports.CookieStorage = CookieStorage;\nvar cookieStorageHandler = {\n  defineProperty: function defineProperty(target, p, attributes) {\n    target.setItem(p.toString(), String(attributes.value));\n    return true;\n  },\n  deleteProperty: function deleteProperty(target, p) {\n    target.removeItem(p.toString());\n    return true;\n  },\n  get: function get(target, p, _receiver) {\n    if (typeof p === \"string\" && p in target) return target[p];\n    var result = target.getItem(p.toString());\n    return result !== null ? result : undefined;\n  },\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, p) {\n    if (p in target) return undefined;\n    return {\n      configurable: true,\n      enumerable: true,\n      value: target.getItem(p.toString()),\n      writable: true\n    };\n  },\n  has: function has(target, p) {\n    if (typeof p === \"string\" && p in target) return true;\n    return target.getItem(p.toString()) !== null;\n  },\n  ownKeys: function ownKeys(target) {\n    var keys = [];\n\n    for (var i = 0; i < target.length; i++) {\n      var key = target.key(i);\n      if (key !== null) keys.push(key);\n    }\n\n    return keys;\n  },\n  preventExtensions: function preventExtensions(_) {\n    throw new TypeError(\"can't prevent extensions on this proxy object\");\n  },\n  set: function set(target, p, value, _) {\n    target.setItem(p.toString(), String(value));\n    return true;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29va2llLXN0b3JhZ2UvbGliL2Nvb2tpZS1zdG9yYWdlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGtEQUFrRCwwQ0FBMEM7O0FBRTVGLDRDQUE0QyxnQkFBZ0Isa0JBQWtCLE9BQU8sMkJBQTJCLHdEQUF3RCxnQ0FBZ0MsdURBQXVEOztBQUUvUCw4REFBOEQsc0VBQXNFLDhEQUE4RDs7QUFFbE0sOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YscUJBQXFCOztBQUVyQixzQkFBc0IsbUJBQU8sQ0FBQywyRUFBaUI7O0FBRS9DLHNCQUFzQixtQkFBTyxDQUFDLDJFQUFpQjs7QUFFL0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0U7QUFDaEU7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLENBQUM7O0FBRUQscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBLG9CQUFvQixtQkFBbUI7QUFDdkM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvY29va2llLXN0b3JhZ2UvbGliL2Nvb2tpZS1zdG9yYWdlLmpzPzQ2NzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuQ29va2llU3RvcmFnZSA9IHZvaWQgMDtcblxudmFyIGZvcm1hdF9jb29raWVfMSA9IHJlcXVpcmUoXCIuL2Zvcm1hdC1jb29raWVcIik7XG5cbnZhciBwYXJzZV9jb29raWVzXzEgPSByZXF1aXJlKFwiLi9wYXJzZS1jb29raWVzXCIpO1xuXG52YXIgQ29va2llU3RvcmFnZSA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQ29va2llU3RvcmFnZShkZWZhdWx0T3B0aW9ucykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDb29raWVTdG9yYWdlKTtcblxuICAgIHRoaXMuX2RlZmF1bHRPcHRpb25zID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICBkb21haW46IG51bGwsXG4gICAgICBleHBpcmVzOiBudWxsLFxuICAgICAgcGF0aDogbnVsbCxcbiAgICAgIHNlY3VyZTogZmFsc2VcbiAgICB9LCBkZWZhdWx0T3B0aW9ucyk7XG4gICAgaWYgKHR5cGVvZiBQcm94eSAhPT0gXCJ1bmRlZmluZWRcIikgcmV0dXJuIG5ldyBQcm94eSh0aGlzLCBjb29raWVTdG9yYWdlSGFuZGxlcik7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQ29va2llU3RvcmFnZSwgW3tcbiAgICBrZXk6IFwiY2xlYXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2xlYXIoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgcGFyc2VkID0gcGFyc2VfY29va2llc18xLnBhcnNlQ29va2llcyh0aGlzLl9nZXRDb29raWUoKSk7XG4gICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHBhcnNlZCk7XG4gICAgICBrZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICByZXR1cm4gX3RoaXMucmVtb3ZlSXRlbShrZXkpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldEl0ZW1cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0SXRlbShrZXkpIHtcbiAgICAgIHZhciBwYXJzZWQgPSBwYXJzZV9jb29raWVzXzEucGFyc2VDb29raWVzKHRoaXMuX2dldENvb2tpZSgpKTtcbiAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocGFyc2VkLCBrZXkpID8gcGFyc2VkW2tleV0gOiBudWxsO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJrZXlcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24ga2V5KGluZGV4KSB7XG4gICAgICB2YXIgcGFyc2VkID0gcGFyc2VfY29va2llc18xLnBhcnNlQ29va2llcyh0aGlzLl9nZXRDb29raWUoKSk7XG4gICAgICB2YXIgc29ydGVkS2V5cyA9IE9iamVjdC5rZXlzKHBhcnNlZCkuc29ydCgpO1xuICAgICAgcmV0dXJuIGluZGV4IDwgc29ydGVkS2V5cy5sZW5ndGggPyBzb3J0ZWRLZXlzW2luZGV4XSA6IG51bGw7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbW92ZUl0ZW1cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlSXRlbShrZXksIGNvb2tpZU9wdGlvbnMpIHtcbiAgICAgIHZhciBkYXRhID0gXCJcIjtcbiAgICAgIHZhciBvcHRpb25zID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRoaXMuX2RlZmF1bHRPcHRpb25zKSwgY29va2llT3B0aW9ucyksIHtcbiAgICAgICAgZXhwaXJlczogbmV3IERhdGUoMClcbiAgICAgIH0pO1xuICAgICAgdmFyIGZvcm1hdHRlZCA9IGZvcm1hdF9jb29raWVfMS5mb3JtYXRDb29raWUoa2V5LCBkYXRhLCBvcHRpb25zKTtcblxuICAgICAgdGhpcy5fc2V0Q29va2llKGZvcm1hdHRlZCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNldEl0ZW1cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0SXRlbShrZXksIGRhdGEsIG9wdGlvbnMpIHtcbiAgICAgIHZhciBvcHRzID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0aGlzLl9kZWZhdWx0T3B0aW9ucyksIG9wdGlvbnMpO1xuICAgICAgdmFyIGZvcm1hdHRlZCA9IGZvcm1hdF9jb29raWVfMS5mb3JtYXRDb29raWUoa2V5LCBkYXRhLCBvcHRzKTtcblxuICAgICAgdGhpcy5fc2V0Q29va2llKGZvcm1hdHRlZCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9nZXRDb29raWVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2dldENvb2tpZSgpIHtcbiAgICAgIHJldHVybiB0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIgPyBcIlwiIDogdHlwZW9mIGRvY3VtZW50LmNvb2tpZSA9PT0gXCJ1bmRlZmluZWRcIiA/IFwiXCIgOiBkb2N1bWVudC5jb29raWU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9zZXRDb29raWVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX3NldENvb2tpZSh2YWx1ZSkge1xuICAgICAgZG9jdW1lbnQuY29va2llID0gdmFsdWU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImxlbmd0aFwiLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgdmFyIHBhcnNlZCA9IHBhcnNlX2Nvb2tpZXNfMS5wYXJzZUNvb2tpZXModGhpcy5fZ2V0Q29va2llKCkpO1xuICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhwYXJzZWQpO1xuICAgICAgcmV0dXJuIGtleXMubGVuZ3RoO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBDb29raWVTdG9yYWdlO1xufSgpO1xuXG5leHBvcnRzLkNvb2tpZVN0b3JhZ2UgPSBDb29raWVTdG9yYWdlO1xudmFyIGNvb2tpZVN0b3JhZ2VIYW5kbGVyID0ge1xuICBkZWZpbmVQcm9wZXJ0eTogZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBwLCBhdHRyaWJ1dGVzKSB7XG4gICAgdGFyZ2V0LnNldEl0ZW0ocC50b1N0cmluZygpLCBTdHJpbmcoYXR0cmlidXRlcy52YWx1ZSkpO1xuICAgIHJldHVybiB0cnVlO1xuICB9LFxuICBkZWxldGVQcm9wZXJ0eTogZnVuY3Rpb24gZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwKSB7XG4gICAgdGFyZ2V0LnJlbW92ZUl0ZW0ocC50b1N0cmluZygpKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQodGFyZ2V0LCBwLCBfcmVjZWl2ZXIpIHtcbiAgICBpZiAodHlwZW9mIHAgPT09IFwic3RyaW5nXCIgJiYgcCBpbiB0YXJnZXQpIHJldHVybiB0YXJnZXRbcF07XG4gICAgdmFyIHJlc3VsdCA9IHRhcmdldC5nZXRJdGVtKHAudG9TdHJpbmcoKSk7XG4gICAgcmV0dXJuIHJlc3VsdCAhPT0gbnVsbCA/IHJlc3VsdCA6IHVuZGVmaW5lZDtcbiAgfSxcbiAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBwKSB7XG4gICAgaWYgKHAgaW4gdGFyZ2V0KSByZXR1cm4gdW5kZWZpbmVkO1xuICAgIHJldHVybiB7XG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgdmFsdWU6IHRhcmdldC5nZXRJdGVtKHAudG9TdHJpbmcoKSksXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH07XG4gIH0sXG4gIGhhczogZnVuY3Rpb24gaGFzKHRhcmdldCwgcCkge1xuICAgIGlmICh0eXBlb2YgcCA9PT0gXCJzdHJpbmdcIiAmJiBwIGluIHRhcmdldCkgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIHRhcmdldC5nZXRJdGVtKHAudG9TdHJpbmcoKSkgIT09IG51bGw7XG4gIH0sXG4gIG93bktleXM6IGZ1bmN0aW9uIG93bktleXModGFyZ2V0KSB7XG4gICAgdmFyIGtleXMgPSBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGFyZ2V0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIga2V5ID0gdGFyZ2V0LmtleShpKTtcbiAgICAgIGlmIChrZXkgIT09IG51bGwpIGtleXMucHVzaChrZXkpO1xuICAgIH1cblxuICAgIHJldHVybiBrZXlzO1xuICB9LFxuICBwcmV2ZW50RXh0ZW5zaW9uczogZnVuY3Rpb24gcHJldmVudEV4dGVuc2lvbnMoXykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJjYW4ndCBwcmV2ZW50IGV4dGVuc2lvbnMgb24gdGhpcyBwcm94eSBvYmplY3RcIik7XG4gIH0sXG4gIHNldDogZnVuY3Rpb24gc2V0KHRhcmdldCwgcCwgdmFsdWUsIF8pIHtcbiAgICB0YXJnZXQuc2V0SXRlbShwLnRvU3RyaW5nKCksIFN0cmluZyh2YWx1ZSkpO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/cookie-storage/lib/cookie-storage.js\n");

/***/ }),

/***/ "./node_modules/cookie-storage/lib/format-cookie.js":
/*!**********************************************************!*\
  !*** ./node_modules/cookie-storage/lib/format-cookie.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.formatCookie = void 0;\n\nvar getSameSiteValue = function getSameSiteValue(o) {\n  var sameSite = o.sameSite;\n  if (typeof sameSite === \"undefined\") return null;\n  if ([\"none\", \"lax\", \"strict\"].indexOf(sameSite.toLowerCase()) >= 0) return sameSite;\n  return null;\n};\n\nvar formatOptions = function formatOptions(o) {\n  var path = o.path,\n      domain = o.domain,\n      expires = o.expires,\n      secure = o.secure;\n  var sameSiteValue = getSameSiteValue(o);\n  return [typeof path === \"undefined\" || path === null ? \"\" : \";path=\" + path, typeof domain === \"undefined\" || domain === null ? \"\" : \";domain=\" + domain, typeof expires === \"undefined\" || expires === null ? \"\" : \";expires=\" + expires.toUTCString(), typeof secure === \"undefined\" || secure === false ? \"\" : \";secure\", sameSiteValue === null ? \"\" : \";SameSite=\" + sameSiteValue].join(\"\");\n};\n\nvar formatCookie = function formatCookie(k, d, o) {\n  return [encodeURIComponent(k), \"=\", encodeURIComponent(d), formatOptions(o)].join(\"\");\n};\n\nexports.formatCookie = formatCookie;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29va2llLXN0b3JhZ2UvbGliL2Zvcm1hdC1jb29raWUuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysb0JBQW9COztBQUVwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFLHlFQUF5RSwrRUFBK0UsOEZBQThGLHlDQUF5QztBQUMvVjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jb29raWUtc3RvcmFnZS9saWIvZm9ybWF0LWNvb2tpZS5qcz8zNTJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5mb3JtYXRDb29raWUgPSB2b2lkIDA7XG5cbnZhciBnZXRTYW1lU2l0ZVZhbHVlID0gZnVuY3Rpb24gZ2V0U2FtZVNpdGVWYWx1ZShvKSB7XG4gIHZhciBzYW1lU2l0ZSA9IG8uc2FtZVNpdGU7XG4gIGlmICh0eXBlb2Ygc2FtZVNpdGUgPT09IFwidW5kZWZpbmVkXCIpIHJldHVybiBudWxsO1xuICBpZiAoW1wibm9uZVwiLCBcImxheFwiLCBcInN0cmljdFwiXS5pbmRleE9mKHNhbWVTaXRlLnRvTG93ZXJDYXNlKCkpID49IDApIHJldHVybiBzYW1lU2l0ZTtcbiAgcmV0dXJuIG51bGw7XG59O1xuXG52YXIgZm9ybWF0T3B0aW9ucyA9IGZ1bmN0aW9uIGZvcm1hdE9wdGlvbnMobykge1xuICB2YXIgcGF0aCA9IG8ucGF0aCxcbiAgICAgIGRvbWFpbiA9IG8uZG9tYWluLFxuICAgICAgZXhwaXJlcyA9IG8uZXhwaXJlcyxcbiAgICAgIHNlY3VyZSA9IG8uc2VjdXJlO1xuICB2YXIgc2FtZVNpdGVWYWx1ZSA9IGdldFNhbWVTaXRlVmFsdWUobyk7XG4gIHJldHVybiBbdHlwZW9mIHBhdGggPT09IFwidW5kZWZpbmVkXCIgfHwgcGF0aCA9PT0gbnVsbCA/IFwiXCIgOiBcIjtwYXRoPVwiICsgcGF0aCwgdHlwZW9mIGRvbWFpbiA9PT0gXCJ1bmRlZmluZWRcIiB8fCBkb21haW4gPT09IG51bGwgPyBcIlwiIDogXCI7ZG9tYWluPVwiICsgZG9tYWluLCB0eXBlb2YgZXhwaXJlcyA9PT0gXCJ1bmRlZmluZWRcIiB8fCBleHBpcmVzID09PSBudWxsID8gXCJcIiA6IFwiO2V4cGlyZXM9XCIgKyBleHBpcmVzLnRvVVRDU3RyaW5nKCksIHR5cGVvZiBzZWN1cmUgPT09IFwidW5kZWZpbmVkXCIgfHwgc2VjdXJlID09PSBmYWxzZSA/IFwiXCIgOiBcIjtzZWN1cmVcIiwgc2FtZVNpdGVWYWx1ZSA9PT0gbnVsbCA/IFwiXCIgOiBcIjtTYW1lU2l0ZT1cIiArIHNhbWVTaXRlVmFsdWVdLmpvaW4oXCJcIik7XG59O1xuXG52YXIgZm9ybWF0Q29va2llID0gZnVuY3Rpb24gZm9ybWF0Q29va2llKGssIGQsIG8pIHtcbiAgcmV0dXJuIFtlbmNvZGVVUklDb21wb25lbnQoayksIFwiPVwiLCBlbmNvZGVVUklDb21wb25lbnQoZCksIGZvcm1hdE9wdGlvbnMobyldLmpvaW4oXCJcIik7XG59O1xuXG5leHBvcnRzLmZvcm1hdENvb2tpZSA9IGZvcm1hdENvb2tpZTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/cookie-storage/lib/format-cookie.js\n");

/***/ }),

/***/ "./node_modules/cookie-storage/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/cookie-storage/lib/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar cookie_storage_1 = __webpack_require__(/*! ./cookie-storage */ \"./node_modules/cookie-storage/lib/cookie-storage.js\");\n\nObject.defineProperty(exports, \"CookieStorage\", ({\n  enumerable: true,\n  get: function get() {\n    return cookie_storage_1.CookieStorage;\n  }\n}));\n\nvar format_cookie_1 = __webpack_require__(/*! ./format-cookie */ \"./node_modules/cookie-storage/lib/format-cookie.js\");\n\nObject.defineProperty(exports, \"formatCookie\", ({\n  enumerable: true,\n  get: function get() {\n    return format_cookie_1.formatCookie;\n  }\n}));\n\nvar parse_cookies_1 = __webpack_require__(/*! ./parse-cookies */ \"./node_modules/cookie-storage/lib/parse-cookies.js\");\n\nObject.defineProperty(exports, \"parseCookies\", ({\n  enumerable: true,\n  get: function get() {\n    return parse_cookies_1.parseCookies;\n  }\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29va2llLXN0b3JhZ2UvbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQzs7QUFFRix1QkFBdUIsbUJBQU8sQ0FBQyw2RUFBa0I7O0FBRWpELGlEQUFnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQzs7QUFFRixzQkFBc0IsbUJBQU8sQ0FBQywyRUFBaUI7O0FBRS9DLGdEQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQzs7QUFFRixzQkFBc0IsbUJBQU8sQ0FBQywyRUFBaUI7O0FBRS9DLGdEQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvY29va2llLXN0b3JhZ2UvbGliL2luZGV4LmpzPzAzNWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBjb29raWVfc3RvcmFnZV8xID0gcmVxdWlyZShcIi4vY29va2llLXN0b3JhZ2VcIik7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvb2tpZVN0b3JhZ2VcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gY29va2llX3N0b3JhZ2VfMS5Db29raWVTdG9yYWdlO1xuICB9XG59KTtcblxudmFyIGZvcm1hdF9jb29raWVfMSA9IHJlcXVpcmUoXCIuL2Zvcm1hdC1jb29raWVcIik7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZvcm1hdENvb2tpZVwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBmb3JtYXRfY29va2llXzEuZm9ybWF0Q29va2llO1xuICB9XG59KTtcblxudmFyIHBhcnNlX2Nvb2tpZXNfMSA9IHJlcXVpcmUoXCIuL3BhcnNlLWNvb2tpZXNcIik7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlQ29va2llc1wiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBwYXJzZV9jb29raWVzXzEucGFyc2VDb29raWVzO1xuICB9XG59KTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/cookie-storage/lib/index.js\n");

/***/ }),

/***/ "./node_modules/cookie-storage/lib/parse-cookies.js":
/*!**********************************************************!*\
  !*** ./node_modules/cookie-storage/lib/parse-cookies.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.parseCookies = void 0;\n\nvar parseCookies = function parseCookies(s) {\n  if (s.length === 0) return {};\n  var parsed = {};\n  var pattern = new RegExp(\"\\\\s*;\\\\s*\");\n  s.split(pattern).forEach(function (i) {\n    var _i$split = i.split(\"=\"),\n        _i$split2 = _slicedToArray(_i$split, 2),\n        encodedKey = _i$split2[0],\n        encodedValue = _i$split2[1];\n\n    var key = decodeURIComponent(encodedKey);\n    var value = decodeURIComponent(encodedValue);\n    parsed[key] = value;\n  });\n  return parsed;\n};\n\nexports.parseCookies = parseCookies;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29va2llLXN0b3JhZ2UvbGliL3BhcnNlLWNvb2tpZXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsa0NBQWtDOztBQUVsQyw4QkFBOEI7O0FBRTlCLGtEQUFrRCxnQkFBZ0IsZ0VBQWdFLHdEQUF3RCw2REFBNkQsc0RBQXNEOztBQUU3Uyx1Q0FBdUMsdURBQXVELHVDQUF1QyxTQUFTLE9BQU8sb0JBQW9COztBQUV6Syx5Q0FBeUMsZ0ZBQWdGLGVBQWUsZUFBZSxnQkFBZ0Isb0JBQW9CLE1BQU0sMENBQTBDLCtCQUErQixhQUFhLHFCQUFxQix1Q0FBdUMsY0FBYyxXQUFXLFlBQVksVUFBVSxNQUFNLG1EQUFtRCxVQUFVLHNCQUFzQjs7QUFFM2QsZ0NBQWdDOztBQUVoQyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixvQkFBb0I7O0FBRXBCO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvY29va2llLXN0b3JhZ2UvbGliL3BhcnNlLWNvb2tpZXMuanM/ZDVhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cblxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XG5cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwidW5kZWZpbmVkXCIgfHwgIShTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpKSByZXR1cm47IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMucGFyc2VDb29raWVzID0gdm9pZCAwO1xuXG52YXIgcGFyc2VDb29raWVzID0gZnVuY3Rpb24gcGFyc2VDb29raWVzKHMpIHtcbiAgaWYgKHMubGVuZ3RoID09PSAwKSByZXR1cm4ge307XG4gIHZhciBwYXJzZWQgPSB7fTtcbiAgdmFyIHBhdHRlcm4gPSBuZXcgUmVnRXhwKFwiXFxcXHMqO1xcXFxzKlwiKTtcbiAgcy5zcGxpdChwYXR0ZXJuKS5mb3JFYWNoKGZ1bmN0aW9uIChpKSB7XG4gICAgdmFyIF9pJHNwbGl0ID0gaS5zcGxpdChcIj1cIiksXG4gICAgICAgIF9pJHNwbGl0MiA9IF9zbGljZWRUb0FycmF5KF9pJHNwbGl0LCAyKSxcbiAgICAgICAgZW5jb2RlZEtleSA9IF9pJHNwbGl0MlswXSxcbiAgICAgICAgZW5jb2RlZFZhbHVlID0gX2kkc3BsaXQyWzFdO1xuXG4gICAgdmFyIGtleSA9IGRlY29kZVVSSUNvbXBvbmVudChlbmNvZGVkS2V5KTtcbiAgICB2YXIgdmFsdWUgPSBkZWNvZGVVUklDb21wb25lbnQoZW5jb2RlZFZhbHVlKTtcbiAgICBwYXJzZWRba2V5XSA9IHZhbHVlO1xuICB9KTtcbiAgcmV0dXJuIHBhcnNlZDtcbn07XG5cbmV4cG9ydHMucGFyc2VDb29raWVzID0gcGFyc2VDb29raWVzOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/cookie-storage/lib/parse-cookies.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fhome%2Frunner%2Fvwo-node-nextjs-breaking-ssr%2Fpages%2Findex.js&page=%2F!":
/*!********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fhome%2Frunner%2Fvwo-node-nextjs-breaking-ssr%2Fpages%2Findex.js&page=%2F! ***!
  \********************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return __webpack_require__(/*! ./pages/index.js */ \"./pages/index.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD0lMkZob21lJTJGcnVubmVyJTJGdndvLW5vZGUtbmV4dGpzLWJyZWFraW5nLXNzciUyRnBhZ2VzJTJGaW5kZXguanMmcGFnZT0lMkYhLmpzIiwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsMENBQWtCO0FBQ3pDO0FBQ0E7QUFDQSxPQUFPLElBQVU7QUFDakIsTUFBTSxVQUFVO0FBQ2hCO0FBQ0EsT0FBTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz83ZGRlIl0sInNvdXJjZXNDb250ZW50IjpbIlxuICAgICh3aW5kb3cuX19ORVhUX1AgPSB3aW5kb3cuX19ORVhUX1AgfHwgW10pLnB1c2goW1xuICAgICAgXCIvXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwiLi9wYWdlcy9pbmRleC5qc1wiKTtcbiAgICAgIH1cbiAgICBdKTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24gKCkge1xuICAgICAgICB3aW5kb3cuX19ORVhUX1AucHVzaChbXCIvXCJdKVxuICAgICAgfSk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fhome%2Frunner%2Fvwo-node-nextjs-breaking-ssr%2Fpages%2Findex.js&page=%2F!\n");

/***/ }),

/***/ "./config.js":
/*!*******************!*\
  !*** ./config.js ***!
  \*******************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VWO_ACCOUNT_ID\": function() { return /* binding */ VWO_ACCOUNT_ID; },\n/* harmony export */   \"VWO_EXPERIMENT_CAMPAIGN_KEY\": function() { return /* binding */ VWO_EXPERIMENT_CAMPAIGN_KEY; },\n/* harmony export */   \"VWO_EXPERIMENT_CONTROL_VARIATION_KEY\": function() { return /* binding */ VWO_EXPERIMENT_CONTROL_VARIATION_KEY; },\n/* harmony export */   \"VWO_EXPERIMENT_TEST_VARIATION_KEY\": function() { return /* binding */ VWO_EXPERIMENT_TEST_VARIATION_KEY; },\n/* harmony export */   \"VWO_SDK_KEY\": function() { return /* binding */ VWO_SDK_KEY; }\n/* harmony export */ });\nvar VWO_ACCOUNT_ID = \"627540\";\nvar VWO_SDK_KEY = \"d6080b7a38521bad7abf9dd393a17a07\";\nvar VWO_EXPERIMENT_CAMPAIGN_KEY = \"Hero-Fast Cash-Left/Centered\";\nvar VWO_EXPERIMENT_CONTROL_VARIATION_KEY = \"Control\";\nvar VWO_EXPERIMENT_TEST_VARIATION_KEY = \"Centered\";\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb25maWcuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBTyxJQUFNQSxjQUFjLEdBQUdDLFFBQXNDLENBQUM7QUFDOUQsSUFBTUcsV0FBVyxHQUFHSCxrQ0FBbUMsQ0FBQztBQUV4RCxJQUFNSywyQkFBMkIsR0FBR0wsOEJBQW1ELENBQUM7QUFDeEYsSUFBTU8sb0NBQW9DLEdBQUdQLFNBQTRELENBQUM7QUFDMUcsSUFBTVMsaUNBQWlDLEdBQUdULFVBQXlELENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29uZmlnLmpzP2MyYjMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFZXT19BQ0NPVU5UX0lEID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfVldPX0FDQ09VTlRfSUQ7XG5leHBvcnQgY29uc3QgVldPX1NES19LRVkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19WV09fU0RLX0tFWTtcblxuZXhwb3J0IGNvbnN0IFZXT19FWFBFUklNRU5UX0NBTVBBSUdOX0tFWSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1ZXT19FWFBFUklNRU5UX0NBTVBBSUdOX0tFWTtcbmV4cG9ydCBjb25zdCBWV09fRVhQRVJJTUVOVF9DT05UUk9MX1ZBUklBVElPTl9LRVkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19WV09fRVhQRVJJTUVOVF9DT05UUk9MX1ZBUklBVElPTl9LRVk7XG5leHBvcnQgY29uc3QgVldPX0VYUEVSSU1FTlRfVEVTVF9WQVJJQVRJT05fS0VZID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfVldPX0VYUEVSSU1FTlRfVEVTVF9WQVJJQVRJT05fS0VZOyJdLCJuYW1lcyI6WyJWV09fQUNDT1VOVF9JRCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19WV09fQUNDT1VOVF9JRCIsIlZXT19TREtfS0VZIiwiTkVYVF9QVUJMSUNfVldPX1NES19LRVkiLCJWV09fRVhQRVJJTUVOVF9DQU1QQUlHTl9LRVkiLCJORVhUX1BVQkxJQ19WV09fRVhQRVJJTUVOVF9DQU1QQUlHTl9LRVkiLCJWV09fRVhQRVJJTUVOVF9DT05UUk9MX1ZBUklBVElPTl9LRVkiLCJORVhUX1BVQkxJQ19WV09fRVhQRVJJTUVOVF9DT05UUk9MX1ZBUklBVElPTl9LRVkiLCJWV09fRVhQRVJJTUVOVF9URVNUX1ZBUklBVElPTl9LRVkiLCJORVhUX1BVQkxJQ19WV09fRVhQRVJJTUVOVF9URVNUX1ZBUklBVElPTl9LRVkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./config.js\n");

/***/ }),

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__N_SSP\": function() { return /* binding */ __N_SSP; },\n/* harmony export */   \"default\": function() { return /* binding */ IndexPage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config */ \"./config.js\");\n/* harmony import */ var _vwo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vwo */ \"./vwo.js\");\n\n\n\nvar _s = $RefreshSig$();\nvar __N_SSP = true;\nfunction IndexPage(param) {\n    var userID = param.userID;\n    _s();\n    var ref = (0,_vwo__WEBPACK_IMPORTED_MODULE_2__.useVWOExperiment)({\n        campaignKey: _config__WEBPACK_IMPORTED_MODULE_1__.VWO_EXPERIMENT_CAMPAIGN_KEY,\n        userID: userID\n    }), variation = ref.data;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                children: \"Minimal repro of VWO SDK with broken SSR\"\n            }, void 0, false, {\n                fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                lineNumber: 22,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                children: \"Comment out the lines related to prefetching to get SSR to break.\"\n            }, void 0, false, {\n                fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                lineNumber: 23,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                children: \"View this page's source to see SSR being broken.\"\n            }, void 0, false, {\n                fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                lineNumber: 26,\n                columnNumber: 7\n            }, this),\n            variation === _config__WEBPACK_IMPORTED_MODULE_1__.VWO_EXPERIMENT_CONTROL_VARIATION_KEY ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                style: {\n                    color: \"gray\"\n                },\n                children: [\n                    \"Serving the control \",\n                    variation\n                ]\n            }, void 0, true, {\n                fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                lineNumber: 31,\n                columnNumber: 9\n            }, this) : variation === _config__WEBPACK_IMPORTED_MODULE_1__.VWO_EXPERIMENT_TEST_VARIATION_KEY ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                style: {\n                    color: \"green\"\n                },\n                children: [\n                    \"Serving new variation \",\n                    variation\n                ]\n            }, void 0, true, {\n                fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                lineNumber: 35,\n                columnNumber: 9\n            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                style: {\n                    color: \"red\"\n                },\n                children: \"Serving no experiment\"\n            }, void 0, false, {\n                fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                lineNumber: 39,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                children: \"Configuration\"\n            }, void 0, false, {\n                fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                lineNumber: 44,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dl\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dt\", {\n                        children: \"VWO Account ID\"\n                    }, void 0, false, {\n                        fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                        lineNumber: 46,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dd\", {\n                        children: _config__WEBPACK_IMPORTED_MODULE_1__.VWO_ACCOUNT_ID\n                    }, void 0, false, {\n                        fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                        lineNumber: 47,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dt\", {\n                        children: \"VWO SDK key\"\n                    }, void 0, false, {\n                        fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                        lineNumber: 49,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dd\", {\n                        children: _config__WEBPACK_IMPORTED_MODULE_1__.VWO_SDK_KEY\n                    }, void 0, false, {\n                        fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                        lineNumber: 50,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dt\", {\n                        children: \"VWO campaign key\"\n                    }, void 0, false, {\n                        fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                        lineNumber: 52,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dd\", {\n                        children: _config__WEBPACK_IMPORTED_MODULE_1__.VWO_EXPERIMENT_CAMPAIGN_KEY\n                    }, void 0, false, {\n                        fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                        lineNumber: 53,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dt\", {\n                        children: \"VWO control variation key\"\n                    }, void 0, false, {\n                        fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                        lineNumber: 55,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dd\", {\n                        children: _config__WEBPACK_IMPORTED_MODULE_1__.VWO_EXPERIMENT_CONTROL_VARIATION_KEY\n                    }, void 0, false, {\n                        fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                        lineNumber: 56,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dt\", {\n                        children: \"VWO experiment variation key\"\n                    }, void 0, false, {\n                        fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                        lineNumber: 58,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dd\", {\n                        children: _config__WEBPACK_IMPORTED_MODULE_1__.VWO_EXPERIMENT_TEST_VARIATION_KEY\n                    }, void 0, false, {\n                        fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                        lineNumber: 59,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dt\", {\n                        children: [\n                            \"VWO user cookie (ie \",\n                            _vwo__WEBPACK_IMPORTED_MODULE_2__.VWO_UUID_COOKIE_NAME,\n                            \")\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                        lineNumber: 61,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dd\", {\n                        children: userID ? userID : \"No cookie found, are you running an adblocker?\"\n                    }, void 0, false, {\n                        fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                        lineNumber: 62,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n                lineNumber: 45,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/runner/vwo-node-nextjs-breaking-ssr/pages/index.js\",\n        lineNumber: 21,\n        columnNumber: 5\n    }, this);\n};\n_s(IndexPage, \"hlTRKHDDKQdoFhO3kLdf1882k30=\", false, function() {\n    return [\n        _vwo__WEBPACK_IMPORTED_MODULE_2__.useVWOExperiment\n    ];\n});\n_c = IndexPage;\nvar _c;\n$RefreshReg$(_c, \"IndexPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQVNtQjtBQUtIOzs7QUFFRCxTQUFTTyxTQUFTLENBQUMsS0FBVSxFQUFFO1FBQVosTUFBUSxHQUFSLEtBQVUsQ0FBUkMsTUFBTTs7SUFDeEMsSUFBNEJGLEdBQXNFLEdBQXRFQSxzREFBZ0IsQ0FBQztRQUFFRyxXQUFXLEVBQUVQLGdFQUEyQjtRQUFFTSxNQUFNLEVBQU5BLE1BQU07S0FBRSxDQUFDLEVBQTFGRSxTQUFlLEdBQUtKLEdBQXNFLENBQTFGSSxJQUFJO0lBRVoscUJBQ0UsOERBQUNFLEtBQUc7OzBCQUNGLDhEQUFDQyxJQUFFOzBCQUFDLDBDQUF3Qzs7Ozs7b0JBQUs7MEJBQ2pELDhEQUFDQyxHQUFDOzBCQUFDLG1FQUVIOzs7OztvQkFBSTswQkFDSiw4REFBQ0EsR0FBQzswQkFBQyxrREFFSDs7Ozs7b0JBQUk7WUFFSEgsU0FBUyxLQUFLUix5RUFBb0MsaUJBQ2pELDhEQUFDWSxJQUFFO2dCQUFDQyxLQUFLLEVBQUU7b0JBQUVDLEtBQUssRUFBRSxNQUFNO2lCQUFFOztvQkFBRSxzQkFDUjtvQkFBQ04sU0FBUzs7Ozs7O29CQUMzQixHQUNIQSxTQUFTLEtBQUtQLHNFQUFpQyxpQkFDakQsOERBQUNXLElBQUU7Z0JBQUNDLEtBQUssRUFBRTtvQkFBRUMsS0FBSyxFQUFFLE9BQU87aUJBQUU7O29CQUFFLHdCQUNQO29CQUFDTixTQUFTOzs7Ozs7b0JBQzdCLGlCQUVMLDhEQUFDSSxJQUFFO2dCQUFDQyxLQUFLLEVBQUU7b0JBQUVDLEtBQUssRUFBRSxLQUFLO2lCQUFFOzBCQUFFLHVCQUU3Qjs7Ozs7b0JBQUs7MEJBR1AsOERBQUNDLElBQUU7MEJBQUMsZUFBYTs7Ozs7b0JBQUs7MEJBQ3RCLDhEQUFDQyxJQUFFOztrQ0FDRCw4REFBQ0MsSUFBRTtrQ0FBQyxnQkFBYzs7Ozs7NEJBQUs7a0NBQ3ZCLDhEQUFDQyxJQUFFO2tDQUFFckIsbURBQWM7Ozs7OzRCQUFNO2tDQUV6Qiw4REFBQ29CLElBQUU7a0NBQUMsYUFBVzs7Ozs7NEJBQUs7a0NBQ3BCLDhEQUFDQyxJQUFFO2tDQUFFcEIsZ0RBQVc7Ozs7OzRCQUFNO2tDQUV0Qiw4REFBQ21CLElBQUU7a0NBQUMsa0JBQWdCOzs7Ozs0QkFBSztrQ0FDekIsOERBQUNDLElBQUU7a0NBQUVuQixnRUFBMkI7Ozs7OzRCQUFNO2tDQUV0Qyw4REFBQ2tCLElBQUU7a0NBQUMsMkJBQXlCOzs7Ozs0QkFBSztrQ0FDbEMsOERBQUNDLElBQUU7a0NBQUVsQix5RUFBb0M7Ozs7OzRCQUFNO2tDQUUvQyw4REFBQ2lCLElBQUU7a0NBQUMsOEJBQTRCOzs7Ozs0QkFBSztrQ0FDckMsOERBQUNDLElBQUU7a0NBQUVqQixzRUFBaUM7Ozs7OzRCQUFNO2tDQUU1Qyw4REFBQ2dCLElBQUU7OzRCQUFDLHNCQUFvQjs0QkFBQ2Ysc0RBQW9COzRCQUFDLEdBQUM7Ozs7Ozs0QkFBSztrQ0FDcEQsOERBQUNnQixJQUFFO2tDQUFFYixNQUFNLEdBQUdBLE1BQU0sR0FBRyxnREFBZ0Q7Ozs7OzRCQUFNOzs7Ozs7b0JBQzFFOzs7Ozs7WUFDRCxDQUNQO0NBQ0Y7R0FqRHVCRCxTQUFTOztRQUNIRCxrREFBZ0I7OztBQUR0QkMsS0FBQUEsU0FBUyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9pbmRleC5qcz9iZWU3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlQ29va2llcyB9IGZyb20gJ2Nvb2tpZS1zdG9yYWdlJztcbmltcG9ydCB7IFF1ZXJ5Q2xpZW50LCBkZWh5ZHJhdGUgfSBmcm9tICdyZWFjdC1xdWVyeSc7XG5cbmltcG9ydCB7XG4gIFZXT19BQ0NPVU5UX0lELFxuICBWV09fU0RLX0tFWSxcbiAgVldPX0VYUEVSSU1FTlRfQ0FNUEFJR05fS0VZLFxuICBWV09fRVhQRVJJTUVOVF9DT05UUk9MX1ZBUklBVElPTl9LRVksXG4gIFZXT19FWFBFUklNRU5UX1RFU1RfVkFSSUFUSU9OX0tFWSxcbn0gZnJvbSAnLi4vY29uZmlnJztcbmltcG9ydCB7XG4gIFZXT19VVUlEX0NPT0tJRV9OQU1FLFxuICB1c2VWV09FeHBlcmltZW50LFxuICBwcmVmZXRjaFZXT0V4cGVyaW1lbnQsXG59IGZyb20gJy4uL3Z3byc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEluZGV4UGFnZSh7IHVzZXJJRCB9KSB7XG4gIGNvbnN0IHsgZGF0YTogdmFyaWF0aW9uIH0gPSB1c2VWV09FeHBlcmltZW50KHsgY2FtcGFpZ25LZXk6IFZXT19FWFBFUklNRU5UX0NBTVBBSUdOX0tFWSwgdXNlcklEIH0pO1xuICBcbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPGgxPk1pbmltYWwgcmVwcm8gb2YgVldPIFNESyB3aXRoIGJyb2tlbiBTU1I8L2gxPlxuICAgICAgPHA+XG4gICAgICAgIENvbW1lbnQgb3V0IHRoZSBsaW5lcyByZWxhdGVkIHRvIHByZWZldGNoaW5nIHRvIGdldCBTU1IgdG8gYnJlYWsuXG4gICAgICA8L3A+XG4gICAgICA8cD5cbiAgICAgICAgVmlldyB0aGlzIHBhZ2UncyBzb3VyY2UgdG8gc2VlIFNTUiBiZWluZyBicm9rZW4uXG4gICAgICA8L3A+XG5cbiAgICAgIHt2YXJpYXRpb24gPT09IFZXT19FWFBFUklNRU5UX0NPTlRST0xfVkFSSUFUSU9OX0tFWSA/IChcbiAgICAgICAgPGgyIHN0eWxlPXt7IGNvbG9yOiAnZ3JheScgfX0+XG4gICAgICAgICAgU2VydmluZyB0aGUgY29udHJvbCB7dmFyaWF0aW9ufVxuICAgICAgICA8L2gyPlxuICAgICAgKSA6IHZhcmlhdGlvbiA9PT0gVldPX0VYUEVSSU1FTlRfVEVTVF9WQVJJQVRJT05fS0VZID8gKFxuICAgICAgICA8aDIgc3R5bGU9e3sgY29sb3I6ICdncmVlbicgfX0+XG4gICAgICAgICAgU2VydmluZyBuZXcgdmFyaWF0aW9uIHt2YXJpYXRpb259XG4gICAgICAgIDwvaDI+XG4gICAgICApIDogKFxuICAgICAgICA8aDIgc3R5bGU9e3sgY29sb3I6ICdyZWQnIH19PlxuICAgICAgICAgIFNlcnZpbmcgbm8gZXhwZXJpbWVudFxuICAgICAgICA8L2gyPlxuICAgICAgKX1cbiAgICAgIFxuICAgICAgPGgzPkNvbmZpZ3VyYXRpb248L2gzPlxuICAgICAgPGRsPlxuICAgICAgICA8ZHQ+VldPIEFjY291bnQgSUQ8L2R0PlxuICAgICAgICA8ZGQ+e1ZXT19BQ0NPVU5UX0lEfTwvZGQ+XG4gICAgICAgIFxuICAgICAgICA8ZHQ+VldPIFNESyBrZXk8L2R0PlxuICAgICAgICA8ZGQ+e1ZXT19TREtfS0VZfTwvZGQ+XG5cbiAgICAgICAgPGR0PlZXTyBjYW1wYWlnbiBrZXk8L2R0PlxuICAgICAgICA8ZGQ+e1ZXT19FWFBFUklNRU5UX0NBTVBBSUdOX0tFWX08L2RkPlxuXG4gICAgICAgIDxkdD5WV08gY29udHJvbCB2YXJpYXRpb24ga2V5PC9kdD5cbiAgICAgICAgPGRkPntWV09fRVhQRVJJTUVOVF9DT05UUk9MX1ZBUklBVElPTl9LRVl9PC9kZD5cblxuICAgICAgICA8ZHQ+VldPIGV4cGVyaW1lbnQgdmFyaWF0aW9uIGtleTwvZHQ+XG4gICAgICAgIDxkZD57VldPX0VYUEVSSU1FTlRfVEVTVF9WQVJJQVRJT05fS0VZfTwvZGQ+XG5cbiAgICAgICAgPGR0PlZXTyB1c2VyIGNvb2tpZSAoaWUge1ZXT19VVUlEX0NPT0tJRV9OQU1FfSk8L2R0PlxuICAgICAgICA8ZGQ+e3VzZXJJRCA/IHVzZXJJRCA6ICdObyBjb29raWUgZm91bmQsIGFyZSB5b3UgcnVubmluZyBhbiBhZGJsb2NrZXI/J308L2RkPlxuICAgICAgPC9kbD5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKHsgcmVxIH0pIHtcbiAgY29uc3QgY29va2llcyA9IHBhcnNlQ29va2llcyhyZXE/LmhlYWRlcnM/LmNvb2tpZSB8fCBbXSk7XG4gIGNvbnN0IHVzZXJJRCA9IGNvb2tpZXNbVldPX1VVSURfQ09PS0lFX05BTUVdO1xuXG4gIGNvbnN0IHF1ZXJ5Q2xpZW50ID0gbmV3IFF1ZXJ5Q2xpZW50KCk7XG5cbiAgY29uc29sZS5sb2coJ3VzZXJJRCcsIHVzZXJJRCk7XG4gIFxuICAvLyBTU1Igb2YgVldPIGNhdXNlcyB0aGUgYXBwIHRvIGNyYXNoIHdpdGggRUNPTk5SRVNFVCxcbiAgLy8gdW5jb21tZW50IGJlbG93IHRvIHJlcHJvZHVjZSB0aGUgY3Jhc2hcbiAgaWYgKHVzZXJJRCkge1xuICAgIGF3YWl0IHByZWZldGNoVldPRXhwZXJpbWVudCh7XG4gICAgICBxdWVyeUNsaWVudCxcbiAgICAgIGNhbXBhaWduS2V5OiBWV09fRVhQRVJJTUVOVF9DQU1QQUlHTl9LRVksXG4gICAgICB1c2VySUQsXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHByb3BzOiB7XG4gICAgICB1c2VySUQ6IHVzZXJJRCA/PyAnJyxcbiAgICAgIGRlaHlkcmF0ZWRTdGF0ZTogZGVoeWRyYXRlKHF1ZXJ5Q2xpZW50KSxcbiAgICB9LFxuICB9XG59Il0sIm5hbWVzIjpbIlZXT19BQ0NPVU5UX0lEIiwiVldPX1NES19LRVkiLCJWV09fRVhQRVJJTUVOVF9DQU1QQUlHTl9LRVkiLCJWV09fRVhQRVJJTUVOVF9DT05UUk9MX1ZBUklBVElPTl9LRVkiLCJWV09fRVhQRVJJTUVOVF9URVNUX1ZBUklBVElPTl9LRVkiLCJWV09fVVVJRF9DT09LSUVfTkFNRSIsInVzZVZXT0V4cGVyaW1lbnQiLCJJbmRleFBhZ2UiLCJ1c2VySUQiLCJjYW1wYWlnbktleSIsImRhdGEiLCJ2YXJpYXRpb24iLCJkaXYiLCJoMSIsInAiLCJoMiIsInN0eWxlIiwiY29sb3IiLCJoMyIsImRsIiwiZHQiLCJkZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ }),

/***/ "./vwo.js":
/*!****************!*\
  !*** ./vwo.js ***!
  \****************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VWO_UUID_COOKIE_NAME\": function() { return /* binding */ VWO_UUID_COOKIE_NAME; },\n/* harmony export */   \"fetchVWOExperiment\": function() { return /* binding */ fetchVWOExperiment; },\n/* harmony export */   \"getVWOClient\": function() { return /* binding */ getVWOClient; },\n/* harmony export */   \"getVWOExperiment\": function() { return /* binding */ getVWOExperiment; },\n/* harmony export */   \"prefetchVWOExperiment\": function() { return /* binding */ prefetchVWOExperiment; },\n/* harmony export */   \"useVWOExperiment\": function() { return /* binding */ useVWOExperiment; }\n/* harmony export */ });\n/* harmony import */ var _home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js */ \"./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\");\n/* harmony import */ var _home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vwo_node_sdk__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vwo-node-sdk */ \"./node_modules/vwo-node-sdk/dist/vwo-javascript-sdk.js\");\n/* harmony import */ var vwo_node_sdk__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vwo_node_sdk__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-query */ \"./node_modules/react-query/es/index.js\");\n/* harmony import */ var cookie_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! cookie-storage */ \"./node_modules/cookie-storage/lib/index.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config */ \"./config.js\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\n\n\n\n\n\nvar _s = $RefreshSig$();\nvar VWO_UUID_COOKIE_NAME = \"_vwo_uuid_v2\";\nfunction getQueryKey(param) {\n    var campaignKey = param.campaignKey, userID = param.userID;\n    return [\n        \"vwo-experiment\",\n        campaignKey,\n        userID\n    ];\n}\nfunction getVWOClient() {\n    return _getVWOClient.apply(this, arguments);\n}\nfunction _getVWOClient() {\n    _getVWOClient = _asyncToGenerator(_home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n        var settingsFile, client;\n        return _home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.next = 2;\n                    return vwo_node_sdk__WEBPACK_IMPORTED_MODULE_1___default().getSettingsFile(_config__WEBPACK_IMPORTED_MODULE_4__.VWO_ACCOUNT_ID, _config__WEBPACK_IMPORTED_MODULE_4__.VWO_SDK_KEY);\n                case 2:\n                    settingsFile = _ctx.sent;\n                    client = vwo_node_sdk__WEBPACK_IMPORTED_MODULE_1___default().launch({\n                        settingsFile: settingsFile\n                    });\n                    return _ctx.abrupt(\"return\", client);\n                case 5:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return _getVWOClient.apply(this, arguments);\n}\nfunction getVWOExperiment(_) {\n    return _getVWOExperiment.apply(this, arguments);\n}\nfunction _getVWOExperiment() {\n    _getVWOExperiment = _asyncToGenerator(_home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(param) {\n        var campaignKey, userID, client, variation;\n        return _home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    campaignKey = param.campaignKey, userID = param.userID;\n                    _ctx.next = 3;\n                    return getVWOClient();\n                case 3:\n                    client = _ctx.sent;\n                    console.log(campaignKey, userID);\n                    variation = client.activate(campaignKey, userID);\n                    console.log(variation);\n                    return _ctx.abrupt(\"return\", variation);\n                case 8:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return _getVWOExperiment.apply(this, arguments);\n}\nfunction prefetchVWOExperiment(_) {\n    return _prefetchVWOExperiment.apply(this, arguments);\n}\nfunction _prefetchVWOExperiment() {\n    _prefetchVWOExperiment = _asyncToGenerator(_home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee1(param) {\n        var queryClient, campaignKey, userID;\n        return _home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx1) {\n            while(1)switch(_ctx1.prev = _ctx1.next){\n                case 0:\n                    queryClient = param.queryClient, campaignKey = param.campaignKey, userID = param.userID;\n                    return _ctx1.abrupt(\"return\", queryClient.prefetchQuery(getQueryKey({\n                        campaignKey: campaignKey,\n                        userID: userID\n                    }), _asyncToGenerator(_home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n                        return _home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                            while(1)switch(_ctx.prev = _ctx.next){\n                                case 0:\n                                    return _ctx.abrupt(\"return\", getVWOExperiment({\n                                        campaignKey: campaignKey,\n                                        userID: userID\n                                    }));\n                                case 1:\n                                case \"end\":\n                                    return _ctx.stop();\n                            }\n                        }, _callee);\n                    }))));\n                case 2:\n                case \"end\":\n                    return _ctx1.stop();\n            }\n        }, _callee1);\n    }));\n    return _prefetchVWOExperiment.apply(this, arguments);\n}\nfunction fetchVWOExperiment(_) {\n    return _fetchVWOExperiment.apply(this, arguments);\n}\nfunction _fetchVWOExperiment() {\n    _fetchVWOExperiment = _asyncToGenerator(_home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee2(param) {\n        var queryClient, campaignKey, userID;\n        return _home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx2) {\n            while(1)switch(_ctx2.prev = _ctx2.next){\n                case 0:\n                    queryClient = param.queryClient, campaignKey = param.campaignKey, userID = param.userID;\n                    return _ctx2.abrupt(\"return\", queryClient.fetchQuery(getQueryKey({\n                        campaignKey: campaignKey,\n                        userID: userID\n                    }), _asyncToGenerator(_home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n                        return _home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                            while(1)switch(_ctx.prev = _ctx.next){\n                                case 0:\n                                    return _ctx.abrupt(\"return\", getVWOExperiment({\n                                        campaignKey: campaignKey,\n                                        userID: userID\n                                    }));\n                                case 1:\n                                case \"end\":\n                                    return _ctx.stop();\n                            }\n                        }, _callee);\n                    }))));\n                case 2:\n                case \"end\":\n                    return _ctx2.stop();\n            }\n        }, _callee2);\n    }));\n    return _fetchVWOExperiment.apply(this, arguments);\n}\nfunction useVWOExperiment(param) {\n    var campaignKey = param.campaignKey, userID = param.userID;\n    _s();\n    // to run this experiment serverside, simply call prefetchVWOExperiment, read VWO_UUID_COOKIE_NAME cookie,\n    // and pass through that cookie's value\n    console.log(\"use\", userID);\n    return (0,react_query__WEBPACK_IMPORTED_MODULE_2__.useQuery)(getQueryKey({\n        campaignKey: campaignKey,\n        userID: userID\n    }), _asyncToGenerator(_home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n        return _home_runner_vwo_node_nextjs_breaking_ssr_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    return _ctx.abrupt(\"return\", getVWOExperiment({\n                        campaignKey: campaignKey,\n                        userID: userID\n                    }));\n                case 1:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    })), {\n        enabled: !!userID && !!campaignKey,\n        staleTime: 5 * 60 * 1000\n    });\n}\n_s(useVWOExperiment, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function() {\n    return [\n        react_query__WEBPACK_IMPORTED_MODULE_2__.useQuery\n    ];\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi92d28uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBK0I7QUFDUTtBQUNRO0FBSzdCOztBQUVYLElBQU1LLG9CQUFvQixHQUFHLGNBQWMsQ0FBQztBQUVuRCxTQUFTQyxXQUFXLENBQUMsS0FBdUIsRUFBRTtRQUF2QkMsV0FBVyxHQUFiLEtBQXVCLENBQXJCQSxXQUFXLEVBQUVDLE1BQU0sR0FBckIsS0FBdUIsQ0FBUkEsTUFBTTtJQUN4QyxPQUFPO1FBQUMsZ0JBQWdCO1FBQUVELFdBQVc7UUFBRUMsTUFBTTtLQUFDLENBQUM7Q0FDaEQ7QUFFTSxTQUFlQyxZQUFZO1dBQVpBLGFBQVk7Q0FPakM7U0FQcUJBLGFBQVk7SUFBWkEsYUFBWSxHQUEzQiwwTEFBOEI7WUFDN0JDLFlBQVksRUFDWkMsTUFBTTs7Ozs7MkJBRGVYLG1FQUFtQixDQUFDRyxtREFBYyxFQUFFQyxnREFBVyxDQUFDOztvQkFBckVNLFlBQVksWUFBeUQ7b0JBQ3JFQyxNQUFNLEdBQUdYLDBEQUFVLENBQUM7d0JBQ3hCVSxZQUFZLEVBQVpBLFlBQVk7cUJBQ2IsQ0FBQyxDQUFDO2lEQUVJQyxNQUFNOzs7Ozs7S0FDZDtXQVBxQkYsYUFBWTs7QUFTM0IsU0FBZUssZ0JBQWdCLENBQUMsQ0FBdUI7V0FBeENBLGlCQUFnQjtDQU1yQztTQU5xQkEsaUJBQWdCO0lBQWhCQSxpQkFBZ0IsR0FBL0Isd0xBQWdDLEtBQXVCLEVBQUU7WUFBdkJQLFdBQVcsRUFBRUMsTUFBTSxFQUNwREcsTUFBTSxFQUVOSSxTQUFTOzs7O29CQUh3QlIsV0FBVyxHQUFiLEtBQXVCLENBQXJCQSxXQUFXLEVBQUVDLE1BQU0sR0FBckIsS0FBdUIsQ0FBUkEsTUFBTTs7MkJBQ3JDQyxZQUFZLEVBQUU7O29CQUE3QkUsTUFBTSxZQUF1QjtvQkFDbkNLLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDVixXQUFXLEVBQUVDLE1BQU0sQ0FBQyxDQUFDO29CQUMzQk8sU0FBUyxHQUFHSixNQUFNLENBQUNPLFFBQVEsQ0FBQ1gsV0FBVyxFQUFFQyxNQUFNLENBQUMsQ0FBQztvQkFDdkRRLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRixTQUFTLENBQUMsQ0FBQztpREFDaEJBLFNBQVM7Ozs7OztLQUNqQjtXQU5xQkQsaUJBQWdCOztBQVEvQixTQUFlSyxxQkFBcUIsQ0FBQyxDQUkzQztXQUpxQkEsc0JBQXFCO0NBVzFDO1NBWHFCQSxzQkFBcUI7SUFBckJBLHNCQUFxQixHQUFwQyx5TEFBcUMsS0FJM0MsRUFBRTtZQUhEQyxXQUFXLEVBQ1hiLFdBQVcsRUFDWEMsTUFBTTs7OztvQkFGTlksV0FBVyxHQUQrQixLQUkzQyxDQUhDQSxXQUFXLEVBQ1hiLFdBQVcsR0FGK0IsS0FJM0MsQ0FGQ0EsV0FBVyxFQUNYQyxNQUFNLEdBSG9DLEtBSTNDLENBRENBLE1BQU07a0RBRUNZLFdBQVcsQ0FBQ0MsYUFBYSxDQUM5QmYsV0FBVyxDQUFDO3dCQUFFQyxXQUFXLEVBQVhBLFdBQVc7d0JBQUVDLE1BQU0sRUFBTkEsTUFBTTtxQkFBRSxDQUFDLEVBQ3BDLDBMQUFZOzs7O2lFQUNITSxnQkFBZ0IsQ0FBQzt3Q0FBRVAsV0FBVyxFQUFYQSxXQUFXO3dDQUFFQyxNQUFNLEVBQU5BLE1BQU07cUNBQUUsQ0FBQzs7Ozs7O3FCQUNqRCxHQUNGOzs7Ozs7S0FDRjtXQVhxQlcsc0JBQXFCOztBQWFwQyxTQUFlRyxrQkFBa0IsQ0FBQyxDQUl4QztXQUpxQkEsbUJBQWtCO0NBV3ZDO1NBWHFCQSxtQkFBa0I7SUFBbEJBLG1CQUFrQixHQUFqQyx5TEFBa0MsS0FJeEMsRUFBRTtZQUhERixXQUFXLEVBQ1hiLFdBQVcsRUFDWEMsTUFBTTs7OztvQkFGTlksV0FBVyxHQUQ0QixLQUl4QyxDQUhDQSxXQUFXLEVBQ1hiLFdBQVcsR0FGNEIsS0FJeEMsQ0FGQ0EsV0FBVyxFQUNYQyxNQUFNLEdBSGlDLEtBSXhDLENBRENBLE1BQU07a0RBRUNZLFdBQVcsQ0FBQ0csVUFBVSxDQUMzQmpCLFdBQVcsQ0FBQzt3QkFBRUMsV0FBVyxFQUFYQSxXQUFXO3dCQUFFQyxNQUFNLEVBQU5BLE1BQU07cUJBQUUsQ0FBQyxFQUNwQywwTEFBWTs7OztpRUFDSE0sZ0JBQWdCLENBQUM7d0NBQUVQLFdBQVcsRUFBWEEsV0FBVzt3Q0FBRUMsTUFBTSxFQUFOQSxNQUFNO3FDQUFFLENBQUM7Ozs7OztxQkFDakQsR0FDRjs7Ozs7O0tBQ0Y7V0FYcUJjLG1CQUFrQjs7QUFhakMsU0FBU0UsZ0JBQWdCLENBQUMsS0FBdUIsRUFBRTtRQUF2QmpCLFdBQVcsR0FBYixLQUF1QixDQUFyQkEsV0FBVyxFQUFFQyxNQUFNLEdBQXJCLEtBQXVCLENBQVJBLE1BQU07O0lBQ3BELDBHQUEwRztJQUMxRyx1Q0FBdUM7SUFFdkNRLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLEtBQUssRUFBRVQsTUFBTSxDQUFDO0lBRTFCLE9BQU9QLHFEQUFRLENBQ2JLLFdBQVcsQ0FBQztRQUFFQyxXQUFXLEVBQVhBLFdBQVc7UUFBRUMsTUFBTSxFQUFOQSxNQUFNO0tBQUUsQ0FBQyxFQUNwQzs7OztpREFBWU0sZ0JBQWdCLENBQUM7d0JBQUVQLFdBQVcsRUFBWEEsV0FBVzt3QkFBRUMsTUFBTSxFQUFOQSxNQUFNO3FCQUFFLENBQUM7Ozs7OztLQUFBLElBQ3JEO1FBQ0VpQixPQUFPLEVBQUUsQ0FBQyxDQUFDakIsTUFBTSxJQUFJLENBQUMsQ0FBQ0QsV0FBVztRQUNsQ21CLFNBQVMsRUFBRSxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUk7S0FDekIsQ0FDRixDQUFDO0NBQ0g7R0FkZUYsZ0JBQWdCOztRQU12QnZCLGlEQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3Z3by5qcz8zYTMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBWV08gZnJvbSAndndvLW5vZGUtc2RrJztcbmltcG9ydCB7IHVzZVF1ZXJ5IH0gZnJvbSAncmVhY3QtcXVlcnknO1xuaW1wb3J0IHsgQ29va2llU3RvcmFnZSB9IGZyb20gJ2Nvb2tpZS1zdG9yYWdlJztcblxuaW1wb3J0IHtcbiAgVldPX0FDQ09VTlRfSUQsXG4gIFZXT19TREtfS0VZLFxufSBmcm9tICcuL2NvbmZpZyc7XG5cbmV4cG9ydCBjb25zdCBWV09fVVVJRF9DT09LSUVfTkFNRSA9ICdfdndvX3V1aWRfdjInO1xuXG5mdW5jdGlvbiBnZXRRdWVyeUtleSh7IGNhbXBhaWduS2V5LCB1c2VySUQgfSkge1xuICByZXR1cm4gWyd2d28tZXhwZXJpbWVudCcsIGNhbXBhaWduS2V5LCB1c2VySURdO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VldPQ2xpZW50KCkge1xuICBjb25zdCBzZXR0aW5nc0ZpbGUgPSBhd2FpdCBWV08uZ2V0U2V0dGluZ3NGaWxlKFZXT19BQ0NPVU5UX0lELCBWV09fU0RLX0tFWSk7XG4gIGNvbnN0IGNsaWVudCA9IFZXTy5sYXVuY2goe1xuICAgIHNldHRpbmdzRmlsZSxcbiAgfSk7XG5cbiAgcmV0dXJuIGNsaWVudDtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFZXT0V4cGVyaW1lbnQoeyBjYW1wYWlnbktleSwgdXNlcklEIH0pIHtcbiAgY29uc3QgY2xpZW50ID0gYXdhaXQgZ2V0VldPQ2xpZW50KCk7XG4gIGNvbnNvbGUubG9nKGNhbXBhaWduS2V5LCB1c2VySUQpO1xuICBjb25zdCB2YXJpYXRpb24gPSBjbGllbnQuYWN0aXZhdGUoY2FtcGFpZ25LZXksIHVzZXJJRCk7XG4gIGNvbnNvbGUubG9nKHZhcmlhdGlvbik7XG4gIHJldHVybiB2YXJpYXRpb247XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBwcmVmZXRjaFZXT0V4cGVyaW1lbnQoe1xuICBxdWVyeUNsaWVudCxcbiAgY2FtcGFpZ25LZXksXG4gIHVzZXJJRCxcbn0pIHtcbiAgcmV0dXJuIHF1ZXJ5Q2xpZW50LnByZWZldGNoUXVlcnkoXG4gICAgZ2V0UXVlcnlLZXkoeyBjYW1wYWlnbktleSwgdXNlcklEIH0pLFxuICAgIGFzeW5jICgpID0+IHtcbiAgICAgIHJldHVybiBnZXRWV09FeHBlcmltZW50KHsgY2FtcGFpZ25LZXksIHVzZXJJRCB9KTtcbiAgICB9XG4gICk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFZXT0V4cGVyaW1lbnQoe1xuICBxdWVyeUNsaWVudCxcbiAgY2FtcGFpZ25LZXksXG4gIHVzZXJJRCxcbn0pIHtcbiAgcmV0dXJuIHF1ZXJ5Q2xpZW50LmZldGNoUXVlcnkoXG4gICAgZ2V0UXVlcnlLZXkoeyBjYW1wYWlnbktleSwgdXNlcklEIH0pLFxuICAgIGFzeW5jICgpID0+IHtcbiAgICAgIHJldHVybiBnZXRWV09FeHBlcmltZW50KHsgY2FtcGFpZ25LZXksIHVzZXJJRCB9KTtcbiAgICB9XG4gICk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VWV09FeHBlcmltZW50KHsgY2FtcGFpZ25LZXksIHVzZXJJRCB9KSB7XG4gIC8vIHRvIHJ1biB0aGlzIGV4cGVyaW1lbnQgc2VydmVyc2lkZSwgc2ltcGx5IGNhbGwgcHJlZmV0Y2hWV09FeHBlcmltZW50LCByZWFkIFZXT19VVUlEX0NPT0tJRV9OQU1FIGNvb2tpZSxcbiAgLy8gYW5kIHBhc3MgdGhyb3VnaCB0aGF0IGNvb2tpZSdzIHZhbHVlXG5cbiAgY29uc29sZS5sb2coJ3VzZScsIHVzZXJJRClcblxuICByZXR1cm4gdXNlUXVlcnkoXG4gICAgZ2V0UXVlcnlLZXkoeyBjYW1wYWlnbktleSwgdXNlcklEIH0pLFxuICAgIGFzeW5jICgpID0+IGdldFZXT0V4cGVyaW1lbnQoeyBjYW1wYWlnbktleSwgdXNlcklEIH0pLFxuICAgIHtcbiAgICAgIGVuYWJsZWQ6ICEhdXNlcklEICYmICEhY2FtcGFpZ25LZXksXG4gICAgICBzdGFsZVRpbWU6IDUgKiA2MCAqIDEwMDAsIC8vIDVtaW5zXG4gICAgfVxuICApO1xufVxuIl0sIm5hbWVzIjpbIlZXTyIsInVzZVF1ZXJ5IiwiQ29va2llU3RvcmFnZSIsIlZXT19BQ0NPVU5UX0lEIiwiVldPX1NES19LRVkiLCJWV09fVVVJRF9DT09LSUVfTkFNRSIsImdldFF1ZXJ5S2V5IiwiY2FtcGFpZ25LZXkiLCJ1c2VySUQiLCJnZXRWV09DbGllbnQiLCJzZXR0aW5nc0ZpbGUiLCJjbGllbnQiLCJnZXRTZXR0aW5nc0ZpbGUiLCJsYXVuY2giLCJnZXRWV09FeHBlcmltZW50IiwidmFyaWF0aW9uIiwiY29uc29sZSIsImxvZyIsImFjdGl2YXRlIiwicHJlZmV0Y2hWV09FeHBlcmltZW50IiwicXVlcnlDbGllbnQiLCJwcmVmZXRjaFF1ZXJ5IiwiZmV0Y2hWV09FeHBlcmltZW50IiwiZmV0Y2hRdWVyeSIsInVzZVZXT0V4cGVyaW1lbnQiLCJlbmFibGVkIiwic3RhbGVUaW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./vwo.js\n");

/***/ }),

/***/ "./node_modules/vwo-node-sdk/dist/vwo-javascript-sdk.js":
/*!**************************************************************!*\
  !*** ./node_modules/vwo-node-sdk/dist/vwo-javascript-sdk.js ***!
  \**************************************************************/
/***/ (function(module) {

eval("/*!\n * vwo-javascript-sdk - v1.32.3\n * URL - https://github.com/wingify/vwo-node-sdk\n * \n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *   http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * Dependencies used - \n *  1. murmurhash - ^0.0.2\n *  2. superstruct - ^0.10.12\n *  3. uuid - ^3.3.2\n *  4. vwo-sdk-log-messages - https://github.com/wingify/vwo-sdk-log-messages.git#v0.1.0\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\t// CommonJS2\n\tif(true)\n\t\tmodule.exports = factory();\n\t// AMD\n\telse {}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_1476__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_1476__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__nested_webpack_require_1476__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__nested_webpack_require_1476__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__nested_webpack_require_1476__.d = function(exports, name, getter) {\n/******/ \t\tif(!__nested_webpack_require_1476__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__nested_webpack_require_1476__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__nested_webpack_require_1476__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __nested_webpack_require_1476__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__nested_webpack_require_1476__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __nested_webpack_require_1476__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__nested_webpack_require_1476__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__nested_webpack_require_1476__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__nested_webpack_require_1476__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__nested_webpack_require_1476__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __nested_webpack_require_1476__(__nested_webpack_require_1476__.s = \"./lib/index.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./lib/VWO.js\":\n/*!********************!*\\\n  !*** ./lib/VWO.js ***!\n  \\********************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_5078__) {\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar api = __nested_webpack_require_5078__(/*! ./api */ \"./lib/api/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_5078__(/*! ./enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar ApiEnum = __nested_webpack_require_5078__(/*! ./enums/ApiEnum */ \"./lib/enums/ApiEnum.js\");\n\nvar DataTypeUtil = __nested_webpack_require_5078__(/*! ./utils/DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n\nvar FunctionUtil = __nested_webpack_require_5078__(/*! ./utils/FunctionUtil */ \"./lib/utils/FunctionUtil.js\");\n\nvar EventQueue = __nested_webpack_require_5078__(/*! ./services/EventQueue */ \"./lib/services/EventQueue.js\");\n\nvar SettingsFileService = __nested_webpack_require_5078__(/*! ./services/SettingsFileManager */ \"./lib/services/SettingsFileManager.js\");\n\nvar logging = __nested_webpack_require_5078__(/*! ./services/logging */ \"./lib/services/logging/index.js\");\n\nvar HooksManager = __nested_webpack_require_5078__(/*! ./services/HooksManager */ \"./lib/services/HooksManager.js\");\n\nvar UrlService = __nested_webpack_require_5078__(/*! ./services/UrlService */ \"./lib/services/UrlService.js\");\n\nvar UsageStats = __nested_webpack_require_5078__(/*! ./services/UsageStats */ \"./lib/services/UsageStats.js\");\n\nvar BatchEventsDispatcher;\nvar customEventUtil;\nvar BatchEventsQueue;\n\nif (false) {}\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar file = FileNameEnum.VWO;\n\nvar VWO =\n/*#__PURE__*/\nfunction () {\n  // Setting various services on the instance to be accessible by its member functions\n  function VWO() {\n    var _this = this;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, VWO);\n\n    this.getVariation = this.getVariationName; // to be backward compatible\n\n    this.userStorageService = config.userStorageService;\n    this.logger = config.logger;\n    this.returnPromiseFor = config.returnPromiseFor;\n    this.optOut = false;\n    var settingsFileManager = new SettingsFileService(config); // Validate the config file i.e. check if required fields contain appropriate data\n\n    if (!settingsFileManager.isSettingsFileValid()) {\n      this.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SETTINGS_FILE_INVALID, {\n        file: file\n      }));\n      return;\n    }\n\n    this.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_VALID, {\n      file: file\n    })); // Initialize Hooks manager so that callbacks can be invoked\n\n    HooksManager.init(config); // Setup event quque for sending impressions to VWO server\n\n    this.eventQueue = new EventQueue();\n    this.usageStats = new UsageStats();\n    this.SettingsFileManager = settingsFileManager;\n    settingsFileManager.checkAndPoll(); // Checks if pollingInterval is passed then starts polling settingsFile\n\n    if (!config.isDevelopmentMode) {\n      this.usageStats.collectUsageStats(settingsFileManager.getConfig());\n    } // Only for Node.js SDK\n\n\n    if (false) { var sdkKey, accountId; } // Process settingsFile for various things. For eg: assign bucket range to variation, etc.\n\n\n    this.SettingsFileManager.processSettingsFile();\n    this.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SDK_INITIALIZED, {\n      file: file\n    }));\n    this.UrlService = UrlService.init(config.settingsFile);\n  } // PUBLIC METHODS\n\n  /**\n   * This API method: Gets the variation assigned for the user for the campaign and send the metrics to VWO server\n   *\n   * @param {String} campaignKey       unique campaign key specified in VWO app\n   * @param {String} userId            ID assigned to a user\n   * @param {Object} options           optional params - customVariables, variationTargetingVariables\n   *\n   * @return {String|null}             If variation is assigned then variation-name otherwise null in case of user not becoming part\n   */\n\n\n  _createClass(VWO, [{\n    key: \"activate\",\n    value: function activate(campaignKey, userId) {\n      var _this2 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      try {\n        var self = this; // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n        // i.e. wait till the network call is not successful\n\n        if (self.returnPromiseFor && (self.returnPromiseFor.activate || self.returnPromiseFor.all)) {\n          self.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file: file,\n            method: ApiEnum.ACTIVATE\n          }));\n          return new Promise(function (resolve) {\n            if (_this2.optOut) {\n              _this2.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file: file,\n                api: ApiEnum.ACTIVATE\n              }));\n\n              resolve(null);\n            } else {\n              var variationName;\n\n              options.responseCallback = function (_error, _response) {\n                resolve(variationName);\n              };\n\n              variationName = api.activate(self, campaignKey, userId, options); // If we get null from the API i.e. no tracking call was sent\n              // In this case, respponseCallback will not be fired and hence we have to manually resolve the promise\n\n              if (!variationName) {\n                resolve(variationName);\n              } else if (DataTypeUtil.isObject(variationName)) {\n                resolve(variationName.variationName);\n              }\n            }\n          });\n        }\n\n        if (this.optOut) {\n          this.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file: file,\n            api: ApiEnum.ACTIVATE\n          }));\n          return null;\n        }\n\n        var apiResponse = api.activate(self, campaignKey, userId, options);\n\n        if (DataTypeUtil.isObject(apiResponse)) {\n          return apiResponse.variationName;\n        }\n\n        return apiResponse;\n      } catch (err) {\n        this.logger.log(LogLevelEnum.ERROR, err.message);\n        return null;\n      }\n    }\n    /**\n     * This API method: Gets the variation assigned for the user for the campaign\n     *\n     * @param {String} campaignKey       unique campaign key specified in VWO app\n     * @param {String} userId            ID assigned to a user\n     * @param {Object} options           optional params - customVariables, variationTargetingVariables\n     *\n     * @return {String|null}             If variation is assigned then variation-name otherwise null in case of user not becoming part\n     */\n\n  }, {\n    key: \"getVariationName\",\n    value: function getVariationName(campaignKey, userId) {\n      var _this3 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      try {\n        var self = this; // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n\n        if (self.returnPromiseFor && (self.returnPromiseFor.getVariationName || self.returnPromiseFor.all)) {\n          self.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file: file,\n            method: ApiEnum.GET_VARIATION_NAME\n          }));\n          return new Promise(function (resolve) {\n            if (_this3.optOut) {\n              _this3.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file: file,\n                api: ApiEnum.GET_VARIATION_NAME\n              }));\n\n              resolve(null);\n            } else {\n              // since this API does not send any async call, we can simply resolve the returned value\n              resolve(api.getVariation(self, campaignKey, userId, options));\n            }\n          });\n        }\n\n        if (this.optOut) {\n          this.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file: file,\n            api: ApiEnum.GET_VARIATION_NAME\n          }));\n          return null;\n        }\n\n        return api.getVariation(self, campaignKey, userId, options);\n      } catch (err) {\n        this.logger.log(LogLevelEnum.ERROR, err.message);\n        return null;\n      }\n    }\n    /**\n     * This API method: Marks the conversion of the campaign for a particular goal\n     *\n     * @param {String/Array<string>/null/undefined} campaignSpecifier campaign keys to track           unique campaignSpecifier\n     * @param {String} userId                ID assigned to a user\n     * @param {String} goalIdentifier         unique campaign's goal identifier\n     * @param {Object} options               optional params - customVariables, variationTargetingVariables, revenueValue\n     */\n\n  }, {\n    key: \"track\",\n    value: function track(campaignSpecifier, userId, goalIdentifier) {\n      var _this4 = this;\n\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n      try {\n        var self = this; // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n        // i.e. wait till the network call is not successful\n\n        if (self.returnPromiseFor && (self.returnPromiseFor.track || self.returnPromiseFor.all)) {\n          self.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file: file,\n            method: ApiEnum.TRACK\n          }));\n          return new Promise(function (resolve) {\n            if (_this4.optOut) {\n              _this4.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file: file,\n                api: ApiEnum.TRACK\n              }));\n\n              resolve(null);\n            } else {\n              var trackResponse;\n              var counter = 0;\n\n              options.responseCallback = function (_error, _response) {\n                counter += 1; // In case of global goals, when all campaigns are tracked, then only resolve\n\n                if (counter === FunctionUtil.objectValues(trackResponse).filter(Boolean).length) {\n                  resolve(trackResponse);\n                }\n              };\n\n              trackResponse = api.track(self, campaignSpecifier, userId, goalIdentifier, options); // If we get null/false from the API i.e. no tracking call was sent\n              // In this case, respponseCallback will not be fired and hence we have to manually resolve the promise\n              // Or, in case of global goals, if none campaign got success, manually resolve\n\n              if (!trackResponse || !FunctionUtil.objectValues(trackResponse).some(Boolean)) {\n                resolve(trackResponse);\n              } else if (trackResponse && trackResponse.isDevelopmentMode) {\n                delete trackResponse.isDevelopmentMode;\n                resolve(trackResponse);\n              }\n            }\n          });\n        }\n\n        if (this.optOut) {\n          this.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file: file,\n            api: ApiEnum.TRACK\n          }));\n          return null;\n        }\n\n        return api.track(self, campaignSpecifier, userId, goalIdentifier, options);\n      } catch (err) {\n        this.logger.log(LogLevelEnum.ERROR, err.message);\n        return null;\n      }\n    }\n    /**\n     * This API method checks: Whether a feature is enabled or not for the given user\n     *\n     * @param {String} campaignKey       Unique key for a campaign\n     * @param {String} userId            Unique identifier for the user\n     * @param {Object} options           optional params - customVariables, variationTargetingVariables\n     *\n     * @return {Boolean}                 true if feature enabled, false otherwise\n     */\n\n  }, {\n    key: \"isFeatureEnabled\",\n    value: function isFeatureEnabled(campaignKey, userId) {\n      var _this5 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      try {\n        var self = this; // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n        // i.e. wait till the network call is not successful\n\n        if (self.returnPromiseFor && (self.returnPromiseFor.isFeatureEnabled || self.returnPromiseFor.all)) {\n          self.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file: file,\n            method: ApiEnum.IS_FEATURE_ENABLED\n          }));\n          return new Promise(function (resolve) {\n            if (_this5.optOut) {\n              _this5.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file: file,\n                api: ApiEnum.IS_FEATURE_ENABLED\n              }));\n\n              resolve(false);\n            } else {\n              var isFeatureEnabledApiResponse;\n\n              options.responseCallback = function (_error, _response) {\n                resolve(!!isFeatureEnabledApiResponse);\n              };\n\n              isFeatureEnabledApiResponse = api.isFeatureEnabled(self, campaignKey, userId, options); // If we get null from the API i.e. no tracking call was sent\n              // In this case, respponseCallback will not be fired and hence we have to manually resolve the promise\n\n              if (DataTypeUtil.isNull(isFeatureEnabledApiResponse)) {\n                resolve(false);\n              } else if (DataTypeUtil.isObject(isFeatureEnabledApiResponse)) {\n                resolve(!!isFeatureEnabledApiResponse.isFeatureEnabled);\n              }\n            }\n          });\n        }\n\n        if (this.optOut) {\n          this.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file: file,\n            api: ApiEnum.IS_FEATURE_ENABLED\n          }));\n          return false;\n        }\n\n        var apiResponse = api.isFeatureEnabled(self, campaignKey, userId, options);\n\n        if (DataTypeUtil.isObject(apiResponse)) {\n          return !!apiResponse.isFeatureEnabled;\n        }\n\n        return !!apiResponse;\n      } catch (err) {\n        this.logger.log(LogLevelEnum.ERROR, err.message);\n        return false;\n      }\n    }\n    /**\n     * This API method: Return the variable for that variation(if Feature Test),\n     *    otherwise the default values being set in Feature\n     *\n     * @param {String} campaignKey   Unique key for a campaign\n     * @param {String} variableKey   Unique key for a feature's variable\n     * @param {String} userId        Unique identifier for the user\n     * @param {Object} options           optional params - customVariables, variationTargetingVariables\n     *\n     * @return {string|number|double|boolean|null} Variable value as is set in the VWO app i.e.\n     *                                             maintaining the data-type,\n     *                                             null if anything fails like campaign / variable not found\n     */\n\n  }, {\n    key: \"getFeatureVariableValue\",\n    value: function getFeatureVariableValue(campaignKey, variableKey, userId) {\n      var _this6 = this;\n\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n      try {\n        var self = this; // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n\n        if (self.returnPromiseFor && (self.returnPromiseFor.getFeatureVariableValue || self.returnPromiseFor.all)) {\n          self.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file: file,\n            method: ApiEnum.GET_FEATURE_VARIABLE_VALUE\n          }));\n          return new Promise(function (resolve) {\n            if (_this6.optOut) {\n              _this6.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file: file,\n                api: ApiEnum.GET_FEATURE_VARIABLE_VALUE\n              }));\n\n              resolve(null);\n            } else {\n              // since this API does not send any async call, we can simply resolve the returned value\n              resolve(api.getFeatureVariableValue(self, campaignKey, variableKey, userId, options));\n            }\n          });\n        }\n\n        if (this.optOut) {\n          this.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file: file,\n            api: ApiEnum.GET_FEATURE_VARIABLE_VALUE\n          }));\n          return null;\n        }\n\n        return api.getFeatureVariableValue(self, campaignKey, variableKey, userId, options);\n      } catch (err) {\n        this.logger.log(LogLevelEnum.ERROR, err.message);\n        return null;\n      }\n    }\n    /**\n     * This API method: Pushes the key-value tag pair for a particular user\n     *\n     * @param {String} tagKey                    tag key\n     * @param {String} tagValue                  tag Value\n     * @param {String} userId                    ID assigned to a user\n     *\n     * @return {Boolean}                    true if request is pushed to eventQueue, false if params are invalid or settings file is unavailable\n     */\n\n  }, {\n    key: \"push\",\n    value: function push(tagKey, tagValue, userId) {\n      var _this7 = this;\n\n      try {\n        var self = this;\n        var customDimensionMap;\n\n        if (arguments.length === 2) {\n          // Argument reshuffling.\n          customDimensionMap = tagKey;\n          userId = tagValue;\n          tagKey = ' ';\n          tagValue = ' ';\n        } else if (arguments.length === 3) {\n          customDimensionMap = {};\n        } else {\n          this.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_BAD_PARAMETERS, {\n            file: file,\n            api: ApiEnum.PUSH\n          }));\n          return false;\n        } // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n        // i.e. wait till the network call is not successful\n\n\n        if (self.returnPromiseFor && (self.returnPromiseFor.push || self.returnPromiseFor.all)) {\n          self.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file: file,\n            method: ApiEnum.PUSH\n          }));\n          return new Promise(function (resolve) {\n            if (_this7.optOut) {\n              _this7.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file: file,\n                api: ApiEnum.PUSH\n              }));\n\n              resolve(null);\n            } else {\n              var apiResponse;\n              var counter = 0;\n              var options = {\n                responseCallback: function responseCallback(_error, _response) {\n                  counter += 1; // In case of multiple custom dimensions, when all are tracked, then only resolve\n\n                  if (counter === FunctionUtil.objectValues(apiResponse).filter(Boolean).length) {\n                    resolve(apiResponse);\n                  }\n                }\n              };\n              apiResponse = api.push(self, tagKey, tagValue, userId, customDimensionMap, options); // If we get false from the API i.e. no tracking call was sent\n              // In this case, respponseCallback will not be fired and hence we have to manually resolve the promise\n\n              if (!apiResponse) {\n                resolve(false);\n              } else if (apiResponse && apiResponse.isDevelopmentMode) {\n                delete apiResponse.isDevelopmentMode;\n                resolve(apiResponse);\n              }\n            }\n          });\n        }\n\n        if (this.optOut) {\n          this.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file: file,\n            api: ApiEnum.PUSH\n          }));\n          return null;\n        }\n\n        return api.push(self, tagKey, tagValue, userId, customDimensionMap);\n      } catch (err) {\n        this.logger.log(LogLevelEnum.ERROR, err.message);\n        return false;\n      }\n    }\n  }, {\n    key: \"setOptOut\",\n    value: function setOptOut() {\n      var _this8 = this;\n\n      this.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.OPT_OUT_API_CALLED, {\n        file: file\n      }));\n\n      if (this.returnPromiseFor && (this.returnPromiseFor.optOut || this.returnPromiseFor.all)) {\n        return new Promise(function (resolve) {\n          _this8._destroyInstanceVariables();\n\n          if (_this8.batchEventsQueue) {\n            _this8.flushEvents().then(function () {\n              _this8.batchEventsQueue = undefined;\n              resolve(true);\n            });\n          } else {\n            resolve(true);\n          }\n        });\n      }\n\n      if (this.batchEventsQueue) {\n        this.flushEvents().then(function () {\n          _this8.batchEventsQueue = undefined;\n        });\n      }\n\n      this._destroyInstanceVariables();\n\n      return true;\n    }\n    /**\n     * Manually flush impression events to VWO which are queued in batch queue as per batchEvents config\n     */\n\n  }, {\n    key: \"flushEvents\",\n    value: function flushEvents() {\n      var _this9 = this;\n\n      var accountId = this.SettingsFileManager.getSettingsFile().accountId;\n\n      if (false) {}\n    }\n    /**\n     * Fetch latest settings-file and update so that vwoClientInstance could use latest settings\n     * Helpful especially when using webhooks\n     *\n     * @param {Number} accountId\n     * @param {String} sdkKey\n     *\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"getAndUpdateSettingsFile\",\n    value: function getAndUpdateSettingsFile(accountId, sdkKey) {\n      if (this.optOut) {\n        this.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n          file: file,\n          api: 'getAndUpdateSettingsFile'\n        }));\n        return new Promise(function (resolve) {\n          resolve(null);\n        });\n      }\n\n      return this.SettingsFileManager.getAndUpdateSettingsFile(accountId, sdkKey);\n    }\n  }, {\n    key: \"_destroyInstanceVariables\",\n    value: function _destroyInstanceVariables() {\n      this.userStorageService = undefined;\n      this.SettingsFileManager = undefined;\n      this.usageStats = undefined;\n      this.eventQueue = undefined;\n      this.optOut = true;\n    }\n  }]);\n\n  return VWO;\n}();\n\nmodule.exports = VWO;\n\n/***/ }),\n\n/***/ \"./lib/api/activate.js\":\n/*!*****************************!*\\\n  !*** ./lib/api/activate.js ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_29158__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Constants = __nested_webpack_require_29158__(/*! ../constants */ \"./lib/constants/index.js\");\n\nvar ApiEnum = __nested_webpack_require_29158__(/*! ../enums/ApiEnum */ \"./lib/enums/ApiEnum.js\");\n\nvar DecisionUtil = __nested_webpack_require_29158__(/*! ../utils/DecisionUtil */ \"./lib/utils/DecisionUtil.js\");\n\nvar CampaignUtil = __nested_webpack_require_29158__(/*! ../utils/CampaignUtil */ \"./lib/utils/CampaignUtil.js\");\n\nvar ImpressionUtil = __nested_webpack_require_29158__(/*! ../utils/ImpressionUtil */ \"./lib/utils/ImpressionUtil.js\");\n\nvar ValidateUtil = __nested_webpack_require_29158__(/*! ../utils/ValidateUtil */ \"./lib/utils/ValidateUtil.js\");\n\nvar DataTypeUtil = __nested_webpack_require_29158__(/*! ../utils/DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n\nvar logging = __nested_webpack_require_29158__(/*! ../services/logging */ \"./lib/services/logging/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_29158__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar EventEnum = __nested_webpack_require_29158__(/*! ../enums/EventEnum */ \"./lib/enums/EventEnum.js\");\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar file = FileNameEnum.Activate;\n/**\n * This API method: Gets the variation assigned for the user for the campaign and send the metrics to VWO server\n *\n * 1. Validates the arguments being passed\n * 2. Checks if user is eligible to get bucketed into the campaign,\n * 3. Assigns the determinitic variation to the user(based on userId), if user becomes part of campaign\n *    If userStorageService is used, it will look into it for the variation and if found, no further processing is done\n * 4. Sends an impression call to VWO server to track user\n *\n * @param {Object} vwoInstance       VWO instance which has logger, settingsFile etc.\n * @param {String} campaignKey       unique campaign key specified in VWO app\n * @param {String} userId            ID assigned to a user\n * @param {Object} options           Optional params\n *\n * @return {String|null}             If variation is assigned then variation-name otherwise null in case of user not becoming part\n */\n\nfunction activate(vwoInstance, campaignKey, userId) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var api = ApiEnum.ACTIVATE;\n  var areParamsValid = false;\n\n  if (DataTypeUtil.isObject(options)) {\n    var customVariables = options.customVariables,\n        variationTargetingVariables = options.variationTargetingVariables,\n        userStorageData = options.userStorageData,\n        shouldTrackReturningUser = options.shouldTrackReturningUser,\n        metaData = options.metaData,\n        responseCallback = options.responseCallback; // Check if arguments have valid data-type\n\n    if (ValidateUtil.areValidParamsForAPIMethod({\n      method: ApiEnum.ACTIVATE,\n      campaignKey: campaignKey,\n      userId: userId,\n      customVariables: customVariables,\n      variationTargetingVariables: variationTargetingVariables,\n      userStorageData: userStorageData,\n      shouldTrackReturningUser: shouldTrackReturningUser,\n      metaData: metaData,\n      responseCallback: responseCallback\n    })) {\n      areParamsValid = true;\n    }\n  }\n\n  if (areParamsValid === false) {\n    vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_BAD_PARAMETERS, {\n      file: file,\n      api: ApiEnum.ACTIVATE\n    }));\n    return null;\n  } // Get the cached configuration\n\n\n  var config = vwoInstance.SettingsFileManager.getConfig();\n  var settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api); // If no settings are found, simply return no variation\n\n  if (!settingsFile) {\n    return null;\n  }\n\n  shouldTrackReturningUser = shouldTrackReturningUser || config.shouldTrackReturningUser || false; // Get the campaign settings based on campaignKey from the settings\n\n  var campaign = CampaignUtil.getCampaign(settingsFile, campaignKey); // If matching campaign is not found with campaignKey or if found but is in not RUNNING state, simply return no variation\n\n  if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n    vwoInstance.logger.log(LogLevelEnum.WARN, LogMessageUtil.build(LogMessageEnum.WARNING_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n      file: file,\n      campaignKey: campaignKey,\n      api: api\n    }));\n    return null;\n  }\n\n  if (!CampaignUtil.isAbCampaign(campaign)) {\n    vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_NOT_APPLICABLE, {\n      file: file,\n      campaignKey: campaignKey,\n      campaignType: campaign.type,\n      userId: userId,\n      api: api\n    }));\n    return null;\n  } // Once the matching RUNNING campaign is found, assign the deterministic variation to the userId provided\n\n\n  var _DecisionUtil$getVari = DecisionUtil.getVariation(config, settingsFile, campaign, campaignKey, userId, customVariables, variationTargetingVariables, userStorageData, metaData, true, undefined, api),\n      variationId = _DecisionUtil$getVari.variationId,\n      variationName = _DecisionUtil$getVari.variationName,\n      isStoredVariation = _DecisionUtil$getVari.isStoredVariation; // Check if variation-name has been assigned to the userId. If not, return no variation\n\n\n  if (!ValidateUtil.isValidValue(variationName)) {\n    vwoInstance.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.DECISION_NO_VARIATION_ALLOTED, {\n      file: file,\n      userId: userId,\n      campaignKey: campaignKey\n    }));\n    return null;\n  } // check if variation found from storage. return it without sending a call to VWO server\n\n\n  if (isStoredVariation && !shouldTrackReturningUser) {\n    vwoInstance.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CAMPAIGN_USER_ALREADY_TRACKED, {\n      file: file,\n      userId: userId,\n      campaignKey: campaignKey,\n      api: api\n    }));\n    return {\n      variationName: variationName\n    };\n  } // Variation found...let VWO server knows about it to show report stats\n\n\n  if (config.batchEvents) {\n    var properties = ImpressionUtil.buildBatchEventForTrackingUser(settingsFile, campaign.id, variationId, userId);\n    vwoInstance.batchEventsQueue.enqueue(properties);\n  } else if (settingsFile.isEventArchEnabled) {\n    var _properties = ImpressionUtil.getEventsBaseProperties(settingsFile, EventEnum.VWO_VARIATION_SHOWN, vwoInstance.usageStats.getUsageStats());\n\n    var payload = ImpressionUtil.getTrackUserPayloadData(settingsFile, userId, EventEnum.VWO_VARIATION_SHOWN, campaign.id, variationId);\n    vwoInstance.eventQueue.process(config, _properties, vwoInstance, {\n      payload: payload,\n      responseCallback: responseCallback\n    });\n  } else {\n    var _properties2 = ImpressionUtil.buildEventForTrackingUser(settingsFile, campaign.id, variationId, userId, vwoInstance.usageStats.getUsageStats());\n\n    vwoInstance.eventQueue.process(config, _properties2, vwoInstance, {\n      responseCallback: responseCallback\n    });\n  }\n\n  if (config.isDevelopmentMode) {\n    return {\n      variationName: variationName\n    };\n  }\n\n  return variationName;\n}\n\nmodule.exports = activate;\n\n/***/ }),\n\n/***/ \"./lib/api/getFeatureVariableValue.js\":\n/*!********************************************!*\\\n  !*** ./lib/api/getFeatureVariableValue.js ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_37167__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Constants = __nested_webpack_require_37167__(/*! ../constants */ \"./lib/constants/index.js\");\n\nvar ApiEnum = __nested_webpack_require_37167__(/*! ../enums/ApiEnum */ \"./lib/enums/ApiEnum.js\");\n\nvar DecisionUtil = __nested_webpack_require_37167__(/*! ../utils/DecisionUtil */ \"./lib/utils/DecisionUtil.js\");\n\nvar CampaignUtil = __nested_webpack_require_37167__(/*! ../utils/CampaignUtil */ \"./lib/utils/CampaignUtil.js\");\n\nvar ValidateUtil = __nested_webpack_require_37167__(/*! ../utils/ValidateUtil */ \"./lib/utils/ValidateUtil.js\");\n\nvar FeatureUtil = __nested_webpack_require_37167__(/*! ../utils/FeatureUtil */ \"./lib/utils/FeatureUtil.js\");\n\nvar DataTypeUtil = __nested_webpack_require_37167__(/*! ../utils/DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n\nvar ObjectUtil = __nested_webpack_require_37167__(/*! ../utils/ObjectUtil */ \"./lib/utils/ObjectUtil.js\");\n\nvar logging = __nested_webpack_require_37167__(/*! ../services/logging */ \"./lib/services/logging/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_37167__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar file = FileNameEnum.GetFeatureVariableValue;\n/**\n * This API method:\n *\n * 1. Validates the arguments being passed\n * 2. Checks if user is eligible for campaign and check if feature is enabled for the user.\n * 4. If feature enabled, return the variable for that variation(if Feature Test),\n *    otherwise the default values being set in Feature\n *\n * @param {Object} vwoInstance   VWO instance which has logger, settingsFile etc.\n * @param {String} campaignKey   Unique key for a campaign\n * @param {String} variableKey   Unique key for a feature's variable\n * @param {String} userId        Unique identifier for the user\n * @param {Object} options           Optional params\n *\n * @return {string|number|double|boolean|null} Variable value as is set in the VWO app i.e.\n *                                             maintaining the data-type,\n *                                             null if anything fails like campaign / variable not found\n */\n\nfunction getFeatureVariableValue(vwoInstance, campaignKey, variableKey, userId) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  try {\n    var api = ApiEnum.GET_FEATURE_VARIABLE_VALUE;\n    var areParamsValid = false;\n\n    if (DataTypeUtil.isObject(options)) {\n      var customVariables = options.customVariables,\n          variationTargetingVariables = options.variationTargetingVariables,\n          userStorageData = options.userStorageData,\n          metaData = options.metaData; // Check if arguments have valid data-type\n\n      if (ValidateUtil.areValidParamsForAPIMethod({\n        method: ApiEnum.GET_FEATURE_VARIABLE_VALUE,\n        campaignKey: campaignKey,\n        variableKey: variableKey,\n        userId: userId,\n        customVariables: customVariables,\n        variationTargetingVariables: variationTargetingVariables,\n        userStorageData: userStorageData,\n        metaData: metaData\n      })) {\n        areParamsValid = true;\n      }\n    }\n\n    if (areParamsValid === false) {\n      vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_BAD_PARAMETERS, {\n        file: file,\n        api: ApiEnum.GetFeatureVariableValue\n      }));\n      return null;\n    } // Get the cached configuration\n\n\n    var config = vwoInstance.SettingsFileManager.getConfig();\n    var settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n    config.apiName = api; // If no settings are found, simply return no variation\n\n    if (!settingsFile) {\n      return null;\n    }\n\n    var campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n    if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n      vwoInstance.logger.log(LogLevelEnum.WARN, LogMessageUtil.build(LogMessageEnum.WARNING_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n        file: file,\n        campaignKey: campaignKey,\n        api: api\n      }));\n      return null;\n    }\n\n    if (CampaignUtil.isAbCampaign(campaign)) {\n      // API not allowed for full-stack AB campaigns\n      vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_NOT_APPLICABLE, {\n        file: file,\n        campaignKey: campaignKey,\n        campaignType: campaign.type,\n        userId: userId,\n        api: api\n      }));\n      return null;\n    }\n\n    var variable;\n\n    var _DecisionUtil$getVari = DecisionUtil.getVariation(config, settingsFile, campaign, campaignKey, userId, customVariables, variationTargetingVariables, userStorageData, metaData, false, undefined, api),\n        variation = _DecisionUtil$getVari.variation,\n        variationName = _DecisionUtil$getVari.variationName;\n\n    if (!variationName) {\n      vwoInstance.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.FEATURE_STATUS, {\n        file: file,\n        campaignKey: campaignKey,\n        userId: userId,\n        status: 'disabled'\n      }));\n      return null;\n    }\n\n    if (CampaignUtil.isFeatureRolloutCampaign(campaign)) {\n      variable = FeatureUtil.getVariableForFeature(campaign, variableKey);\n    } else if (CampaignUtil.isFeatureTestCampaign(campaign)) {\n      variable = FeatureUtil.getVariableValueForVariation(campaign, variation, variableKey);\n\n      if (ObjectUtil.areObjectKeys(variable) && variation.isFeatureEnabled) {\n        vwoInstance.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.FEATURE_VARIABLE_VALUE, {\n          file: file,\n          variableKey: variableKey,\n          campaignKey: campaign.key,\n          variableValue: variable.value,\n          userId: userId\n        }));\n      } else if (ObjectUtil.areObjectKeys(variable) && !variation.isFeatureEnabled) {\n        vwoInstance.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.FEATURE_VARIABLE_DEFAULT_VALUE, {\n          file: file,\n          variableKey: variableKey,\n          variationName: variationName\n        }));\n      }\n    }\n\n    if (!ObjectUtil.areObjectKeys(variable)) {\n      vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.VARIABLE_NOT_FOUND, {\n        file: file,\n        variableKey: variableKey,\n        userId: userId\n      }));\n      return null;\n    }\n\n    var variableValue = variable.value;\n    var typeCastedValue = FeatureUtil.getTypeCastVariableValue(variableValue, variable.type);\n    return typeCastedValue;\n  } catch (err) {\n    vwoInstance.logger.log(LogLevelEnum.ERROR, err.message);\n    return null;\n  }\n}\n\nmodule.exports = getFeatureVariableValue;\n\n/***/ }),\n\n/***/ \"./lib/api/getVariation.js\":\n/*!*********************************!*\\\n  !*** ./lib/api/getVariation.js ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_44654__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Constants = __nested_webpack_require_44654__(/*! ../constants */ \"./lib/constants/index.js\");\n\nvar ApiEnum = __nested_webpack_require_44654__(/*! ../enums/ApiEnum */ \"./lib/enums/ApiEnum.js\");\n\nvar DecisionUtil = __nested_webpack_require_44654__(/*! ../utils/DecisionUtil */ \"./lib/utils/DecisionUtil.js\");\n\nvar CampaignUtil = __nested_webpack_require_44654__(/*! ../utils/CampaignUtil */ \"./lib/utils/CampaignUtil.js\");\n\nvar ValidateUtil = __nested_webpack_require_44654__(/*! ../utils/ValidateUtil */ \"./lib/utils/ValidateUtil.js\");\n\nvar DataTypeUtil = __nested_webpack_require_44654__(/*! ../utils/DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n\nvar logging = __nested_webpack_require_44654__(/*! ../services/logging */ \"./lib/services/logging/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_44654__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar file = FileNameEnum.GetVariation;\n/**\n * This API method: Gets the variation assigned for the user for the campaign\n *\n * 1. Validates the arguments being passed\n * 2. Checks if user is eligible to get bucketed into the campaign,\n * 3. Assigns the determinitic variation to the user(based on userId), if user becomes part of campaign\n *    If userStorageService is used, it will look into it for the variation and if found, no further processing is done\n *\n * @param {Object} vwoInstance       VWO instance which has logger, settingsFile etc.\n * @param {String} campaignKey       unique campaign key specified in VWO app\n * @param {String} userId            ID assigned to a user\n * @param {Object} options           Optional params\n *\n * @return {String|null}             If variation is assigned then variation-name otherwise null in case of user not becoming part\n */\n\nfunction getVariation(vwoInstance, campaignKey, userId) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var api = ApiEnum.GET_VARIATION_NAME;\n  var areParamsValid = false;\n\n  if (DataTypeUtil.isObject(options)) {\n    var customVariables = options.customVariables,\n        variationTargetingVariables = options.variationTargetingVariables,\n        userStorageData = options.userStorageData,\n        metaData = options.metaData; // Check if arguments have valid data-type\n\n    if (ValidateUtil.areValidParamsForAPIMethod({\n      method: ApiEnum.GET_VARIATION_NAME,\n      campaignKey: campaignKey,\n      userId: userId,\n      customVariables: customVariables,\n      variationTargetingVariables: variationTargetingVariables,\n      userStorageData: userStorageData,\n      metaData: metaData\n    })) {\n      areParamsValid = true;\n    }\n  }\n\n  if (areParamsValid === false) {\n    vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_BAD_PARAMETERS, {\n      file: file,\n      api: ApiEnum.GET_VARIATION_NAME\n    }));\n    return null;\n  } // Get the cached configuration\n\n\n  var config = vwoInstance.SettingsFileManager.getConfig();\n  var settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n  config.apiName = api; // If no settings are found, simply return no variation\n\n  if (!settingsFile) {\n    return null;\n  } // Get the campaign settings based on campaignKey from the settings\n\n\n  var campaign = CampaignUtil.getCampaign(settingsFile, campaignKey); // If matching campaign is not found with campaignKey or if found but is in not RUNNING state, simply return no variation\n\n  if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n    vwoInstance.logger.log(LogLevelEnum.WARN, LogMessageUtil.build(LogMessageEnum.WARNING_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n      file: file,\n      campaignKey: campaignKey,\n      api: api\n    }));\n    return null;\n  }\n\n  if (CampaignUtil.isFeatureRolloutCampaign(campaign)) {\n    vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_NOT_APPLICABLE, {\n      file: file,\n      campaignKey: campaignKey,\n      campaignType: campaign.type,\n      userId: userId,\n      api: api\n    }));\n    return null;\n  }\n\n  var _DecisionUtil$getVari = DecisionUtil.getVariation(config, settingsFile, campaign, campaignKey, userId, customVariables, variationTargetingVariables, userStorageData, metaData, false, undefined, api),\n      variationName = _DecisionUtil$getVari.variationName;\n\n  if (!variationName) {\n    return null;\n  }\n\n  return variationName;\n}\n\nmodule.exports = getVariation;\n\n/***/ }),\n\n/***/ \"./lib/api/index.js\":\n/*!**************************!*\\\n  !*** ./lib/api/index.js ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_49937__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar activate = __nested_webpack_require_49937__(/*! ./activate */ \"./lib/api/activate.js\");\n\nvar getVariation = __nested_webpack_require_49937__(/*! ./getVariation */ \"./lib/api/getVariation.js\");\n\nvar track = __nested_webpack_require_49937__(/*! ./track */ \"./lib/api/track.js\");\n\nvar isFeatureEnabled = __nested_webpack_require_49937__(/*! ./isFeatureEnabled */ \"./lib/api/isFeatureEnabled.js\");\n\nvar getFeatureVariableValue = __nested_webpack_require_49937__(/*! ./getFeatureVariableValue */ \"./lib/api/getFeatureVariableValue.js\");\n\nvar push = __nested_webpack_require_49937__(/*! ./push */ \"./lib/api/push.js\");\n\nmodule.exports = {\n  activate: activate,\n  getVariation: getVariation,\n  track: track,\n  isFeatureEnabled: isFeatureEnabled,\n  getFeatureVariableValue: getFeatureVariableValue,\n  push: push\n};\n\n/***/ }),\n\n/***/ \"./lib/api/isFeatureEnabled.js\":\n/*!*************************************!*\\\n  !*** ./lib/api/isFeatureEnabled.js ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_51552__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Constants = __nested_webpack_require_51552__(/*! ../constants */ \"./lib/constants/index.js\");\n\nvar ApiEnum = __nested_webpack_require_51552__(/*! ../enums/ApiEnum */ \"./lib/enums/ApiEnum.js\");\n\nvar DecisionUtil = __nested_webpack_require_51552__(/*! ../utils/DecisionUtil */ \"./lib/utils/DecisionUtil.js\");\n\nvar CampaignUtil = __nested_webpack_require_51552__(/*! ../utils/CampaignUtil */ \"./lib/utils/CampaignUtil.js\");\n\nvar ImpressionUtil = __nested_webpack_require_51552__(/*! ../utils/ImpressionUtil */ \"./lib/utils/ImpressionUtil.js\");\n\nvar ValidateUtil = __nested_webpack_require_51552__(/*! ../utils/ValidateUtil */ \"./lib/utils/ValidateUtil.js\");\n\nvar DataTypeUtil = __nested_webpack_require_51552__(/*! ../utils/DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n\nvar logging = __nested_webpack_require_51552__(/*! ../services/logging */ \"./lib/services/logging/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_51552__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar EventEnum = __nested_webpack_require_51552__(/*! ../enums/EventEnum */ \"./lib/enums/EventEnum.js\");\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar file = FileNameEnum.IsFeatureEnabled;\n/**\n * This API checks: Whether a feature is enabled or not for the given user\n *\n * 1. Validates the arguments being passed\n * 2. Checks if user is eligible for campaign and check if feature is enabled for the user.\n * 4. If feature enabled, sends a call to VWO server for tracking visitor\n *\n * @param {Object} vwoInstance       VWO instance which has logger, settingsFile etc.\n * @param {String} campaignKey       Unique key for a campaign\n * @param {String} userId            Unique identifier for the user\n * @param {Object} options           Optional params\n *\n * @return {Boolean}                 true if feature enabled, false otherwise\n */\n\nfunction isFeatureEnabled(vwoInstance, campaignKey, userId) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var api = ApiEnum.IS_FEATURE_ENABLED;\n  var areParamsValid = false;\n\n  if (DataTypeUtil.isObject(options)) {\n    var customVariables = options.customVariables,\n        variationTargetingVariables = options.variationTargetingVariables,\n        userStorageData = options.userStorageData,\n        shouldTrackReturningUser = options.shouldTrackReturningUser,\n        metaData = options.metaData,\n        responseCallback = options.responseCallback; // Check if arguments have valid data-type\n\n    if (ValidateUtil.areValidParamsForAPIMethod({\n      method: ApiEnum.IS_FEATURE_ENABLED,\n      campaignKey: campaignKey,\n      userId: userId,\n      customVariables: customVariables,\n      variationTargetingVariables: variationTargetingVariables,\n      userStorageData: userStorageData,\n      shouldTrackReturningUser: shouldTrackReturningUser,\n      metaData: metaData,\n      responseCallback: responseCallback\n    })) {\n      areParamsValid = true;\n    }\n  }\n\n  if (areParamsValid === false) {\n    vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_BAD_PARAMETERS, {\n      file: file,\n      api: ApiEnum.isFeatureEnabled\n    }));\n    return null;\n  } // Get the cached configuration\n\n\n  var config = vwoInstance.SettingsFileManager.getConfig();\n  var settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api); // If no settings are found, simply log and return false\n\n  if (!settingsFile) {\n    return null;\n  }\n\n  shouldTrackReturningUser = shouldTrackReturningUser || config.shouldTrackReturningUser || false; // Get the campaign settings based on campaignKey from the settings\n\n  var campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n  if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n    vwoInstance.logger.log(LogLevelEnum.WARN, LogMessageUtil.build(LogMessageEnum.WARNING_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n      file: file,\n      campaignKey: campaignKey,\n      api: api\n    }));\n    return null;\n  }\n\n  if (CampaignUtil.isAbCampaign(campaign)) {\n    // API not allowed for full-stack AB campaigns\n    vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_NOT_APPLICABLE, {\n      file: file,\n      campaignKey: campaignKey,\n      campaignType: campaign.type,\n      userId: userId,\n      api: api\n    }));\n    return null;\n  }\n\n  var _DecisionUtil$getVari = DecisionUtil.getVariation(config, settingsFile, campaign, campaignKey, userId, customVariables, variationTargetingVariables, userStorageData, metaData, true, undefined, api),\n      variation = _DecisionUtil$getVari.variation,\n      variationName = _DecisionUtil$getVari.variationName,\n      variationId = _DecisionUtil$getVari.variationId,\n      isStoredVariation = _DecisionUtil$getVari.isStoredVariation;\n\n  var isFeatureEnabled = false;\n\n  if (variationName) {\n    isFeatureEnabled = CampaignUtil.isFeatureRolloutCampaign(campaign) || variation.isFeatureEnabled;\n\n    if (isStoredVariation && !shouldTrackReturningUser) {\n      vwoInstance.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CAMPAIGN_USER_ALREADY_TRACKED, {\n        file: file,\n        userId: userId,\n        campaignKey: campaignKey,\n        api: api\n      }));\n    } else {\n      // Variation found...let VWO server knows about it to show report stats\n      if (config.batchEvents) {\n        var properties = ImpressionUtil.buildBatchEventForTrackingUser(settingsFile, campaign.id, variationId, userId);\n        vwoInstance.batchEventsQueue.enqueue(properties);\n      } else if (settingsFile.isEventArchEnabled) {\n        var _properties = ImpressionUtil.getEventsBaseProperties(settingsFile, EventEnum.VWO_VARIATION_SHOWN, vwoInstance.usageStats.getUsageStats());\n\n        var payload = ImpressionUtil.getTrackUserPayloadData(settingsFile, userId, EventEnum.VWO_VARIATION_SHOWN, campaign.id, variationId);\n        vwoInstance.eventQueue.process(config, _properties, vwoInstance, {\n          payload: payload,\n          responseCallback: responseCallback\n        });\n      } else {\n        var _properties2 = ImpressionUtil.buildEventForTrackingUser(settingsFile, campaign.id, variationId, userId, vwoInstance.usageStats.getUsageStats());\n\n        vwoInstance.eventQueue.process(config, _properties2, vwoInstance, {\n          responseCallback: responseCallback\n        });\n      }\n\n      vwoInstance.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.FEATURE_STATUS, {\n        file: file,\n        campaignKey: campaignKey,\n        userId: userId,\n        status: isFeatureEnabled ? 'enabled' : 'disabled'\n      }));\n\n      if (config.isDevelopmentMode) {\n        return {\n          isFeatureEnabled: isFeatureEnabled\n        };\n      }\n\n      return isFeatureEnabled;\n    }\n  }\n\n  vwoInstance.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.FEATURE_STATUS, {\n    file: file,\n    campaignKey: campaignKey,\n    userId: userId,\n    status: isFeatureEnabled ? 'enabled' : 'disabled'\n  }));\n\n  if (isStoredVariation || config.isDevelopmentMode) {\n    return {\n      isFeatureEnabled: isFeatureEnabled\n    };\n  }\n\n  return {\n    isFeatureEnabled: isFeatureEnabled\n  };\n}\n\nmodule.exports = isFeatureEnabled;\n\n/***/ }),\n\n/***/ \"./lib/api/push.js\":\n/*!*************************!*\\\n  !*** ./lib/api/push.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_59586__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ApiEnum = __nested_webpack_require_59586__(/*! ../enums/ApiEnum */ \"./lib/enums/ApiEnum.js\");\n\nvar logging = __nested_webpack_require_59586__(/*! ../services/logging */ \"./lib/services/logging/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_59586__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar EventEnum = __nested_webpack_require_59586__(/*! ../enums/EventEnum */ \"./lib/enums/EventEnum.js\");\n\nvar ValidateUtil = __nested_webpack_require_59586__(/*! ../utils/ValidateUtil */ \"./lib/utils/ValidateUtil.js\");\n\nvar ImpressionUtil = __nested_webpack_require_59586__(/*! ../utils/ImpressionUtil */ \"./lib/utils/ImpressionUtil.js\");\n\nvar DataTypeUtil = __nested_webpack_require_59586__(/*! ../utils/DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n\nvar BatchEventsDispatcher;\n\nif (false) {}\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar file = FileNameEnum.Push;\n/**\n * This API method: Pushes the key-value tag pair for a particular user\n *\n * 1. validates the arguments being passed\n * 2. Sends a call to VWO push api\n *\n * @param {Object} vwoInstance               VWO instance which has logger, settingsFile etc.\n * @param {String} tagKey                    tag key\n * @param {String} tagValue                  tag Value\n * @param {String} userId                    ID assigned to a user\n *\n * @return {Boolean}                         true if request is pushed to eventQueue, false if params are invalid or settings file is unavailable\n */\n\nfunction push(vwoInstance, tagKey, tagValue, userId, customDimensionMap) {\n  var _ref = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {},\n      responseCallback = _ref.responseCallback;\n\n  var api = ApiEnum.PUSH;\n\n  if (!ValidateUtil.areValidParamsForAPIMethod({\n    method: ApiEnum.PUSH,\n    tagKey: tagKey,\n    tagValue: tagValue,\n    userId: userId,\n    customDimensionMap: customDimensionMap,\n    responseCallback: responseCallback\n  })) {\n    vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.PUSH_INVALID_PARAMS, {\n      file: file,\n      method: api\n    }));\n    return false;\n  }\n\n  if (tagKey.length > 255) {\n    vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TAG_KEY_LENGTH_EXCEEDED, {\n      file: file,\n      tagKey: tagKey,\n      userId: userId\n    }));\n    return false;\n  }\n\n  if (tagValue.length > 255) {\n    vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TAG_VALUE_LENGTH_EXCEEDED, {\n      file: file,\n      tagKey: tagKey,\n      userId: userId,\n      tagValue: tagValue\n    }));\n    return false;\n  }\n\n  if (tagKey === ' ' && tagValue === ' ' && (!customDimensionMap || Object.keys(customDimensionMap).length === 0)) {\n    vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.PUSH_INVALID_PARAMS, {\n      file: file,\n      method: api\n    }));\n    return false;\n  }\n\n  if (tagKey !== ' ' && tagValue !== ' ') {\n    customDimensionMap[tagKey] = tagValue;\n  } // Get the cached configuration\n\n\n  var config = vwoInstance.SettingsFileManager.getConfig();\n  var settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api); // If no settings are found, simply false\n\n  if (!settingsFile) {\n    return false;\n  }\n\n  var result = {};\n\n  if (config.batchEvents) {\n    Object.keys(customDimensionMap).forEach(function (key) {\n      var tagValue = DataTypeUtil.isString(customDimensionMap[key]) ? customDimensionMap[key] : JSON.stringify(customDimensionMap[key]);\n      var properties = ImpressionUtil.buildBatchEventForPushing(settingsFile, key, tagValue, userId);\n      vwoInstance.batchEventsQueue.enqueue(properties);\n      result[key] = true;\n    });\n  } else if (settingsFile.isEventArchEnabled) {\n    var properties = ImpressionUtil.getEventsBaseProperties(settingsFile, EventEnum.VWO_SYNC_VISITOR_PROP);\n    var payload = ImpressionUtil.getPushPayloadData(settingsFile, userId, EventEnum.VWO_SYNC_VISITOR_PROP, customDimensionMap);\n    vwoInstance.eventQueue.process(config, properties, vwoInstance, {\n      payload: payload,\n      responseCallback: responseCallback\n    });\n    result.success = true;\n  } else {\n    var events = [];\n    var customDimensionKeys = Object.keys(customDimensionMap);\n    customDimensionKeys.forEach(function (key) {\n      var properties;\n      var tagValue = DataTypeUtil.isString(customDimensionMap[key]) ? customDimensionMap[key] : JSON.stringify(customDimensionMap[key]);\n\n      if (true) {\n        properties = ImpressionUtil.buildEventForPushing(settingsFile, key, tagValue, userId);\n        vwoInstance.eventQueue.process(config, properties, vwoInstance, {\n          responseCallback: responseCallback\n        });\n      } else {}\n\n      events.push(properties);\n      result[key] = true;\n    });\n\n    if (false) {}\n  }\n\n  if (config.isDevelopmentMode) {\n    return Object.assign({}, result, {\n      isDevelopmentMode: config.isDevelopmentMode\n    });\n  }\n\n  return result;\n}\n\nmodule.exports = push;\n\n/***/ }),\n\n/***/ \"./lib/api/track.js\":\n/*!**************************!*\\\n  !*** ./lib/api/track.js ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_65456__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Constants = __nested_webpack_require_65456__(/*! ../constants */ \"./lib/constants/index.js\");\n\nvar GoalTypeEnum = __nested_webpack_require_65456__(/*! ../enums/GoalTypeEnum */ \"./lib/enums/GoalTypeEnum.js\");\n\nvar ApiEnum = __nested_webpack_require_65456__(/*! ../enums/ApiEnum */ \"./lib/enums/ApiEnum.js\");\n\nvar DecisionUtil = __nested_webpack_require_65456__(/*! ../utils/DecisionUtil */ \"./lib/utils/DecisionUtil.js\");\n\nvar CampaignUtil = __nested_webpack_require_65456__(/*! ../utils/CampaignUtil */ \"./lib/utils/CampaignUtil.js\");\n\nvar _require = __nested_webpack_require_65456__(/*! ../utils/ObjectUtil */ \"./lib/utils/ObjectUtil.js\"),\n    objectValues = _require.objectValues;\n\nvar ImpressionUtil = __nested_webpack_require_65456__(/*! ../utils/ImpressionUtil */ \"./lib/utils/ImpressionUtil.js\");\n\nvar ValidateUtil = __nested_webpack_require_65456__(/*! ../utils/ValidateUtil */ \"./lib/utils/ValidateUtil.js\");\n\nvar DataTypeUtil = __nested_webpack_require_65456__(/*! ../utils/DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n\nvar logging = __nested_webpack_require_65456__(/*! ../services/logging */ \"./lib/services/logging/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_65456__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar file = FileNameEnum.Track;\nvar GOAL_TYPE_TO_TRACK_DEFAULT = GoalTypeEnum.ALL;\nvar GOAL_IDENTIFIER_SEPERATOR = '_vwo_';\nvar api = ApiEnum.TRACK;\nvar BatchEventsDispatcher;\n\nif (false) {}\n/**\n * This API method: Marks the conversion of the campaign for a particular goal\n *\n * 1. validates the arguments being passed\n * 2. Checks if user is eligible to get bucketed into the campaign,\n * 3. Gets the assigned determinitic variation to the user(based on userId), if user becomes part of campaign\n * 4. Sends an impression call to VWO server to track goal data\n *\n * @param {Object} vwoInstance               VWO instance which has logger, settingsFile etc.\n * @param {Number} campaignKey               unique campaign test key\n * @param {String} userId                    ID assigned to a user\n * @param {String} goalIdentifier             unique campaign's goal identifier\n * @param {Object} options                   Optional params\n */\n\n\nfunction track(vwoInstance, campaignKey, userId, goalIdentifier) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var areParamsValid = false;\n\n  if (DataTypeUtil.isObject(options)) {\n    var revenueValue = options.revenueValue,\n        customVariables = options.customVariables,\n        variationTargetingVariables = options.variationTargetingVariables,\n        userStorageData = options.userStorageData,\n        goalTypeToTrack = options.goalTypeToTrack,\n        shouldTrackReturningUser = options.shouldTrackReturningUser,\n        metaData = options.metaData,\n        responseCallback = options.responseCallback; // Check if arguments have valid data-type\n\n    if (ValidateUtil.areValidParamsForAPIMethod({\n      method: ApiEnum.TRACK,\n      campaignKey: campaignKey,\n      userId: userId,\n      goalIdentifier: goalIdentifier,\n      customVariables: customVariables,\n      variationTargetingVariables: variationTargetingVariables,\n      userStorageData: userStorageData,\n      goalTypeToTrack: goalTypeToTrack,\n      shouldTrackReturningUser: shouldTrackReturningUser,\n      metaData: metaData,\n      responseCallback: responseCallback\n    }) && (!goalTypeToTrack || goalTypeToTrack && objectValues(GoalTypeEnum).includes(goalTypeToTrack))) {\n      areParamsValid = true;\n    }\n  }\n\n  if (areParamsValid === false) {\n    vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_BAD_PARAMETERS, {\n      file: file,\n      api: ApiEnum.TRACK\n    }));\n    return null;\n  } // Get the cached configuration\n\n\n  var config = vwoInstance.SettingsFileManager.getConfig();\n  var settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n  config.apiName = api;\n  var revenuePropList = new Set(); // If no settings are found, simply do not track goal and return false\n\n  if (!settingsFile) {\n    return null;\n  }\n\n  var campaigns = [];\n  goalTypeToTrack = goalTypeToTrack || config.goalTypeToTrack || GOAL_TYPE_TO_TRACK_DEFAULT; // priority order - options > launchConfig > default\n\n  if (DataTypeUtil.isUndefined(shouldTrackReturningUser)) {\n    // if shouldTrackReturningUser is not given in options\n    if (DataTypeUtil.isBoolean(config.shouldTrackReturningUser)) {\n      // if shouldTrackReturningUser is given in config at launch\n      shouldTrackReturningUser = config.shouldTrackReturningUser;\n    } else {\n      shouldTrackReturningUser = false;\n    }\n  }\n\n  if (!DataTypeUtil.isString(campaignKey)) {\n    if (DataTypeUtil.isArray(campaignKey)) {\n      campaigns = CampaignUtil.getCampaignsForKeys(settingsFile, campaignKey);\n    } else {\n      campaigns = CampaignUtil.getCampaignsForGoal(settingsFile, goalIdentifier, goalTypeToTrack);\n    }\n  } else {\n    // Get the campaign settings based on campaignKey from the settings\n    var campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n    campaigns.push(campaign || {\n      key: campaignKey\n    });\n  }\n\n  var result = {};\n  var metricMap = {};\n  var events = [];\n  var areGlobalGoals =   true ? false : 0;\n  campaigns.forEach(function (campaign) {\n    return result[campaign.key] = trackCampaignGoal(vwoInstance, campaign, campaign.key, userId, settingsFile, goalIdentifier, revenueValue, config, customVariables, variationTargetingVariables, userStorageData, goalTypeToTrack, shouldTrackReturningUser, metaData, metricMap, revenuePropList, events, areGlobalGoals);\n  });\n\n  if (!Object.keys(result).length) {\n    return null;\n  }\n\n  if (true) {\n    if (events && events.length) {\n      for (var k = 0; k < events.length; k++) {\n        vwoInstance.eventQueue.process(config, events[k], vwoInstance, {\n          responseCallback: responseCallback\n        });\n      }\n    }\n  } else {}\n\n  if (settingsFile.isEventArchEnabled && Object.keys(metricMap).length > 0) {\n    var properties = ImpressionUtil.getEventsBaseProperties(settingsFile, goalIdentifier);\n    var payload = ImpressionUtil.getTrackGoalPayloadData(settingsFile, userId, goalIdentifier, metricMap, revenueValue, revenuePropList);\n    vwoInstance.eventQueue.process(config, properties, vwoInstance, {\n      payload: payload,\n      responseCallback: responseCallback\n    });\n    Object.keys(metricMap).forEach(function (key) {\n      DecisionUtil._saveUserData(config, metricMap[key].campaign, metricMap[key].variationName, metricMap[key].userId, metricMap[key].metaData, goalIdentifier);\n    });\n  }\n\n  if (config.isDevelopmentMode) {\n    return Object.assign({}, result, {\n      isDevelopmentMode: config.isDevelopmentMode\n    });\n  }\n\n  return result;\n}\n\nfunction trackCampaignGoal(vwoInstance, campaign, campaignKey, userId, settingsFile, goalIdentifier, revenueValue, config, customVariables, variationTargetingVariables, userStorageData, goalTypeToTrack, shouldTrackReturningUser, metaData, metricMap, revenuePropList, events, areGlobalGoals) {\n  // If matching campaign is not found with campaignKey or if found but is in not RUNNING state, simply return no variation\n  if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n    vwoInstance.logger.log(LogLevelEnum.WARN, LogMessageUtil.build(LogMessageEnum.WARNING_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n      file: file,\n      campaignKey: campaignKey,\n      api: api\n    }));\n    return false;\n  }\n\n  if (CampaignUtil.isFeatureRolloutCampaign(campaign)) {\n    vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_NOT_APPLICABLE, {\n      file: file,\n      campaignKey: campaignKey,\n      campaignType: campaign.type,\n      userId: userId,\n      api: api\n    }));\n    return false;\n  }\n\n  var campaignId = campaign.id; // Get the campaign goal settings based on goalIdentifier\n\n  var goal = CampaignUtil.getCampaignGoal(settingsFile, campaign.key, goalIdentifier);\n\n  if (!goal) {\n    // If no goal is found, something is wrong with the goalIdentifier\n    vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TRACK_API_GOAL_NOT_FOUND, {\n      file: file,\n      userId: userId,\n      goalIdentifier: goalIdentifier,\n      campaignKey: campaignKey\n    }));\n    return false;\n  } else if (goalTypeToTrack !== GOAL_TYPE_TO_TRACK_DEFAULT && goal.type !== goalTypeToTrack) {\n    return false;\n  } else if (goal.type === GoalTypeEnum.REVENUE && !ValidateUtil.isValidValue(revenueValue)) {\n    vwoInstance.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TRACK_API_REVENUE_NOT_PASSED_FOR_REVENUE_GOAL, {\n      file: file,\n      userId: userId,\n      goalIdentifier: goalIdentifier,\n      campaignKey: campaignKey\n    }));\n    return false;\n  }\n\n  if (goal.type === GoalTypeEnum.REVENUE && goal.revenueProp) {\n    revenuePropList.add(goal.revenueProp);\n  }\n\n  var _DecisionUtil$getVari = DecisionUtil.getVariation(config, settingsFile, campaign, campaignKey, userId, customVariables, variationTargetingVariables, userStorageData, metaData, false, goalIdentifier, api),\n      variationId = _DecisionUtil$getVari.variationId,\n      variationName = _DecisionUtil$getVari.variationName,\n      storedGoalIdentifier = _DecisionUtil$getVari.storedGoalIdentifier; // Is User is a part of Campaign and has been decided to be a part of particular variation\n\n\n  if (variationName) {\n    if (storedGoalIdentifier) {\n      var identifiers = storedGoalIdentifier.split(GOAL_IDENTIFIER_SEPERATOR);\n\n      if (!identifiers.includes(goalIdentifier)) {\n        storedGoalIdentifier += GOAL_IDENTIFIER_SEPERATOR + goalIdentifier;\n\n        DecisionUtil._saveUserData(config, campaign, variationName, userId, metaData, storedGoalIdentifier);\n      } else if (!shouldTrackReturningUser) {\n        vwoInstance.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CAMPAIGN_GOAL_ALREADY_TRACKED, {\n          file: file,\n          userId: userId,\n          goalIdentifier: goalIdentifier,\n          campaignKey: campaignKey\n        }));\n        return false;\n      }\n    } // If goal is found, send an impression to VWO server for report stats\n\n\n    if (config.batchEvents) {\n      var properties = ImpressionUtil.buildBatchEventForTrackingGoal(settingsFile, campaignId, variationId, userId, goal, revenueValue);\n      vwoInstance.batchEventsQueue.enqueue(properties);\n    } else if (settingsFile.isEventArchEnabled) {\n      metricMap[campaign.id] = {\n        config: config,\n        campaign: campaign,\n        variationName: variationName,\n        userId: userId,\n        metaData: metaData,\n        goal: goal\n      };\n      return true;\n    } else {\n      var _properties = {};\n\n      if (areGlobalGoals) {\n        _properties = ImpressionUtil.buildBatchEventForTrackingGoal(settingsFile, campaignId, variationId, userId, goal, revenueValue);\n      } else {\n        _properties = ImpressionUtil.buildEventForTrackingGoal(settingsFile, campaignId, variationId, userId, goal, revenueValue);\n      }\n\n      events.push(_properties);\n    }\n\n    DecisionUtil._saveUserData(config, campaign, variationName, userId, metaData, goalIdentifier);\n\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = track;\n\n/***/ }),\n\n/***/ \"./lib/constants/index.js\":\n/*!********************************!*\\\n  !*** ./lib/constants/index.js ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* global SDK_NAME, SDK_VERSION */\nvar packageFile = {}; // For javascript-sdk, to keep the build size low\n// avoid adding the whole package file in the file\n\nif (true) {\n  packageFile = {\n    name: \"vwo-javascript-sdk\",\n    version: \"1.32.3\"\n  };\n} else {}\n\nmodule.exports = {\n  SDK_NAME: packageFile.name,\n  SDK_VERSION: packageFile.version,\n  PLATFORM: 'server',\n  SEED_VALUE: 1,\n  MAX_TRAFFIC_PERCENT: 100,\n  MAX_TRAFFIC_VALUE: 10000,\n  MAX_EVENTS_PER_REQUEST: 5000,\n  DEFAULT_EVENTS_PER_REQUEST: 100,\n  DEFAULT_REQUEST_TIME_INTERVAL: 600,\n  // 10 * 60(secs) = 600 secs i.e. 10 minutes\n  STATUS_RUNNING: 'RUNNING',\n  SEED_URL: 'https://vwo.com',\n  HTTP_PROTOCOL: 'http://',\n  HTTPS_PROTOCOL: 'https://',\n  SDK_QUERY_PARAM: 'sdk',\n  SDK_VERSION_QUERY_PARAM: 'sdk-v'\n};\n\n/***/ }),\n\n/***/ \"./lib/core/BucketingService.js\":\n/*!**************************************!*\\\n  !*** ./lib/core/BucketingService.js ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_79273__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Hasher = __nested_webpack_require_79273__(/*! murmurhash */ \"./node_modules/murmurhash/murmurhash.js\");\n\nvar Constants = __nested_webpack_require_79273__(/*! ../constants */ \"./lib/constants/index.js\");\n\nvar ValidateUtil = __nested_webpack_require_79273__(/*! ../utils/ValidateUtil */ \"./lib/utils/ValidateUtil.js\");\n\nvar logging = __nested_webpack_require_79273__(/*! ../services/logging */ \"./lib/services/logging/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_79273__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar CampaignUtil = __nested_webpack_require_79273__(/*! ../utils/CampaignUtil */ \"./lib/utils/CampaignUtil.js\");\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar logger = logging.getLogger();\nvar file = FileNameEnum.BucketingService;\nvar BucketingService = {\n  /**\n   * Generates Bucket Value of the User by hashing the User ID by murmurHash\n   * and scaling it down.\n   *\n   * @param {Number} hashValue the hashValue generated after hashing\n   * @param {Number} maxValue the value up-to which hashValue needs to be scaled\n   * @param {Number} multiplier multiplier in case the traffic allocation is less than 100\n   *\n   * @return {Number} bucket Value of the User\n   */\n  _generateBucketValue: function _generateBucketValue(hashValue, maxValue) {\n    var multiplier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var ratio = hashValue / Math.pow(2, 32);\n    var multipliedValue = (maxValue * ratio + 1) * multiplier;\n    var value = Math.floor(multipliedValue);\n    return value;\n  },\n\n  /**\n   * Returns the Variation by checking the Start and End Bucket Allocations of each Variation\n   *\n   * @param {Object} campaign which contains the variations\n   * @param {Number} bucketValue the bucket Value of the user\n   *\n   * @return {Object|null} variation data allotted to the user or null if not\n   */\n  _getVariation: function _getVariation(variations, bucketValue) {\n    for (var i = 0; i < Object.keys(variations).length; i++) {\n      var variation = variations[i];\n\n      if (bucketValue >= variation.startVariationAllocation && bucketValue <= variation.endVariationAllocation) {\n        return variation;\n      }\n    }\n\n    return null;\n  },\n\n  /**\n   * Validates the User ID and generates Bucket Value of the User by hashing the userId by murmurHash and scaling it down.\n   *\n   * @param {String} userId the unique ID assigned to User\n   *\n   * @return {Number} the bucket Value allotted to User (between 1 to $this->$MAX_TRAFFIC_PERCENT)\n   */\n  _getBucketValueForUser: function _getBucketValueForUser(seed, userId, disableLog) {\n    var hashValue = Hasher.v3(seed, Constants.SEED_VALUE);\n\n    var bucketValue = BucketingService._generateBucketValue(hashValue, Constants.MAX_TRAFFIC_PERCENT);\n\n    logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.USER_HASH_BUCKET_VALUE, {\n      file: file,\n      hashValue: hashValue,\n      bucketValue: bucketValue,\n      userId: userId\n    }), disableLog);\n    return bucketValue;\n  },\n\n  /**\n   * Calculate if this user should become part of the campaign or not\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {Object} campaign fot getting the value of traffic allotted to the campaign\n   *\n   * @return {Boolean} if User is a part of Campaign or not\n   */\n  isUserPartOfCampaign: function isUserPartOfCampaign(userId, campaign) {\n    var disableLog = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!campaign) {\n      return false;\n    }\n\n    var trafficAllocation = campaign.percentTraffic;\n\n    var valueAssignedToUser = BucketingService._getBucketValueForUser(CampaignUtil.getBucketingSeed(userId, campaign), userId, disableLog);\n\n    var isUserPart = valueAssignedToUser !== 0 && valueAssignedToUser <= trafficAllocation;\n    logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_CAMPAIGN_ELIGIBILITY, {\n      file: file,\n      userId: userId,\n      campaignKey: campaign.key,\n      status: isUserPart ? 'eligible' : 'not eligible'\n    }), disableLog);\n    return isUserPart;\n  },\n\n  /**\n   * Validates the User ID and generates Variation into which the User is bucketed in.\n   *\n   * @param {String} userId the unique ID assigned to User\n   * @param {Object} campaign the Campaign of which User is a part of\n   *\n   * @return {Object|null} variation data into which user is bucketed in or null if not\n   */\n  bucketUserToVariation: function bucketUserToVariation(userId, campaign) {\n    var multiplier;\n\n    if (!ValidateUtil.isValidValue(userId)) {\n      return null;\n    }\n\n    if (!campaign) {\n      return null;\n    }\n\n    if (campaign.percentTraffic) {\n      multiplier = Constants.MAX_TRAFFIC_VALUE / campaign.percentTraffic / 100;\n    }\n\n    var hashValue = BucketingService._generateHashValue(campaign.isBucketingSeedEnabled ? \"\".concat(campaign.id, \"_\").concat(userId) : userId);\n\n    var bucketValue = BucketingService._generateBucketValue(hashValue, Constants.MAX_TRAFFIC_VALUE, multiplier);\n\n    logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.USER_CAMPAIGN_BUCKET_VALUES, {\n      file: file,\n      userId: userId,\n      campaignKey: campaign.key,\n      percentTraffic: campaign.percentTraffic,\n      bucketValue: bucketValue,\n      hashValue: hashValue\n    }));\n    return BucketingService._getVariation(campaign.variations, bucketValue);\n  },\n  calculateBucketValue: function calculateBucketValue(seed) {\n    var multiplier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n    var hashValue = BucketingService._generateHashValue(seed);\n\n    return BucketingService._generateBucketValue(hashValue, Constants.MAX_TRAFFIC_VALUE, multiplier);\n  },\n  _generateHashValue: function _generateHashValue(userId) {\n    return Hasher.v3(userId, Constants.SEED_VALUE);\n  }\n};\nmodule.exports = BucketingService;\n\n/***/ }),\n\n/***/ \"./lib/core/SegmentEvaluator.js\":\n/*!**************************************!*\\\n  !*** ./lib/core/SegmentEvaluator.js ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_86098__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SegmentEnum = __nested_webpack_require_86098__(/*! ../enums/segment */ \"./lib/enums/segment/index.js\");\n\nvar _require = __nested_webpack_require_86098__(/*! ../utils/ObjectUtil */ \"./lib/utils/ObjectUtil.js\"),\n    getKeyValue = _require.getKeyValue;\n\nvar _require2 = __nested_webpack_require_86098__(/*! ../utils/SegmentUtil */ \"./lib/utils/SegmentUtil.js\"),\n    operandCustomVariablesParser = _require2.operandCustomVariablesParser,\n    operandUserParser = _require2.operandUserParser;\n\nvar logging = __nested_webpack_require_86098__(/*! ../services/logging */ \"./lib/services/logging/index.js\");\n\nvar DataTypeUtil = __nested_webpack_require_86098__(/*! ../utils/DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n\nvar FileNameEnum = __nested_webpack_require_86098__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar _SegmentEnum$SegmentO = SegmentEnum.SegmentOperatorTypes,\n    AND = _SegmentEnum$SegmentO.AND,\n    OR = _SegmentEnum$SegmentO.OR,\n    NOT = _SegmentEnum$SegmentO.NOT;\nvar _SegmentEnum$SegmentO2 = SegmentEnum.SegmentOperandTypes,\n    CUSTOM_VARIABLE = _SegmentEnum$SegmentO2.CUSTOM_VARIABLE,\n    USER = _SegmentEnum$SegmentO2.USER;\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar file = FileNameEnum.SegmentEvaluator;\nvar logger = logging.getLogger();\nmodule.exports = SegmentEvaluator;\n/**\n * This method: A parser which recursively evaluates the expression tree represented by dsl\n *\n * @param {Object} dsl                     The segments defined in the campaing\n * @param {Object} customVariables         Key/value pair of custom_attributs properties\n *\n * @return {Boolean}                       true if user is to be made part of campaign, else false\n */\n\nfunction evaluator(dsl, customVariables) {\n  var _getKeyValue = getKeyValue(dsl),\n      key = _getKeyValue.key,\n      value = _getKeyValue.value;\n\n  var operator = key;\n  var subDsl = value;\n\n  if (operator === NOT) {\n    return !evaluator(subDsl, customVariables);\n  } else if (operator === AND) {\n    var list = [];\n\n    for (var i = 0; i < subDsl.length; i++) {\n      list.push(evaluator(subDsl[i], customVariables));\n    }\n\n    return list.every(function (val) {\n      return val;\n    });\n  } else if (operator === OR) {\n    var _list = [];\n\n    for (var _i = 0; _i < subDsl.length; _i++) {\n      _list.push(evaluator(subDsl[_i], customVariables));\n    }\n\n    return _list.some(function (val) {\n      return val;\n    });\n  } else if (operator === CUSTOM_VARIABLE) {\n    return operandCustomVariablesParser(subDsl, customVariables);\n  } else if (operator === USER) {\n    return operandUserParser(subDsl, customVariables);\n  }\n}\n\nfunction SegmentEvaluator(dsl) {\n  var customVariables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var campaignKey = arguments.length > 2 ? arguments[2] : undefined;\n  var userId = arguments.length > 3 ? arguments[3] : undefined;\n  var variation = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n  var disableLogs = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n  try {\n    if (DataTypeUtil.isObject(dsl) && !Object.keys(dsl).length) {\n      logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SEGMENTATION_SKIPPED, {\n        campaignKey: campaignKey,\n        userId: userId,\n        file: file\n      }), disableLogs);\n      return true;\n    }\n\n    if (DataTypeUtil.isObject(dsl) && Object.keys(dsl).length) {\n      return evaluator(dsl, customVariables);\n    }\n\n    return true;\n  } catch (err) {\n    logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SEGMENTATION_ERROR, {\n      campaignKey: campaignKey,\n      userId: userId,\n      customVariables: JSON.stringify(customVariables),\n      file: file,\n      err: err,\n      variation: variation\n    }), disableLogs);\n    return false;\n  }\n}\n\n/***/ }),\n\n/***/ \"./lib/core/VariationDecider.js\":\n/*!**************************************!*\\\n  !*** ./lib/core/VariationDecider.js ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_90860__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ValidateUtil = __nested_webpack_require_90860__(/*! ../utils/ValidateUtil */ \"./lib/utils/ValidateUtil.js\");\n\nvar Bucketer = __nested_webpack_require_90860__(/*! ./BucketingService */ \"./lib/core/BucketingService.js\");\n\nvar logging = __nested_webpack_require_90860__(/*! ../services/logging */ \"./lib/services/logging/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_90860__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar logger = logging.getLogger();\nvar file = FileNameEnum.VariationDecider;\nvar VariationDecider = {\n  /**\n   * Returns the Variation Allotted to User\n   *\n   * @param {String} userId the unique ID assigned to User\n   * @param {Object} campaign\n   *\n   * @return {Object} Variation object allotted to User\n   */\n  getVariationAllotted: function getVariationAllotted(userId, campaign) {\n    var response = {\n      variation: null,\n      variationId: null,\n      variationName: null\n    };\n\n    if (!ValidateUtil.isValidValue(userId)) {\n      logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.USER_ID_INVALID, {\n        file: file,\n        userId: userId\n      }));\n      return response;\n    }\n\n    if (Bucketer.isUserPartOfCampaign(userId, campaign)) {\n      var variation = VariationDecider.getVariationOfCampaignForUser(userId, campaign) || {};\n      response.variation = variation;\n      response.variationId = variation.id;\n      response.variationName = variation.name;\n    } else {\n      logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_NOT_PART_OF_CAMPAIGN, {\n        file: file,\n        userId: userId,\n        campaignKey: campaign.key\n      }));\n    }\n\n    return response;\n  },\n\n  /**\n   * Assigns random variation ID to a particular user depending on the PercentTraffic.\n   * Makes user a part of campaign if user's included in Traffic.\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {Object} campaign the Campaign of which user is to be made a part of\n   *\n   * @return {Object|null} Variation allotted to User\n   */\n  getVariationOfCampaignForUser: function getVariationOfCampaignForUser(userId, campaign) {\n    if (!campaign) {\n      return null;\n    }\n\n    var variation = Bucketer.bucketUserToVariation(userId, campaign);\n\n    if (variation && variation.name) {\n      logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_VARIATION_STATUS, {\n        file: file,\n        userId: userId,\n        campaignKey: campaign.key,\n        status: \"got Varation:\".concat(variation.name)\n      }));\n      return {\n        variation: variation,\n        name: variation.name,\n        id: variation.id\n      };\n    }\n\n    logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_VARIATION_STATUS, {\n      file: file,\n      userId: userId,\n      campaignKey: campaign.key,\n      status: 'got no variation'\n    }));\n    return null;\n  }\n};\nmodule.exports = VariationDecider;\n\n/***/ }),\n\n/***/ \"./lib/enums/AnsiColorEnum.js\":\n/*!************************************!*\\\n  !*** ./lib/enums/AnsiColorEnum.js ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar AnsiColorEnum = {\n  BOLD: '\\x1b[1m',\n  CYAN: '\\x1b[36m',\n  GREEN: '\\x1b[32m',\n  LIGHTBLUE: '\\x1b[94m',\n  RED: '\\x1b[31m',\n  RESET: '\\x1b[0m',\n  WHITE: '\\x1b[30m',\n  YELLOW: '\\x1b[33m'\n};\nmodule.exports = AnsiColorEnum;\n\n/***/ }),\n\n/***/ \"./lib/enums/ApiEnum.js\":\n/*!******************************!*\\\n  !*** ./lib/enums/ApiEnum.js ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ApiEnum = {\n  LAUNCH: 'launch',\n  ACTIVATE: 'activate',\n  GET_VARIATION_NAME: 'getVariation',\n  TRACK: 'track',\n  IS_FEATURE_ENABLED: 'isFeatureEnabled',\n  GET_FEATURE_VARIABLE_VALUE: 'getFeatureVariableValue',\n  PUSH: 'push'\n};\nmodule.exports = ApiEnum;\n\n/***/ }),\n\n/***/ \"./lib/enums/CampaignTypeEnum.js\":\n/*!***************************************!*\\\n  !*** ./lib/enums/CampaignTypeEnum.js ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar CampaignTypeEnum = {\n  FEATURE_TEST: 'FEATURE_TEST',\n  FEATURE_ROLLOUT: 'FEATURE_ROLLOUT',\n  AB: 'VISUAL_AB'\n};\nmodule.exports = CampaignTypeEnum;\n\n/***/ }),\n\n/***/ \"./lib/enums/DataTypeEnum.js\":\n/*!***********************************!*\\\n  !*** ./lib/enums/DataTypeEnum.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar DataTypeEnum = {\n  NUMBER: 'number',\n  STRING: 'string',\n  // FUNCTION: 'function',\n  BOOLEAN: 'boolean',\n  OBJECT: 'object'\n};\nmodule.exports = DataTypeEnum;\n\n/***/ }),\n\n/***/ \"./lib/enums/EventEnum.js\":\n/*!********************************!*\\\n  !*** ./lib/enums/EventEnum.js ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar EventEnum = {\n  VWO_VARIATION_SHOWN: 'vwo_variationShown',\n  VWO_SYNC_VISITOR_PROP: 'vwo_syncVisitorProp'\n};\nmodule.exports = EventEnum;\n\n/***/ }),\n\n/***/ \"./lib/enums/FeatureVariableTypeEnum.js\":\n/*!**********************************************!*\\\n  !*** ./lib/enums/FeatureVariableTypeEnum.js ***!\n  \\**********************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar FeatureVariableTypeEnum = {\n  BOOLEAN: 'boolean',\n  DOUBLE: 'double',\n  INTEGER: 'integer',\n  STRING: 'string',\n  JSON: 'json'\n};\nmodule.exports = FeatureVariableTypeEnum;\n\n/***/ }),\n\n/***/ \"./lib/enums/FileNameEnum.js\":\n/*!***********************************!*\\\n  !*** ./lib/enums/FileNameEnum.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar LIB_PATH = 'lib';\nvar CORE_PATH = 'lib/core';\nvar UTIL_PATH = 'lib/util';\nvar SERVICES_PATH = 'lib/services';\nmodule.exports = {\n  INDEX: \"\".concat(LIB_PATH, \"/index\"),\n  VWO: \"\".concat(LIB_PATH, \"/VWO\"),\n  API: \"\".concat(LIB_PATH, \"/api/index\"),\n  Activate: \"\".concat(LIB_PATH, \"/api/activate\"),\n  GetVariation: \"\".concat(LIB_PATH, \"/api/getVariation\"),\n  Track: \"\".concat(LIB_PATH, \"/api/track\"),\n  IsFeatureEnabled: \"\".concat(LIB_PATH, \"/api/isFeatureEnabled\"),\n  GetFeatureVariableValue: \"\".concat(LIB_PATH, \"/api/getFeatureVariableValue\"),\n  Push: \"\".concat(LIB_PATH, \"/api/push\"),\n  SegmentEvaluator: \"\".concat(CORE_PATH, \"/SegmentEvaluator\"),\n  BucketingService: \"\".concat(CORE_PATH, \"/BucketingService\"),\n  VariationDecider: \"\".concat(CORE_PATH, \"/VariationDecider\"),\n  ConsoleLogManager: \"\".concat(SERVICES_PATH, \"/ConsoleLogManager\"),\n  EventQueue: \"\".concat(SERVICES_PATH, \"/EventQueue\"),\n  LoggingManager: \"\".concat(SERVICES_PATH, \"/LoggingManager\"),\n  SettingsFileManager: \"\".concat(SERVICES_PATH, \"/SettingsFileManager\"),\n  BatchEventsQueue: \"\".concat(SERVICES_PATH, \"/BatchEventsQueue\"),\n  CampaignUtil: \"\".concat(UTIL_PATH, \"/CampaignUtil\"),\n  DataTypeUtil: \"\".concat(UTIL_PATH, \"/DataTypeUtil\"),\n  EventDispatcher: \"\".concat(UTIL_PATH, \"/EventDispatcher\"),\n  EventDispatcherUtil: \"\".concat(UTIL_PATH, \"/EventDispatcherUtil\"),\n  FeatureUtil: \"\".concat(UTIL_PATH, \"/FeatureUtil\"),\n  Functionutil: \"\".concat(UTIL_PATH, \"/Functionutil\"),\n  ImpressionUtil: \"\".concat(UTIL_PATH, \"/ImpressionUtil\"),\n  UuidUtil: \"\".concat(UTIL_PATH, \"/UuidUtil\"),\n  ValidateUtil: \"\".concat(UTIL_PATH, \"/ValidateUtil\"),\n  DecisionUtil: \"\".concat(UTIL_PATH, \"/DecisionUtils\"),\n  HttpHandlerUtil: \"\".concat(UTIL_PATH, \"/HttpHandlerUtil\"),\n  HttpImageUtil: \"\".concat(UTIL_PATH, \"/HttpImageUtil\"),\n  UsageStatsUtil: \"\".concat(SERVICES_PATH, \"/UsageStats\")\n};\n\n/***/ }),\n\n/***/ \"./lib/enums/GoalTypeEnum.js\":\n/*!***********************************!*\\\n  !*** ./lib/enums/GoalTypeEnum.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar GoalTypeEnum = {\n  REVENUE: 'REVENUE_TRACKING',\n  CUSTOM: 'CUSTOM_GOAL',\n  ALL: 'ALL'\n};\nmodule.exports = GoalTypeEnum;\n\n/***/ }),\n\n/***/ \"./lib/enums/HooksEnum.js\":\n/*!********************************!*\\\n  !*** ./lib/enums/HooksEnum.js ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar HooksEnum = {\n  DECISION_TYPES: {\n    CAMPAIGN_DECISION: 'CAMPAIGN_DECISION'\n  }\n};\nmodule.exports = HooksEnum;\n\n/***/ }),\n\n/***/ \"./lib/enums/LogLevelEnum.js\":\n/*!***********************************!*\\\n  !*** ./lib/enums/LogLevelEnum.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_105696__) {\n\nvar _LogLevelColorInfoEnu, _LogLevelInfoEnum;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar AnsiColorEnum = __nested_webpack_require_105696__(/*! ./AnsiColorEnum */ \"./lib/enums/AnsiColorEnum.js\");\n\nvar LogNumberLevel = {\n  _0: 'NOTSET',\n  _1: 'DEBUG',\n  _2: 'INFO',\n  _3: 'WARN',\n  _4: 'ERROR'\n};\nvar LogLevelEnum = {\n  NOTSET: 0,\n  DEBUG: 1,\n  INFO: 2,\n  WARN: 3,\n  ERROR: 4\n};\nvar LogLevelColorInfoEnum = (_LogLevelColorInfoEnu = {}, _defineProperty(_LogLevelColorInfoEnu, LogLevelEnum.NOTSET, \"\".concat(AnsiColorEnum.BOLD).concat(AnsiColorEnum.WHITE, \"[NOTSET]:\").concat(AnsiColorEnum.RESET)), _defineProperty(_LogLevelColorInfoEnu, LogLevelEnum.DEBUG, \"\".concat(AnsiColorEnum.BOLD).concat(AnsiColorEnum.LIGHTBLUE, \"[DEBUG]: \").concat(AnsiColorEnum.RESET)), _defineProperty(_LogLevelColorInfoEnu, LogLevelEnum.INFO, \"\".concat(AnsiColorEnum.BOLD).concat(AnsiColorEnum.CYAN, \"[INFO]:  \").concat(AnsiColorEnum.RESET)), _defineProperty(_LogLevelColorInfoEnu, LogLevelEnum.WARN, \"\".concat(AnsiColorEnum.BOLD).concat(AnsiColorEnum.YELLOW, \"[WARN]:  \").concat(AnsiColorEnum.RESET)), _defineProperty(_LogLevelColorInfoEnu, LogLevelEnum.ERROR, \"\".concat(AnsiColorEnum.BOLD).concat(AnsiColorEnum.RED, \"[ERROR]: \").concat(AnsiColorEnum.RESET)), _LogLevelColorInfoEnu);\nvar LogLevelInfoEnum = (_LogLevelInfoEnum = {}, _defineProperty(_LogLevelInfoEnum, LogLevelEnum.NOTSET, \"[NOTSET]:\"), _defineProperty(_LogLevelInfoEnum, LogLevelEnum.DEBUG, \"[DEBUG]: \"), _defineProperty(_LogLevelInfoEnum, LogLevelEnum.INFO, \"[INFO]:  \"), _defineProperty(_LogLevelInfoEnum, LogLevelEnum.WARN, \"[WARN]:  \"), _defineProperty(_LogLevelInfoEnum, LogLevelEnum.ERROR, \"[ERROR]: \"), _LogLevelInfoEnum);\nmodule.exports = {\n  LogLevelEnum: LogLevelEnum,\n  LogNumberLevel: LogNumberLevel,\n  LogLevelInfoEnum: LogLevelInfoEnum,\n  LogLevelColorInfoEnum: LogLevelColorInfoEnum\n};\n\n/***/ }),\n\n/***/ \"./lib/enums/StatusEnum.js\":\n/*!*********************************!*\\\n  !*** ./lib/enums/StatusEnum.js ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = {\n  PASSED: 'passed',\n  FAILED: 'failed'\n};\n\n/***/ }),\n\n/***/ \"./lib/enums/UrlEnum.js\":\n/*!******************************!*\\\n  !*** ./lib/enums/UrlEnum.js ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar UrlEnum = {\n  BASE_URL: 'dev.visualwebsiteoptimizer.com',\n  SETTINGS_URL: '/server-side/settings',\n  WEBHOOK_SETTINGS_URL: '/server-side/pull',\n  TRACK_USER: '/server-side/track-user',\n  TRACK_GOAL: '/server-side/track-goal',\n  PUSH: '/server-side/push',\n  BATCH_EVENTS: '/server-side/batch-events',\n  EVENTS: '/events/t'\n};\nmodule.exports = UrlEnum;\n\n/***/ }),\n\n/***/ \"./lib/enums/segment/SegmentOperandTypesEnum.js\":\n/*!******************************************************!*\\\n  !*** ./lib/enums/segment/SegmentOperandTypesEnum.js ***!\n  \\******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = {\n  CUSTOM_VARIABLE: 'custom_variable',\n  USER: 'user'\n};\n\n/***/ }),\n\n/***/ \"./lib/enums/segment/SegmentOperandValueTypeRegexesEnum.js\":\n/*!*****************************************************************!*\\\n  !*** ./lib/enums/segment/SegmentOperandValueTypeRegexesEnum.js ***!\n  \\*****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = {\n  LOWER: /^lower/,\n  LOWER_MATCH: /^lower\\((.*)\\)/,\n  WILDCARD: /^wildcard/,\n  WILDCARD_MATCH: /^wildcard\\((.*)\\)/,\n  REGEX: /^regex/,\n  REGEX_MATCH: /^regex\\((.*)\\)/,\n  STARTING_STAR: /^\\*/,\n  ENDING_STAR: /\\*$/\n};\n\n/***/ }),\n\n/***/ \"./lib/enums/segment/SegmentOperandValuesEnum.js\":\n/*!*******************************************************!*\\\n  !*** ./lib/enums/segment/SegmentOperandValuesEnum.js ***!\n  \\*******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = {\n  LOWER_VALUE: 1,\n  STARTING_ENDING_STAR_VALUE: 2,\n  STARTING_STAR_VALUE: 3,\n  ENDING_STAR_VALUE: 4,\n  REGEX_VALUE: 5,\n  EQUAL_VALUE: 6\n};\n\n/***/ }),\n\n/***/ \"./lib/enums/segment/SegmentOperatorTypesEnum.js\":\n/*!*******************************************************!*\\\n  !*** ./lib/enums/segment/SegmentOperatorTypesEnum.js ***!\n  \\*******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = {\n  AND: 'and',\n  NOT: 'not',\n  OR: 'or'\n};\n\n/***/ }),\n\n/***/ \"./lib/enums/segment/index.js\":\n/*!************************************!*\\\n  !*** ./lib/enums/segment/index.js ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_114966__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SegmentOperandTypes = __nested_webpack_require_114966__(/*! ./SegmentOperandTypesEnum */ \"./lib/enums/segment/SegmentOperandTypesEnum.js\");\n\nvar SegmentOperatorTypes = __nested_webpack_require_114966__(/*! ./SegmentOperatorTypesEnum */ \"./lib/enums/segment/SegmentOperatorTypesEnum.js\");\n\nvar SegmentOperandValueTypeRegexes = __nested_webpack_require_114966__(/*! ./SegmentOperandValueTypeRegexesEnum */ \"./lib/enums/segment/SegmentOperandValueTypeRegexesEnum.js\");\n\nvar SegmentOperandValues = __nested_webpack_require_114966__(/*! ./SegmentOperandValuesEnum */ \"./lib/enums/segment/SegmentOperandValuesEnum.js\");\n\nvar SegmentEnum = {\n  SegmentOperandTypes: SegmentOperandTypes,\n  SegmentOperatorTypes: SegmentOperatorTypes,\n  SegmentOperandValueTypeRegexes: SegmentOperandValueTypeRegexes,\n  SegmentOperandValues: SegmentOperandValues\n};\nmodule.exports = SegmentEnum;\n\n/***/ }),\n\n/***/ \"./lib/index.js\":\n/*!**********************!*\\\n  !*** ./lib/index.js ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_116605__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VWO = __nested_webpack_require_116605__(/*! ./VWO */ \"./lib/VWO.js\");\n\nvar DataTypeUtil = __nested_webpack_require_116605__(/*! ./utils/DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n\nvar FunctionUtil = __nested_webpack_require_116605__(/*! ./utils/FunctionUtil */ \"./lib/utils/FunctionUtil.js\");\n\nvar _require = __nested_webpack_require_116605__(/*! ./utils/ObjectUtil */ \"./lib/utils/ObjectUtil.js\"),\n    objectValues = _require.objectValues;\n\nvar SettingsFileUtil = __nested_webpack_require_116605__(/*! ./utils/SettingsFileUtil */ \"./lib/utils/SettingsFileUtil.js\");\n\nvar GoalTypeEnum = __nested_webpack_require_116605__(/*! ./enums/GoalTypeEnum */ \"./lib/enums/GoalTypeEnum.js\");\n\nvar _require2 = __nested_webpack_require_116605__(/*! ./constants */ \"./lib/constants/index.js\"),\n    MAX_EVENTS_PER_REQUEST = _require2.MAX_EVENTS_PER_REQUEST;\n\nvar logging = __nested_webpack_require_116605__(/*! ./services/logging */ \"./lib/services/logging/index.js\");\n\nvar ApiEnum = __nested_webpack_require_116605__(/*! ./enums/ApiEnum */ \"./lib/enums/ApiEnum.js\");\n\nvar FileNameEnum = __nested_webpack_require_116605__(/*! ./enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar file = FileNameEnum.INDEX;\nvar setLogHandler = logging.setLogHandler,\n    setLogLevel = logging.setLogLevel,\n    LogLevelEnum = logging.LogLevelEnum,\n    LogNumberLevel = logging.LogNumberLevel,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar logger = logging.getLogger(); // By default, all ERRORS should be logged\n\nlogging.setLogLevel(LogLevelEnum.ERROR);\n\nfunction logError() {\n  var parameter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var log = LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CONFIG_PARAMETER_INVALID, {\n    file: file,\n    parameter: parameter,\n    type: type,\n    api: ApiEnum.LAUNCH\n  });\n  throw new Error(logger.log(LogLevelEnum.ERROR, log));\n}\n\nfunction logInfo() {\n  var parameter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var log = LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_PARAMETER_USED, {\n    file: file,\n    parameter: parameter,\n    type: type\n  });\n  console.info(\"VWO-SDK - [INFO]:   \".concat(FunctionUtil.getCurrentTime(), \" \").concat(log));\n}\n\nmodule.exports = {\n  logging: logging,\n  setLogger: setLogHandler,\n  setLogLevel: setLogLevel,\n  getSettingsFile: SettingsFileUtil.get,\n  GoalTypeEnum: GoalTypeEnum,\n  LogLevelEnum: LogLevelEnum,\n\n  /**\n   * Initializes the SDK and parses the settingsfile\n   *\n   * @param {Object} config configuration for the SDK\n   */\n  launch: function launch(sdkConfig) {\n    var config = {};\n\n    try {\n      // validating config schema\n      FunctionUtil.cloneObject(sdkConfig);\n\n      if (!DataTypeUtil.isUndefined(sdkConfig.shouldTrackReturningUser) && !DataTypeUtil.isBoolean(sdkConfig.shouldTrackReturningUser)) {\n        logError('shouldTrackReturningUser', 'boolean');\n      } else if (!DataTypeUtil.isUndefined(sdkConfig.shouldTrackReturningUser)) {\n        logInfo('shouldTrackReturningUser', 'boolean');\n      }\n\n      if (!DataTypeUtil.isUndefined(sdkConfig.isDevelopmentMode) && !DataTypeUtil.isBoolean(sdkConfig.isDevelopmentMode)) {\n        logError('isDevelopmentMode', 'boolean');\n      } else if (!DataTypeUtil.isUndefined(sdkConfig.isDevelopmentMode)) {\n        logInfo('isDevelopmentMode', 'boolean');\n      }\n\n      if (sdkConfig.goalTypeToTrack && !objectValues(GoalTypeEnum).includes(sdkConfig.goalTypeToTrack)) {\n        logError('goalTypeToTrack', 'string(REVENUE_TRACKING, CUSTOM_GOAL, ALL)');\n      } else if (sdkConfig.goalTypeToTrack) {\n        logInfo('goalTypeToTrack', 'string(REVENUE_TRACKING, CUSTOM_GOAL, ALL)');\n      }\n\n      if (sdkConfig.logging && sdkConfig.logging.level && !objectValues(LogLevelEnum).includes(sdkConfig.logging.level)) {\n        logError('logLevel', 'number(1,2,3,4)');\n      } else if (sdkConfig.logging && sdkConfig.logging.level) {\n        logInfo('logLevel', 'number(1,2,3,4)');\n      }\n\n      if (sdkConfig.pollingInterval && !DataTypeUtil.isNumber(sdkConfig.pollingInterval)) {\n        logError('pollingInterval', 'number(in miliiseconds)');\n      } else if (sdkConfig.pollingInterval) {\n        logInfo('pollingInterval', 'number(in miliiseconds)');\n      }\n\n      if (sdkConfig.pollingInterval && DataTypeUtil.isUndefined(sdkConfig.sdkKey)) {\n        logError();\n      }\n\n      if (sdkConfig.pollingInterval && !DataTypeUtil.isString(sdkConfig.sdkKey)) {\n        logError('sdkKey', 'string');\n      }\n\n      if (!DataTypeUtil.isUndefined(sdkConfig.batchEvents) && !DataTypeUtil.isObject(sdkConfig.batchEvents)) {\n        logError('batchEvents', 'object');\n      } else if (!DataTypeUtil.isUndefined(sdkConfig.batchEvents)) {\n        logInfo('batchEvents', 'object');\n      }\n\n      if (!DataTypeUtil.isUndefined(sdkConfig.returnPromiseFor) && !DataTypeUtil.isObject(sdkConfig.returnPromiseFor)) {\n        logError('returnPromiseFor', 'object');\n      } else if (!DataTypeUtil.isUndefined(sdkConfig.returnPromiseFor)) {\n        logInfo('returnPromiseFor', 'object');\n      }\n\n      if (!DataTypeUtil.isUndefined(sdkConfig.integrations) && !DataTypeUtil.isObject(sdkConfig.integrations)) {\n        logError('integrations', 'object');\n      } else if (!DataTypeUtil.isUndefined(sdkConfig.integrations)) {\n        logInfo('integrations', 'object');\n      }\n\n      if (!DataTypeUtil.isUndefined(sdkConfig.userStorageService) && !DataTypeUtil.isObject(sdkConfig.userStorageService)) {\n        logError('userStorageService', 'object');\n      } else if (!DataTypeUtil.isUndefined(sdkConfig.userStorageService)) {\n        logInfo('userStorageService', 'object');\n      } // For JavaScript SDK, batching is not required and is not available\n\n\n      if (DataTypeUtil.isObject(sdkConfig.batchEvents) && \"undefined\" === 'undefined') {\n        sdkConfig.batchEvents = null;\n      } // For Node.js SDK\n\n\n      if (false) {}\n\n      config = sdkConfig;\n    } catch (err) {\n      logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CONFIG_CORRUPTED, {\n        file: file,\n        api: ApiEnum.LAUNCH\n      }));\n      config = {};\n    } // If DEV mode, set colorful logs to true\n\n\n    if (config.isDevelopmentMode) {\n      logging.setLogColorMode(true);\n    } // If logging is enabled, use the logger and logLevel defined by the client\n\n\n    if (config.logging && DataTypeUtil.isObject(config.logging)) {\n      if (config.logging.haveColoredLogs !== undefined) {\n        logging.setLogColorMode(config.logging.haveColoredLogs);\n      }\n\n      if (config.logging.logger && DataTypeUtil.isObject(config.logging.logger) && DataTypeUtil.isFunction(config.logging.logger.log)) {\n        logging.setLogHandler(config.logging.logger);\n        logging.setLogLevel(logging.LogLevelEnum.NOTSET);\n        logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.CONFIG_CUSTOM_LOGGER_USED, {\n          file: file\n        }));\n      } else if (config.logging.logger) {\n        logError('logging.logger', 'object');\n      }\n\n      if (config.logging.level !== undefined) {\n        logging.setLogLevel(config.logging.level);\n        logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.CONFIG_LOG_LEVEL_SET, {\n          file: file,\n          level: LogNumberLevel['_' + config.logging.level]\n        }));\n      }\n    } // DEBUG log for knowing whether it's DEV mode\n\n\n    if (config.isDevelopmentMode) {\n      logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.CONFIG_DEVELOPMENT_MODE_STATUS, {\n        file: file\n      }));\n    } // Set logger on config Obkect, to be required later\n\n\n    config.logger = config.logging && config.logging.logger || logger; // Create an instance of VWO class which exposes API methods\n\n    return new VWO(config);\n  }\n};\n\n/***/ }),\n\n/***/ \"./lib/schemas/SettingsFileSchema.js\":\n/*!*******************************************!*\\\n  !*** ./lib/schemas/SettingsFileSchema.js ***!\n  \\*******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_125426__) {\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _require = __nested_webpack_require_125426__(/*! superstruct */ \"./node_modules/superstruct/lib/index.es.js\"),\n    validate = _require.validate,\n    number = _require.number,\n    string = _require.string,\n    _boolean = _require[\"boolean\"],\n    array = _require.array,\n    object = _require.object,\n    optional = _require.optional,\n    union = _require.union,\n    type = _require.type,\n    record = _require.record;\n\nvar campaignGoalSchema = type({\n  id: union([number(), string()]),\n  identifier: string(),\n  type: string(),\n  revenueProp: optional(string())\n});\nvar variableObjectSchema = type({\n  id: union([number(), string()]),\n  type: string(),\n  key: string(),\n  value: union([number(), string(), _boolean()])\n});\nvar campaignVariationSchema = type({\n  id: union([number(), string()]),\n  name: string(),\n  weight: union([number(), string()]),\n  changes: optional(object()),\n  segments: optional(object()),\n  variables: optional(union([object(), array(variableObjectSchema)])),\n  isFeatureEnabled: optional(_boolean()),\n  startVariationAllocation: optional(number()),\n  endVariationAllocation: optional(number())\n});\nvar campaignObjectSchema = type({\n  id: union([number(), string()]),\n  type: string(),\n  key: string(),\n  status: string(),\n  name: string(),\n  isBucketingSeedEnabled: optional(_boolean()),\n  percentTraffic: number(),\n  goals: union([object(), array(campaignGoalSchema)]),\n  variations: union([object(), array(campaignVariationSchema)]),\n  variables: optional(union([object(), array(variableObjectSchema)])),\n  segments: object(),\n  isForcedVariationEnabled: optional(_boolean()),\n  isUserListEnabled: optional(_boolean())\n});\nvar groupSchema = type({\n  groupName: string(),\n  campaigns: array(number())\n});\nvar settingsFileSchema = type({\n  sdkKey: optional(string()),\n  version: union([number(), string()]),\n  accountId: union([number(), string()]),\n  campaigns: array(campaignObjectSchema),\n  campaignGroups: optional(record(string(), number())),\n  isEventArchEnabled: optional(_boolean()),\n  collectionPrefix: optional(string()),\n  groups: optional(union([object(), record(string(), groupSchema)]))\n});\n\nvar validateSettingsFile = function validateSettingsFile(settings) {\n  var _validate = validate(settings, settingsFileSchema),\n      _validate2 = _slicedToArray(_validate, 1),\n      error = _validate2[0];\n\n  return !error;\n};\n\nmodule.exports = validateSettingsFile;\n\n/***/ }),\n\n/***/ \"./lib/services/EventQueue.js\":\n/*!************************************!*\\\n  !*** ./lib/services/EventQueue.js ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_129520__) {\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar DataTypeUtil = __nested_webpack_require_129520__(/*! ../utils/DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n\nvar EventDispatcher = __nested_webpack_require_129520__(/*! ../utils/EventDispatcherUtil */ \"./lib/utils/EventDispatcherUtil.js\");\n\nvar logging = __nested_webpack_require_129520__(/*! ./logging */ \"./lib/services/logging/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_129520__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar logger = logging.getLogger();\nvar file = FileNameEnum.EventQueue;\n\nvar EventQueue =\n/*#__PURE__*/\nfunction () {\n  function EventQueue() {\n    _classCallCheck(this, EventQueue);\n\n    this.running = false;\n    this.queue = [];\n  }\n\n  _createClass(EventQueue, [{\n    key: \"process\",\n    value: function process(config, properties, vwoInstance) {\n      var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n          payload = _ref.payload,\n          responseCallback = _ref.responseCallback;\n\n      if (config && config.isDevelopmentMode) {\n        logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.CONFIG_DEVELOPMENT_MODE_STATUS, {\n          file: file\n        }));\n        return;\n      }\n\n      this.enqueue(properties, vwoInstance, {\n        payload: payload,\n        responseCallback: responseCallback\n      });\n    }\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(properties, vwoInstance, _ref2) {\n      var payload = _ref2.payload,\n          responseCallback = _ref2.responseCallback;\n      this.queue.push({\n        eventName: properties.eventName,\n        properties: properties,\n        callback: function callback() {\n          if (payload) {\n            EventDispatcher.dispatchPostCall(properties, payload, {\n              responseCallback: responseCallback\n            });\n          } else {\n            EventDispatcher.dispatchGetCall(properties, {\n              responseCallback: responseCallback\n            });\n          }\n        }\n      });\n      logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.EVENT_QUEUE, {\n        file: file,\n        queueType: 'normal',\n        event: 'VWO_MASKED_PAYLOAD'\n      }));\n      vwoInstance.eventQueue.executeNext(properties);\n\n      if (!this.running) {\n        // if nothing is running, then start the engines!\n        this.executeNext(properties);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"executeNext\",\n    value: function executeNext(properties) {\n      this.running = false; // get the first element off the queue\n\n      if (this.queue && this.queue.length) {\n        var event = this.queue.shift();\n\n        if (event) {\n          this.running = true;\n\n          if (event.callback && DataTypeUtil.isFunction(event.callback)) {\n            event.callback(properties);\n          }\n        }\n      }\n    }\n  }]);\n\n  return EventQueue;\n}();\n\nmodule.exports = EventQueue;\n\n/***/ }),\n\n/***/ \"./lib/services/HooksManager.js\":\n/*!**************************************!*\\\n  !*** ./lib/services/HooksManager.js ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_134075__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar DataTypeUtil = __nested_webpack_require_134075__(/*! ../utils/DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n/**\n * Hooks Manager is responsible for triggering callbacks useful to the end-user based on certain lifecycle events.\n * Possible use with integrations when the user intends to send an event when a visitor is part of the experiment.\n */\n\n\nvar HooksManager = {\n  /**\n   * Initializes with configuration from VWO Object.\n   * @param {Object} config\n   */\n  init: function init() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.callback = config.integrations && config.integrations.callback;\n  },\n\n  /**\n   * Executes the callback\n   * @param {Object} properties Properties from the callback\n   */\n  execute: function execute(properties) {\n    if (DataTypeUtil.isFunction(this.callback)) {\n      this.callback(properties);\n    }\n  }\n};\nmodule.exports = HooksManager;\n\n/***/ }),\n\n/***/ \"./lib/services/SettingsFileManager.js\":\n/*!*********************************************!*\\\n  !*** ./lib/services/SettingsFileManager.js ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_135906__) {\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar CampaignUtil = __nested_webpack_require_135906__(/*! ../utils/CampaignUtil */ \"./lib/utils/CampaignUtil.js\");\n\nvar FunctionUtil = __nested_webpack_require_135906__(/*! ../utils/FunctionUtil */ \"./lib/utils/FunctionUtil.js\");\n\nvar SettingsFileUtil = __nested_webpack_require_135906__(/*! ../utils/SettingsFileUtil */ \"./lib/utils/SettingsFileUtil.js\");\n\nvar logging = __nested_webpack_require_135906__(/*! ./logging */ \"./lib/services/logging/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_135906__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar validateSettingsFile = __nested_webpack_require_135906__(/*! ../schemas/SettingsFileSchema */ \"./lib/schemas/SettingsFileSchema.js\");\n\nvar _require = __nested_webpack_require_135906__(/*! ../utils/DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\"),\n    isObject = _require.isObject;\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar file = FileNameEnum.SettingsFileManager;\n\nvar SettingsFileManager =\n/*#__PURE__*/\nfunction () {\n  // PRIVATE METHODS\n  function SettingsFileManager(config) {\n    _classCallCheck(this, SettingsFileManager);\n\n    if (config) {\n      if (config.settingsFile && isObject(config.settingsFile.campaigns) || config.settingsFile && !config.settingsFile.campaigns) {\n        config.settingsFile.campaigns = [];\n      }\n\n      this._configObj = config;\n      this._clonedSettingsFile = config.settingsFile ? FunctionUtil.cloneObject(config.settingsFile) : null;\n    } else {\n      this._configObj = null;\n      this._clonedSettingsFile = null;\n    }\n  }\n\n  _createClass(SettingsFileManager, [{\n    key: \"_setVariationBucketing\",\n    value: function _setVariationBucketing(campaign) {\n      CampaignUtil.setVariationAllocation(campaign);\n    } // PUBLIC METHODS\n\n  }, {\n    key: \"isSettingsFileValid\",\n    value: function isSettingsFileValid() {\n      if (!this._configObj || !this._clonedSettingsFile) {\n        return false;\n      }\n\n      var isValidSettingsFile = validateSettingsFile(this._clonedSettingsFile);\n\n      if (!isValidSettingsFile) {\n        this._configObj.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SETTINGS_FILE_CORRUPTED, {\n          file: file\n        }));\n\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"checkAndPoll\",\n    value: function checkAndPoll() {\n      var _this = this;\n\n      if (!this._configObj.pollingInterval || !this._configObj.sdkKey) {\n        return;\n      }\n\n      var lastSettingsFile = JSON.stringify(this._clonedSettingsFile);\n      setInterval(function () {\n        SettingsFileUtil.get(_this._clonedSettingsFile.accountId, _this._configObj.sdkKey).then(function (latestSettingsFile) {\n          _this._configObj.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.POLLING_SUCCESS, {\n            file: file,\n            accountId: _this._clonedSettingsFile.accountId\n          }));\n\n          var stringifiedLatestSettingsFile = JSON.stringify(latestSettingsFile);\n\n          if (stringifiedLatestSettingsFile !== lastSettingsFile) {\n            lastSettingsFile = stringifiedLatestSettingsFile;\n\n            _this.updateSettingsFile(latestSettingsFile);\n\n            _this._configObj.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.POLLING_SETTINGS_FILE_UPDATED, {\n              file: file,\n              accountId: _this._clonedSettingsFile.accountId\n            }));\n          } else {\n            _this._configObj.logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.POLLING_SETTINGS_FILE_NOT_UPDATED, {\n              file: file,\n              accountId: _this._clonedSettingsFile.accountId\n            }));\n          }\n        })[\"catch\"](function (_e) {\n          _this._configObj.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.POLLING_FAILED, {\n            file: file,\n            accountId: _this._clonedSettingsFile.accountId\n          }));\n        });\n      }, this._configObj.pollingInterval);\n\n      this._configObj.logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.POLLING_SETTINGS_FILE_REGISTERED, {\n        file: file,\n        pollingInterval: this._configObj.pollingInterval\n      }));\n    }\n  }, {\n    key: \"processSettingsFile\",\n    value: function processSettingsFile() {\n      var settingsFile = this._clonedSettingsFile;\n\n      for (var i = 0; i < settingsFile.campaigns.length; i++) {\n        var campaign = settingsFile.campaigns[i];\n\n        this._setVariationBucketing(campaign);\n      }\n\n      this._configObj.logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SETTINGS_FILE_PROCESSED, {\n        file: file,\n        accountId: this._clonedSettingsFile.accountId\n      }));\n\n      return settingsFile;\n    }\n    /**\n     * Fetch latest settings-file and update so that vwoClientInstance could use latest settings\n     * Helpful especially when using webhooks\n     *\n     * @param {Number} accountId\n     * @param {String} sdkKey\n     *\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"getAndUpdateSettingsFile\",\n    value: function getAndUpdateSettingsFile() {\n      var _this2 = this;\n\n      var accountId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._clonedSettingsFile.accountId;\n      var sdkKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._clonedSettingsFile.sdkKey;\n      return new Promise(function (resolve, _reject) {\n        SettingsFileUtil.get(accountId, sdkKey, null, {\n          isViaWebhook: true\n        }).then(function (settings) {\n          _this2.updateSettingsFile(settings);\n\n          resolve(settings);\n        })[\"catch\"](function (_err) {});\n      });\n    }\n    /**\n     * Update the settings-file on the instance so that latest settings could be used from next hit onwards\n     * @param {Object} settings\n     */\n\n  }, {\n    key: \"updateSettingsFile\",\n    value: function updateSettingsFile(settings) {\n      this._clonedSettingsFile = FunctionUtil.cloneObject(settings);\n      this.processSettingsFile();\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this._configObj;\n    }\n  }, {\n    key: \"getSettingsFile\",\n    value: function getSettingsFile(api) {\n      if (!this._clonedSettingsFile) {\n        this._configObj.logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_HAS_CORRUPTED_SETTINGS_FILE, {\n          file: file,\n          api: api\n        }));\n      }\n\n      return this._clonedSettingsFile;\n    }\n  }]);\n\n  return SettingsFileManager;\n}();\n\nmodule.exports = SettingsFileManager;\n\n/***/ }),\n\n/***/ \"./lib/services/UrlService.js\":\n/*!************************************!*\\\n  !*** ./lib/services/UrlService.js ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_144130__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar UrlEnum = __nested_webpack_require_144130__(/*! ../enums/UrlEnum */ \"./lib/enums/UrlEnum.js\");\n\nvar _require = __nested_webpack_require_144130__(/*! ../utils/DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\"),\n    isString = _require.isString;\n\nvar UrlService = {\n  init: function init() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        collectionPrefix = _ref.collectionPrefix;\n\n    if (collectionPrefix && isString(collectionPrefix)) {\n      UrlService.collectionPrefix = collectionPrefix;\n    }\n\n    return UrlService;\n  },\n  getBaseUrl: function getBaseUrl() {\n    var baseUrl = UrlEnum.BASE_URL;\n\n    if (UrlService.collectionPrefix) {\n      return \"\".concat(baseUrl, \"/\").concat(UrlService.collectionPrefix);\n    }\n\n    return baseUrl;\n  }\n};\nmodule.exports = UrlService;\n\n/***/ }),\n\n/***/ \"./lib/services/UsageStats.js\":\n/*!************************************!*\\\n  !*** ./lib/services/UsageStats.js ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_145806__) {\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _require = __nested_webpack_require_145806__(/*! ./logging */ \"./lib/services/logging/index.js\"),\n    LogManager = _require.LogManager;\n\nvar UsageStats =\n/*#__PURE__*/\nfunction () {\n  function UsageStats() {\n    _classCallCheck(this, UsageStats);\n\n    this.data = {};\n  }\n  /**\n   * Collect the usage stats from the params passed at the time of instantiating VWO and send them to VWO Server\n   * @param {Object} config    config passed at the time of instantiation.\n   */\n\n\n  _createClass(UsageStats, [{\n    key: \"collectUsageStats\",\n    value: function collectUsageStats(config) {\n      this.data['eb'] = Number(!!config.batchEvents);\n      this.data['ig'] = Number(!!config.integrations);\n      this.data['ss'] = Number(!!config.userStorageService);\n      this.data['cl'] = Number(!(config.logger instanceof LogManager));\n      this.data['ll'] = Number(config.logging && config.logging.level);\n      this.data['tr'] = Number(config.shouldTrackReturningUser);\n      this.data['gt'] = Number(!!config.goalTypeToTrack);\n      this.data['pi'] = Number(!!config.pollingInterval);\n      Object.keys(this.data).forEach(function (key) {\n        if (!this.data[key]) {\n          delete this.data[key];\n        }\n      }, this);\n    }\n    /**\n     * Get the collected usage stats.\n     * @returns     collected usage stats data\n     */\n\n  }, {\n    key: \"getUsageStats\",\n    value: function getUsageStats() {\n      if (Object.keys(this.data).length > 0) {\n        this.data['_l'] = 1;\n      }\n\n      return this.data;\n    }\n  }]);\n\n  return UsageStats;\n}();\n\nmodule.exports = UsageStats;\n\n/***/ }),\n\n/***/ \"./lib/services/logging/ConsoleLogManager.js\":\n/*!***************************************************!*\\\n  !*** ./lib/services/logging/ConsoleLogManager.js ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_149004__) {\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _require = __nested_webpack_require_149004__(/*! ../../utils/FunctionUtil */ \"./lib/utils/FunctionUtil.js\"),\n    getCurrentTime = _require.getCurrentTime;\n\nvar _require2 = __nested_webpack_require_149004__(/*! ../../enums/LogLevelEnum */ \"./lib/enums/LogLevelEnum.js\"),\n    LogLevelEnum = _require2.LogLevelEnum,\n    LogLevelInfoEnum = _require2.LogLevelInfoEnum,\n    LogLevelColorInfoEnum = _require2.LogLevelColorInfoEnum;\n\nvar ConsoleLogManager =\n/*#__PURE__*/\nfunction () {\n  function ConsoleLogManager() {\n    _classCallCheck(this, ConsoleLogManager);\n\n    this.logLevel = LogLevelEnum.NOTSET;\n    this.prefix = \"VWO-SDK\";\n    this.isColoredLogEnabled = false;\n  }\n\n  _createClass(ConsoleLogManager, [{\n    key: \"log\",\n    value: function log(level, message) {\n      if (!this.shouldLog(level)) {\n        return;\n      }\n\n      var logMessage;\n\n      if (this.isColoredLogEnabled) {\n        logMessage = \"\".concat(this.prefix, \" - \").concat(LogLevelColorInfoEnum[level], \" \").concat(getCurrentTime(), \" \").concat(message);\n      } else {\n        logMessage = \"\".concat(this.prefix, \" - \").concat(LogLevelInfoEnum[level], \" \").concat(getCurrentTime(), \" \").concat(message);\n      }\n\n      this.consoleLog(level, [logMessage]);\n    }\n  }, {\n    key: \"shouldLog\",\n    value: function shouldLog(targetLogLevel) {\n      return targetLogLevel >= this.logLevel;\n    }\n  }, {\n    key: \"setLogLevel\",\n    value: function setLogLevel(level) {\n      if (level === undefined) {\n        this.logLevel = LogLevelEnum.ERROR;\n      } else {\n        this.logLevel = level;\n      }\n    }\n  }, {\n    key: \"consoleLog\",\n    value: function consoleLog(level, logArguments) {\n      switch (level) {\n        case LogLevelEnum.INFO:\n          console.info.apply(console, logArguments);\n          break;\n\n        case LogLevelEnum.WARN:\n          console.warn.apply(console, logArguments);\n          break;\n\n        case LogLevelEnum.ERROR:\n          console.error.apply(console, logArguments);\n          break;\n\n        default:\n          console.log.apply(console, logArguments);\n          break;\n      }\n    }\n  }]);\n\n  return ConsoleLogManager;\n}();\n\nmodule.exports = ConsoleLogManager;\n\n/***/ }),\n\n/***/ \"./lib/services/logging/LoggingManager.js\":\n/*!************************************************!*\\\n  !*** ./lib/services/logging/LoggingManager.js ***!\n  \\************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_152768__) {\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Took reference from: \"loglevel\" - https://github.com/pimterry/loglevel\n *\n * Name: loglevel\n * Published Name: loglevel\n * URL: https://github.com/pimterry/loglevel\n * Description: Minimal lightweight logging for JavaScript, adding reliable log level methods to wrap any available console.log methods\n * Author: Tim Perry (https://github.com/pimterry)\n * LICENSE: MIT License\n * Local Modifications: This library is not used as a dependency. Source code was referenced and is modified as per requirements.\n *\n */\n// TODO: change path\nvar LogMessageEnum = {\n  DEBUG_MESSAGES: __nested_webpack_require_152768__(/*! vwo-sdk-log-messages/src/debug-messages.json */ \"./node_modules/vwo-sdk-log-messages/src/debug-messages.json\"),\n  INFO_MESSAGES: __nested_webpack_require_152768__(/*! vwo-sdk-log-messages/src/info-messages.json */ \"./node_modules/vwo-sdk-log-messages/src/info-messages.json\"),\n  WARNING_MESSAGES: __nested_webpack_require_152768__(/*! vwo-sdk-log-messages/src/warning-messages.json */ \"./node_modules/vwo-sdk-log-messages/src/warning-messages.json\"),\n  ERROR_MESSAGES: __nested_webpack_require_152768__(/*! vwo-sdk-log-messages/src/error-messages.json */ \"./node_modules/vwo-sdk-log-messages/src/error-messages.json\")\n};\n\nvar _require = __nested_webpack_require_152768__(/*! ../../enums/LogLevelEnum */ \"./lib/enums/LogLevelEnum.js\"),\n    LogLevelEnum = _require.LogLevelEnum,\n    LogNumberLevel = _require.LogNumberLevel;\n\nvar LogMessageUtil = __nested_webpack_require_152768__(/*! ../../utils/LogMessageUtil */ \"./lib/utils/LogMessageUtil.js\");\n\nvar ConsoleLogManager = __nested_webpack_require_152768__(/*! ./ConsoleLogManager */ \"./lib/services/logging/ConsoleLogManager.js\");\n\nvar globalLogLevel = LogLevelEnum.NOTSET;\nvar isColoredLogEnabled = false;\nvar globalLogHandler = new ConsoleLogManager();\n\nvar LogManager =\n/*#__PURE__*/\nfunction () {\n  function LogManager(name) {\n    _classCallCheck(this, LogManager);\n\n    this.name = name;\n    this.isColoredLogEnabled = isColoredLogEnabled;\n  }\n\n  _createClass(LogManager, [{\n    key: \"_customLog\",\n    value: function _customLog(level, message) {\n      if (level < globalLogLevel) {\n        return;\n      }\n\n      globalLogHandler.log(level, message);\n    }\n  }, {\n    key: \"log\",\n    value: function log(level, message) {\n      var disableLogs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (disableLogs) {\n        return;\n      }\n\n      try {\n        this._customLog(level, message);\n      } catch (err) {\n        console.error('VWO: Could not log.', err);\n      }\n    }\n  }, {\n    key: \"info\",\n    value: function info(message) {\n      this._customLog(LogLevelEnum.INFO, message);\n    }\n  }, {\n    key: \"debug\",\n    value: function debug(message) {\n      this._customLog(LogLevelEnum.DEBUG, message);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(message) {\n      this._customLog(LogLevelEnum.WARN, message);\n    }\n  }, {\n    key: \"error\",\n    value: function error(message) {\n      this._customLog(LogLevelEnum.ERROR, message);\n    }\n  }]);\n\n  return LogManager;\n}();\n\nfunction getLogger(name) {\n  return new LogManager(name);\n}\n\nfunction setLogHandler(logger) {\n  globalLogHandler = logger;\n}\n\nfunction setLogLevel(level) {\n  if (level === undefined) {\n    globalLogLevel = LogLevelEnum.ERROR;\n  } else {\n    globalLogLevel = level;\n  }\n}\n\nfunction getLogLevel() {\n  return globalLogLevel;\n}\n\nfunction setLogColorMode(value) {\n  isColoredLogEnabled = value;\n  globalLogHandler.isColoredLogEnabled = isColoredLogEnabled;\n}\n\nfunction getLogColorMode() {\n  return isColoredLogEnabled;\n}\n\nmodule.exports = {\n  LogLevelEnum: LogLevelEnum,\n  LogNumberLevel: LogNumberLevel,\n  LogMessageUtil: LogMessageUtil,\n  LogMessageEnum: LogMessageEnum,\n  getLogger: getLogger,\n  setLogHandler: setLogHandler,\n  setLogLevel: setLogLevel,\n  getLogLevel: getLogLevel,\n  LogManager: LogManager,\n  setLogColorMode: setLogColorMode,\n  getLogColorMode: getLogColorMode,\n  globalLogHandler: globalLogHandler\n};\n\n/***/ }),\n\n/***/ \"./lib/services/logging/index.js\":\n/*!***************************************!*\\\n  !*** ./lib/services/logging/index.js ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_158267__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar logging = __nested_webpack_require_158267__(/*! ./LoggingManager */ \"./lib/services/logging/LoggingManager.js\");\n\nmodule.exports = logging;\n\n/***/ }),\n\n/***/ \"./lib/utils/CampaignUtil.js\":\n/*!***********************************!*\\\n  !*** ./lib/utils/CampaignUtil.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_159271__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ValidateUtil = __nested_webpack_require_159271__(/*! ./ValidateUtil */ \"./lib/utils/ValidateUtil.js\");\n\nvar Constants = __nested_webpack_require_159271__(/*! ../constants */ \"./lib/constants/index.js\");\n\nvar logging = __nested_webpack_require_159271__(/*! ../services/logging */ \"./lib/services/logging/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_159271__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar GoalTypeEnum = __nested_webpack_require_159271__(/*! ../enums/GoalTypeEnum */ \"./lib/enums/GoalTypeEnum.js\");\n\nvar CampaignTypeEnum = __nested_webpack_require_159271__(/*! ../enums/CampaignTypeEnum */ \"./lib/enums/CampaignTypeEnum.js\");\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar logger = logging.getLogger();\nvar CampaignUtil = {\n  /**\n   * Returns the bucket size of variation.\n   *\n   * @param {Number/Float} - weight of variation\n   *\n   * @return {Number} bucket start range of Variation\n   */\n  _getVariationBucketRange: function _getVariationBucketRange(variationWeight) {\n    if (!variationWeight || variationWeight === 0) {\n      return 0;\n    }\n\n    var startRange = Math.ceil(variationWeight * 100);\n    return Math.min(startRange, Constants.MAX_TRAFFIC_VALUE);\n  },\n\n  /**\n   * Get the campaign on the basis of campaign id\n   *\n   * @param {Object} settingsFile\n   * @param {Number} campaignId\n   *\n   * @returns {Object} campaign object\n   */\n  getCampaignBasedOnId: function getCampaignBasedOnId(settingsFile, campaignId) {\n    var campaign;\n\n    for (var i = 0; i < settingsFile.campaigns.length; i++) {\n      if (parseInt(settingsFile.campaigns[i].id, 10) === parseInt(campaignId, 10)) {\n        campaign = settingsFile.campaigns[i];\n        break;\n      }\n    }\n\n    return campaign;\n  },\n\n  /**\n   * It extracts the weights from all the variations inside the campaign\n      and scales them so that the total sum of eligible variations' weights become 100%\n       1. variations\n   */\n  scaleVariationWeights: function scaleVariationWeights(variations) {\n    var totalWeight = variations.reduce(function (acc, variation) {\n      return acc + variation.weight;\n    }, 0);\n\n    if (!totalWeight) {\n      var weight = 100 / variations.length;\n      variations.forEach(function (variation) {\n        return variation.weight = weight;\n      });\n    } else {\n      variations.forEach(function (variation) {\n        return variation.weight = variation.weight / totalWeight * 100;\n      });\n    }\n  },\n  getCampaign: function getCampaign(settingsFile, campaignKey) {\n    var campaign;\n\n    for (var i = 0; i < settingsFile.campaigns.length; i++) {\n      if (settingsFile.campaigns[i].key === campaignKey) {\n        campaign = settingsFile.campaigns[i];\n        break;\n      }\n    }\n\n    return campaign;\n  },\n\n  /**\n   * Gets campaigns for corresponding campaignKeys\n   *\n   * @param {Object} settingsFile\n   * @param {Array} campaignKeys\n   *\n   * @return {Array} Campaigns\n   */\n  getCampaignsForKeys: function getCampaignsForKeys(settingsFile, campaignKeys) {\n    var campaigns = [];\n    campaignKeys.forEach(function (key) {\n      var campaign = CampaignUtil.getCampaign(settingsFile, key);\n\n      if (campaign) {\n        campaigns.push(campaign);\n      } else {\n        campaigns.push({\n          key: key\n        });\n      }\n    });\n    return campaigns;\n  },\n\n  /**\n   * Gets campaigns which have the goalIdentifier present\n   *\n   * @param {settingsFile}\n   * @param {String} goalIdentifier\n   * @param {String} goalTypeToTrack type of goal to track\n   *\n   * @return {Array} Campaigns\n   */\n  getCampaignsForGoal: function getCampaignsForGoal(settingsFile, goalIdentifier, goalTypeToTrack) {\n    var campaigns = [];\n    settingsFile.campaigns.forEach(function (campaign) {\n      var goal = CampaignUtil.getCampaignGoal(settingsFile, campaign.key, goalIdentifier);\n\n      if (goal && (goalTypeToTrack === GoalTypeEnum.ALL || goal.type === goalTypeToTrack)) {\n        campaigns.push(campaign);\n      }\n    });\n\n    if (!campaigns.length) {\n      logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CAMPAIGN_NOT_FOUND_FOR_GOAL, {\n        file: FileNameEnum.CampaignUtil,\n        goalIdentifier: goalIdentifier\n      }));\n    }\n\n    return campaigns;\n  },\n  getCampaignStatus: function getCampaignStatus(settingsFile, campaignKey) {\n    var campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n    if (!campaign || !campaign.status) {\n      // log error\n      return '';\n    }\n\n    return campaign.status.toLowerCase();\n  },\n  isCampaignRunning: function isCampaignRunning(settingsFile, campaignKey) {\n    return CampaignUtil.getCampaignStatus(settingsFile, campaignKey) === 'running';\n  },\n\n  /**\n   * Validates the campaign\n   *\n   * @param {Campaign} campaign the campaign to be validated\n   *\n   * @return {Boolean} true is campaign is valid\n   */\n  validateCampaign: function validateCampaign(campaign) {\n    return ValidateUtil.isValidValue(campaign) && campaign.variations && Object.keys(campaign.variations).length > 0;\n  },\n\n  /**\n   * Assigns the buckets to the Variations of the campaign\n   * depending on the traffic allocation\n   *\n   * @param {Campaign} campaign whose Variations are to be allocated\n   */\n  setVariationAllocation: function setVariationAllocation(campaign) {\n    var numberOfVariations = campaign.variations.length;\n    var stepFactor = 0;\n\n    for (var i = 0, currentAllocation = 0; i < numberOfVariations; i++) {\n      var variation = campaign.variations[i];\n      stepFactor = CampaignUtil.assignRangeValues(variation, currentAllocation);\n      currentAllocation += stepFactor;\n      logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.VARIATION_RANGE_ALLOCATION, {\n        file: FileNameEnum.CampaignUtil,\n        campaignKey: campaign.key,\n        variationName: variation.name,\n        variationWeight: variation.weight,\n        start: variation.startVariationAllocation,\n        end: variation.endVariationAllocation\n      }));\n    }\n  },\n\n  /**\n   * Assign range allocation to the campaigns in the list to decide which campaign to choose out of the Mutually Exclusive group\n   *\n   * @param {Array} campaigns\n   */\n  setCampaignAllocation: function setCampaignAllocation(campaigns) {\n    var stepFactor = 0;\n\n    for (var i = 0, currentAllocation = 0; i < campaigns.length; i++) {\n      var campaign = campaigns[i];\n      stepFactor = CampaignUtil.assignRangeValues(campaign, currentAllocation);\n      currentAllocation += stepFactor;\n    }\n  },\n  assignRangeValues: function assignRangeValues(variation, currentAllocation) {\n    var stepFactor;\n    stepFactor = CampaignUtil._getVariationBucketRange(variation.weight);\n\n    if (stepFactor) {\n      variation.startVariationAllocation = currentAllocation + 1;\n      variation.endVariationAllocation = currentAllocation + stepFactor;\n    } else {\n      variation.startVariationAllocation = -1;\n      variation.endVariationAllocation = -1;\n    }\n\n    return stepFactor;\n  },\n  getCampaignGoal: function getCampaignGoal(settingsFile, campaignKey, goalIdentifier) {\n    var desiredCampaignGoal = null;\n\n    if (!settingsFile || !campaignKey || !goalIdentifier) {\n      return desiredCampaignGoal;\n    }\n\n    var campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n    if (!campaign) {\n      return desiredCampaignGoal;\n    }\n\n    for (var i = 0; i < campaign.goals.length; i++) {\n      var goal = campaign.goals[i];\n\n      if (goal.identifier === goalIdentifier) {\n        desiredCampaignGoal = goal;\n        break;\n      }\n    }\n\n    return desiredCampaignGoal;\n  },\n  getCampaignVariation: function getCampaignVariation(settingsFile, campaignKey, variationName) {\n    var desiredVariation = null;\n\n    if (!settingsFile || !campaignKey || !variationName) {\n      return desiredVariation;\n    }\n\n    var campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n    if (!campaign) {\n      return desiredVariation;\n    }\n\n    for (var i = 0; i < campaign.variations.length; i++) {\n      var variation = campaign.variations[i];\n\n      if (variation.name === variationName) {\n        desiredVariation = variation;\n        break;\n      }\n    }\n\n    return desiredVariation;\n  },\n  getControlForCampaign: function getControlForCampaign(campaign) {\n    var control = {};\n\n    if (!campaign || !campaign.variations) {\n      return control;\n    }\n\n    for (var i = 0; i < campaign.variations.length; i++) {\n      if (campaign.variations[i].id === 1) {\n        control = campaign.variations[i];\n        break;\n      }\n    }\n\n    return control;\n  },\n  isFeatureTestCampaign: function isFeatureTestCampaign(campaign) {\n    if (campaign && campaign.type === CampaignTypeEnum.FEATURE_TEST) {\n      return true;\n    }\n\n    return false;\n  },\n  isFeatureRolloutCampaign: function isFeatureRolloutCampaign(campaign) {\n    if (campaign && campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT) {\n      return true;\n    }\n\n    return false;\n  },\n  isAbCampaign: function isAbCampaign(campaign) {\n    if (campaign && campaign.type === CampaignTypeEnum.AB) {\n      return true;\n    }\n\n    return false;\n  },\n\n  /**\n   * Check if the campaign is a part of mutually exclusive group\n   *\n   * @param {Object} settingsFile\n   * @param {Number} campaignId\n   *\n   * @returns {Number} group id of the campaign.\n   */\n  isPartOfGroup: function isPartOfGroup(settingsFile, campaignId) {\n    if (settingsFile.campaignGroups && Object.prototype.hasOwnProperty.call(settingsFile.campaignGroups, campaignId)) {\n      return {\n        groupId: settingsFile.campaignGroups[campaignId],\n        groupName: settingsFile.groups[settingsFile.campaignGroups[campaignId]].name\n      };\n    }\n\n    return {};\n  },\n\n  /**\n   * Get the list of campaigns on the basis of their id\n   *\n   * @param {Object} settingsFile\n   * @param {Number} groupId\n   *\n   * @returns {Array} list of campaigns\n   */\n  getGroupCampaigns: function getGroupCampaigns(settingsFile, groupId) {\n    var campaigns = [];\n\n    if (Object.prototype.hasOwnProperty.call(settingsFile.groups, groupId)) {\n      settingsFile.groups[groupId].campaigns.forEach(function (campaignId) {\n        var campaign = CampaignUtil.getCampaignBasedOnId(settingsFile, campaignId);\n\n        if (campaign) {\n          campaigns.push(campaign);\n        }\n      });\n    }\n\n    return campaigns;\n  },\n\n  /**\n   * Decide the Seed for murmurhash to bucket user.\n   * @param {string} userId\n   * @param {object} campaign\n   * @param {number} groupId\n   *\n   * @returns {string} Seed value\n   */\n  getBucketingSeed: function getBucketingSeed(userId, campaign, groupId) {\n    if (groupId) {\n      return \"\".concat(groupId, \"_\").concat(userId);\n    }\n\n    if (campaign && campaign.isBucketingSeedEnabled) {\n      return \"\".concat(campaign.id, \"_\").concat(userId);\n    } else {\n      return userId;\n    }\n  }\n};\nmodule.exports = CampaignUtil;\n\n/***/ }),\n\n/***/ \"./lib/utils/DataTypeUtil.js\":\n/*!***********************************!*\\\n  !*** ./lib/utils/DataTypeUtil.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar DataTypeUtil = {\n  _toStringValue: function _toStringValue(val) {\n    return Object.prototype.toString.call(val);\n  },\n  isNumber: function isNumber(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Number]';\n  },\n  isString: function isString(val) {\n    return DataTypeUtil._toStringValue(val) === '[object String]';\n  },\n  isObject: function isObject(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Object]';\n  },\n  isFunction: function isFunction(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Function]';\n  },\n  isBoolean: function isBoolean(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Boolean]';\n  },\n  isUndefined: function isUndefined(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Undefined]';\n  },\n  isNull: function isNull(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Null]';\n  },\n  isArray: function isArray(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Array]';\n  }\n};\nmodule.exports = DataTypeUtil;\n\n/***/ }),\n\n/***/ \"./lib/utils/DecisionUtil.js\":\n/*!***********************************!*\\\n  !*** ./lib/utils/DecisionUtil.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_172913__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VariationDecider = __nested_webpack_require_172913__(/*! ../core/VariationDecider */ \"./lib/core/VariationDecider.js\");\n\nvar BucketingService = __nested_webpack_require_172913__(/*! ../core/BucketingService */ \"./lib/core/BucketingService.js\");\n\nvar CampaignUtil = __nested_webpack_require_172913__(/*! ./CampaignUtil */ \"./lib/utils/CampaignUtil.js\");\n\nvar DataTypeUtil = __nested_webpack_require_172913__(/*! ./DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n\nvar FunctionUtil = __nested_webpack_require_172913__(/*! ./FunctionUtil */ \"./lib/utils/FunctionUtil.js\");\n\nvar logging = __nested_webpack_require_172913__(/*! ../services/logging */ \"./lib/services/logging/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_172913__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar StatusEnum = __nested_webpack_require_172913__(/*! ../enums/StatusEnum */ \"./lib/enums/StatusEnum.js\");\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar logger = logging.getLogger();\n\nvar SegmentEvaluator = __nested_webpack_require_172913__(/*! ../core/SegmentEvaluator */ \"./lib/core/SegmentEvaluator.js\");\n\nvar HooksManager = __nested_webpack_require_172913__(/*! ../services/HooksManager */ \"./lib/services/HooksManager.js\");\n\nvar HooksEnum = __nested_webpack_require_172913__(/*! ../enums/HooksEnum */ \"./lib/enums/HooksEnum.js\");\n\nvar UuidUtil = __nested_webpack_require_172913__(/*! ./UuidUtil */ \"./lib/utils/UuidUtil.js\");\n\nvar Constants = __nested_webpack_require_172913__(/*! ../constants */ \"./lib/constants/index.js\");\n\nvar CampaignTypeEnum = __nested_webpack_require_172913__(/*! ../enums/CampaignTypeEnum */ \"./lib/enums/CampaignTypeEnum.js\");\n\nvar ApiEnum = __nested_webpack_require_172913__(/*! ../enums/ApiEnum */ \"./lib/enums/ApiEnum.js\");\n\nvar file = FileNameEnum.DecisionUtil;\nvar SegmentationTypeEnum = {\n  WHITELISTING: 'whitelisting',\n  PRE_SEGMENTATION: 'pre-segmentation'\n};\nvar DecisionUtil = {\n  // PUBLIC METHODS\n\n  /**\n   *  1. Checks if there is a variation stored in userStorage, returns it\n   *  2. If Whitelisting is applicable, evaluate it, if any eligible variation is found, store it in User Storage service and return, otherwise skip it.\n   *  3. Check if the campaign is part of mutually exclusive group, if yes, get the winner campaign using campaign traffic normalization.\n   *  4. If Pre-segmentation is applied and passes then go further otherwise return early and no further processing\n   *  5. If no user storage value, no whitelisted variation and pre-segmentation evaluates to true, get variation using hashing logic if campaign traffic passes for that userId\n   *\n   *\n   *  @param {Object} config\n   *  @param {Object} settingsFile\n   *  @param {Object} campaign\n   *  @param {Object} campaignKey\n   *  @param {String} userId\n   *  @param {Object} customVariables\n   *  @param {Object} variationTargetingVariables\n   *\n   *  @return {Object|null} - Object if a variation is assigned, otherwise null\n   */\n  getVariation: function getVariation(config, settingsFile, campaign, campaignKey, userId, customVariables) {\n    var variationTargetingVariables = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};\n    var userStorageData = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : {};\n    var metaData = arguments.length > 8 ? arguments[8] : undefined;\n    var isTrackUserAPI = arguments.length > 9 ? arguments[9] : undefined;\n    var newGoalIdentifier = arguments.length > 10 ? arguments[10] : undefined;\n    var api = arguments.length > 11 && arguments[11] !== undefined ? arguments[11] : '';\n    var vwoUserId = UuidUtil.generateFor(userId, settingsFile.accountId);\n    logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.USER_UUID, {\n      file: FileNameEnum.UuidUtil,\n      userId: userId,\n      accountId: settingsFile.accountId,\n      uuid: vwoUserId\n    }));\n    var decision = {\n      // campaign info\n      campaignId: campaign.id,\n      campaignKey: campaignKey,\n      campaignType: campaign.type,\n      campaignName: campaign.name,\n      // campaign segmentation conditions\n      customVariables: customVariables,\n      // event name\n      event: HooksEnum.DECISION_TYPES.CAMPAIGN_DECISION,\n      // goal tracked in case of track API\n      goalIdentifier: newGoalIdentifier,\n      // campaign whitelisting flag\n      isForcedVariationEnabled: campaign.isForcedVariationEnabled,\n      sdkVersion: Constants.SDK_VERSION,\n      // API name which triggered the event\n      source: api,\n      // Passed in API\n      userId: userId,\n      // Campaign Whitelisting conditions\n      variationTargetingVariables: variationTargetingVariables,\n      // VWO generated UUID based on passed UserId and Account ID\n      vwoUserId: vwoUserId\n    }; // check if the campaign is a part of group\n\n    var _CampaignUtil$isPartO = CampaignUtil.isPartOfGroup(settingsFile, campaign.id),\n        groupId = _CampaignUtil$isPartO.groupId,\n        groupName = _CampaignUtil$isPartO.groupName;\n\n    if (groupId) {\n      // append groupId and groupName, if campaign is a part of group\n      decision['groupId'] = groupId;\n      decision['groupName'] = groupName;\n    }\n\n    variationTargetingVariables = Object.assign({}, variationTargetingVariables, {\n      _vwoUserId: campaign.isUserListEnabled ? vwoUserId : userId\n    }); // check if tbe campaign satisfies the whitelisting before checking for the group\n\n    var whitelistedVariation = DecisionUtil._checkForWhitelisting(campaign, campaignKey, userId, variationTargetingVariables, decision);\n\n    if (whitelistedVariation) {\n      return whitelistedVariation;\n    } // check if the campaign is present in the storage before checking for the group\n\n\n    var storedVariation = DecisionUtil._checkForUserStorage(config, settingsFile, campaign, campaignKey, userId, userStorageData, isTrackUserAPI, decision);\n\n    if (storedVariation) {\n      return storedVariation;\n    } // check if the called campaign satisfies the pre-segmentatin before further proccessing.\n\n\n    if (!(DecisionUtil._checkForPreSegmentation(campaign, campaignKey, userId, customVariables, decision) && BucketingService.isUserPartOfCampaign(userId, campaign, true))) {\n      return {};\n    }\n\n    if (groupId) {\n      // mutually exclusive group exists\n      // get the list of the all the campaigns in a group\n      var campaignList = CampaignUtil.getGroupCampaigns(settingsFile, groupId);\n\n      if (campaignList.length === 0) {\n        // return if no campaigns are active in a group\n        return {};\n      } // checking other campaigns for whitelisting and user storage.\n\n\n      var isWhitelistedOrStoredVariation = DecisionUtil._checkForStorageAndWhitelisting(config, settingsFile, groupName, campaignList, campaign, userId, userStorageData, variationTargetingVariables, isTrackUserAPI);\n\n      if (isWhitelistedOrStoredVariation) {\n        // other campaigns satisfy the whitelisting or storage, therfore returning\n        logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.MEG_CALLED_CAMPAIGN_NOT_WINNER, {\n          userId: userId,\n          groupName: groupName,\n          file: file,\n          campaignKey: campaignKey\n        }));\n        return {};\n      } // none of the group campaigns satisfy whitelisting or user storage\n      // check each campaign for pre-segmentation and traffic allocation.\n\n\n      var inEligibleCampaignKeys = '';\n      var eligibleCampaignKeys = '';\n\n      var _DecisionUtil$getElig = DecisionUtil.getEligbleCampaigns(campaignList, userId, customVariables),\n          eligibleCampaigns = _DecisionUtil$getElig.eligibleCampaigns,\n          inEligibleCampaigns = _DecisionUtil$getElig.inEligibleCampaigns;\n\n      inEligibleCampaigns.forEach(function (campaign) {\n        inEligibleCampaignKeys = inEligibleCampaignKeys + campaign.key + ',';\n      });\n      eligibleCampaigns.forEach(function (campaign) {\n        eligibleCampaignKeys = eligibleCampaignKeys + campaign.key + ',';\n      });\n      logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.MEG_ELIGIBLE_CAMPAIGNS, {\n        userId: userId,\n        groupName: groupName,\n        file: file,\n        eligibleCampaignKeys: eligibleCampaignKeys.slice(0, -1),\n        inEligibleText: inEligibleCampaignKeys === '' ? 'no campaigns' : \"campaigns: \".concat(inEligibleCampaignKeys.slice(0, -1))\n      }));\n      logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.MEG_ELIGIBLE_CAMPAIGNS, {\n        userId: userId,\n        groupName: groupName,\n        file: file,\n        noOfEligibleCampaigns: eligibleCampaigns.length,\n        noOfGroupCampaigns: inEligibleCampaigns.length + eligibleCampaigns.length\n      }));\n\n      if (eligibleCampaigns.length === 1) {\n        // if the called campaign is the only winner.\n        return DecisionUtil.evaluateTrafficAndGetVariation(config, eligibleCampaigns[0], eligibleCampaigns[0].key, userId, metaData, newGoalIdentifier, decision);\n      } else {\n        // normalize the eligible campaigns and decide winner\n        return DecisionUtil._normalizeAndFindWinningCampaign(config, campaign, eligibleCampaigns, userId, groupName, groupId, metaData, newGoalIdentifier, decision);\n      }\n    } else {\n      // campaign is not a part of mutually exclusive group\n      // check if the user is eligible to become part of the campaign and assign variation.\n      return DecisionUtil.evaluateTrafficAndGetVariation(config, campaign, campaignKey, userId, metaData, newGoalIdentifier, decision);\n    }\n  },\n  // PRIVATE METHODS\n  _evaluateWhitelisting: function _evaluateWhitelisting(campaign, campaignKey, userId, variationTargetingVariables) {\n    var disableLogs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    var whitelistedVariation;\n    var status;\n    var targetedVariations = [];\n    campaign.variations.forEach(function (variation) {\n      if (DataTypeUtil.isObject(variation.segments) && !Object.keys(variation.segments).length) {\n        logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SEGMENTATION_SKIPPED, {\n          campaignKey: campaignKey,\n          userId: userId,\n          file: file,\n          variation: campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT ? '' : \", for \".concat(variation.name)\n        }), disableLogs);\n        return;\n      }\n\n      if (DataTypeUtil.isObject(variation.segments) && SegmentEvaluator(variation.segments, variationTargetingVariables, campaignKey, userId, variation.name)) {\n        status = StatusEnum.PASSED;\n        targetedVariations.push(FunctionUtil.cloneObject(variation));\n      } else {\n        status = StatusEnum.FAILED;\n      }\n\n      logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SEGMENTATION_STATUS, {\n        campaignKey: campaignKey,\n        userId: userId,\n        customVariables: JSON.stringify(variationTargetingVariables),\n        file: file,\n        status: status,\n        segmentationType: SegmentationTypeEnum.WHITELISTING,\n        variation: campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT && status === StatusEnum.PASSED ? 'and becomes part of the rollout' : \"for \".concat(variation.name)\n      }), disableLogs);\n    });\n\n    if (targetedVariations.length > 1) {\n      CampaignUtil.scaleVariationWeights(targetedVariations);\n\n      for (var i = 0, currentAllocation = 0, stepFactor = 0; i < targetedVariations.length; i++) {\n        stepFactor = CampaignUtil.assignRangeValues(targetedVariations[i], currentAllocation);\n        currentAllocation += stepFactor;\n      }\n\n      whitelistedVariation = BucketingService._getVariation(targetedVariations, BucketingService.calculateBucketValue(CampaignUtil.getBucketingSeed(userId, campaign)));\n    } else {\n      whitelistedVariation = targetedVariations[0];\n    }\n\n    if (whitelistedVariation) {\n      return {\n        variation: whitelistedVariation,\n        variationName: whitelistedVariation.name,\n        variationId: whitelistedVariation.id\n      };\n    }\n  },\n\n  /**\n   * If userStorageService is provided and variation was stored, get the stored variation\n   *\n   * @param {Object} config\n   * @param {Object} settingsFile - cloned settingsFile\n   * @param {String} campaignKey\n   * @param {String} userId\n   *\n   * @return {Object|null} - if found then variation and goalIdentifier settings object otherwise null\n   */\n  _getStoredVariationAndGoalIdentifiers: function _getStoredVariationAndGoalIdentifiers(config, settingsFile, campaignKey, userId, userStorageData) {\n    var disableLogs = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n    var userData = DecisionUtil._getStoredUserData(config, userId, campaignKey, userStorageData, disableLogs);\n\n    var variationName = userData.variationName,\n        goalIdentifier = userData.goalIdentifier;\n\n    if (userData && userData.campaignKey && variationName) {\n      return {\n        storedVariation: CampaignUtil.getCampaignVariation(settingsFile, campaignKey, variationName),\n        goalIdentifier: goalIdentifier\n      };\n    } // Log if stored variation is not found even after implementing UserStorageService\n\n\n    logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.USER_STORAGE_SERVICE_NO_STORED_DATA, {\n      file: file,\n      campaignKey: campaignKey,\n      userId: userId\n    }), disableLogs);\n    return null;\n  },\n\n  /**\n   * If userStorageService is provided and variation was stored, get the stored variation\n   *\n   * @param {Object} config\n   * @param {Object} settingsFile - cloned settingsFile\n   * @param {String} campaignKey\n   * @param {String} userId\n   *\n   * @return {Object|null} - if found then variation settings object otherwise null\n   */\n  _getStoredVariation: function _getStoredVariation(config, settingsFile, campaignKey, userId, userStorageData) {\n    var data = DecisionUtil._getStoredVariationAndGoalIdentifiers(config, settingsFile, campaignKey, userId, userStorageData);\n\n    if (data && data.storedVariation) {\n      return data.storedVariation;\n    }\n\n    return null;\n  },\n\n  /**\n   * Get the User Variation mapping by calling get method of UserStorageService being provided\n   *\n   * @param {Object} config\n   * @param {String} UserID\n   * @param {String} campaignKey\n   *\n   * @return {Object} - User Campaign Mapping\n   */\n  _getStoredUserData: function _getStoredUserData(config, userId, campaignKey, userStorageData, disableLogs) {\n    var userStorageMap = {\n      userId: userId,\n      variationName: null,\n      campaignKey: campaignKey,\n      goalIdentifier: null\n    };\n\n    if (!config.userStorageService) {\n      logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.USER_STORAGE_SERVICE_NOT_CONFIGURED, {\n        file: file\n      }), disableLogs);\n      return userStorageMap;\n    }\n\n    try {\n      var data = config.userStorageService.get(userId, campaignKey) || {}; // if data found\n\n      logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.GETTING_DATA_USER_STORAGE_SERVICE, {\n        file: file,\n        userId: userId,\n        campaignKey: campaignKey\n      }), disableLogs);\n      return Object.assign({}, data, userStorageData);\n    } catch (err) {\n      // if no data found\n      logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.USER_STORAGE_SERVICE_GET_FAILED, {\n        file: file,\n        userId: userId,\n        error: err\n      }), disableLogs);\n    }\n  },\n\n  /**\n   * If UserStorageService is provided and variation was stored, save the assigned variation\n   *\n   * @param {Object} campaign\n   * @param {String} variationName\n   * @param {String} userId\n   *\n   * @return {Boolean} - true if found otherwise false\n   */\n  _saveUserData: function _saveUserData(config, campaign, variationName, userId, metaData, goalIdentifier) {\n    var isSaved = false;\n\n    if (!config.userStorageService) {\n      logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.USER_STORAGE_SERVICE_NOT_CONFIGURED, {\n        file: file\n      }));\n      return isSaved;\n    }\n\n    try {\n      var properties = {\n        userId: userId,\n        variationName: variationName,\n        campaignKey: campaign.key\n      };\n\n      if (!DataTypeUtil.isUndefined(goalIdentifier)) {\n        properties.goalIdentifier = goalIdentifier;\n      }\n\n      if (!DataTypeUtil.isUndefined(metaData)) {\n        properties.metaData = metaData;\n      }\n\n      config.userStorageService.set(properties);\n      logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SETTING_DATA_USER_STORAGE_SERVICE, {\n        file: file,\n        userId: userId,\n        campaignKey: campaign.key\n      }));\n      isSaved = true;\n    } catch (err) {\n      logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.USER_STORAGE_SERVICE_SET_FAILED, {\n        file: file,\n        userId: userId,\n        error: err\n      }));\n      isSaved = false;\n    }\n\n    return isSaved;\n  },\n\n  /**\n   * Evaluate the campaign for whitelisting and store\n   * This method would be run only for MEG campaigns\n   *\n   * @param {Object} config\n   * @param {Object} settingsFile\n   * @param {Array} campaignList\n   * @param {Object} calledCampaign\n   * @param {String} userId\n   * @param {Object} userStorageData\n   * @param {Object} variationTargetingVariables\n   * @param {Boolean} isTrackUserAPI\n   *\n   * @returns {Boolean} - true, if whitelisting/storage is satisfied for any campaign\n   */\n  _checkForStorageAndWhitelisting: function _checkForStorageAndWhitelisting(config, settingsFile, groupName, campaignList, calledCampaign, userId, userStorageData, variationTargetingVariables, isTrackUserAPI) {\n    var otherCampaignWinner = false;\n    campaignList.some(function (groupCampaign) {\n      if (groupCampaign.id === calledCampaign.id) {\n        return;\n      } // create a local copy of the campaigns\n      // groupCampaign = FunctionUtil.cloneObject(groupCampaign);\n      // checking other campaigns for whitelisting or user storage.\n\n\n      var whitelistedVariation = DecisionUtil._checkForWhitelisting(groupCampaign, groupCampaign.key, userId, variationTargetingVariables);\n\n      if (whitelistedVariation) {\n        // other campaign satisfy the whitelisting\n        otherCampaignWinner = true;\n        logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.OTHER_CAMPAIGN_SATISFIES_WHITELISTING_STORAGE, {\n          file: file,\n          campaignKey: groupCampaign.key,\n          groupName: groupName,\n          userId: userId,\n          type: 'whitelisting'\n        }));\n        return true;\n      }\n\n      var storedVariation = DecisionUtil._checkForUserStorage(config, settingsFile, groupCampaign, groupCampaign.key, userId, userStorageData, isTrackUserAPI);\n\n      if (storedVariation && DataTypeUtil.isObject(storedVariation) && Object.keys(storedVariation).length > 0) {\n        // other campaign sastisfy the user storage\n        otherCampaignWinner = true;\n        logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.OTHER_CAMPAIGN_SATISFIES_WHITELISTING_STORAGE, {\n          file: file,\n          campaignKey: groupCampaign.key,\n          groupName: groupName,\n          userId: userId,\n          type: 'user storage'\n        }));\n        return true;\n      }\n    });\n    return otherCampaignWinner;\n  },\n\n  /**\n   * Evaluate a campaign for pre-segmentation.\n   *\n   * @param {Object} campaign\n   * @param {String} campaignKey\n   * @param {String} userId\n   * @param {Object} customVariables\n   * @param {Object} decision\n   *\n   * @returns {Boolean} true, if the pre-segmentation is satisfied.\n   */\n  _checkForPreSegmentation: function _checkForPreSegmentation(campaign, campaignKey, userId, customVariables, decision) {\n    var status;\n\n    if (DataTypeUtil.isObject(campaign.segments) && !Object.keys(campaign.segments).length) {\n      logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SEGMENTATION_SKIPPED, {\n        campaignKey: campaignKey,\n        userId: userId,\n        file: file\n      }), !decision);\n      return true;\n    } else {\n      var preSegmentationResult = SegmentEvaluator(campaign.segments, customVariables, campaignKey, userId, !decision);\n\n      if (!preSegmentationResult) {\n        status = StatusEnum.FAILED;\n      } else {\n        status = StatusEnum.PASSED;\n      }\n\n      logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SEGMENTATION_STATUS, {\n        campaignKey: campaignKey,\n        userId: userId,\n        customVariables: JSON.stringify(customVariables || {}),\n        file: file,\n        status: status,\n        segmentationType: SegmentationTypeEnum.PRE_SEGMENTATION,\n        variation: ''\n      }), !decision);\n\n      if (status === StatusEnum.FAILED) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n\n  /**\n   * Check if user is eligible for the camapign based on traffic percentage and assign variation.\n   * @param {Object} config\n   * @param {Object} campaign\n   * @param {String} campaignKey\n   * @param {String} userId\n   * @param {Object} metaData\n   * @param {String} newGoalIdentifier\n   * @param {Object} decision\n   * @returns {Object} variation assigned to the user\n   */\n  evaluateTrafficAndGetVariation: function evaluateTrafficAndGetVariation(config, campaign, campaignKey, userId, metaData, newGoalIdentifier, decision) {\n    var variation, variationName, variationId; // Use our core's VariationDecider utility to get the deterministic variation assigned to the userId for that campaign\n\n    var _VariationDecider$get = VariationDecider.getVariationAllotted(userId, campaign);\n\n    variation = _VariationDecider$get.variation;\n    variationName = _VariationDecider$get.variationName;\n    variationId = _VariationDecider$get.variationId;\n    logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_VARIATION_ALLOCATION_STATUS, {\n      file: file,\n      campaignKey: campaignKey,\n      userId: userId,\n      status: variationName ? \"got variation:\".concat(variationName) : 'did not get any variation'\n    })); // Check if variation-name has been assigned to the userId. If not, return no variation\n\n    if (variationName) {\n      // If userStorageService is provided, look into it for the saved variation for the campaign and userId\n      DecisionUtil._saveUserData(config, campaign, variationName, userId, metaData, newGoalIdentifier);\n    } // Executing the callback when SDK makes the decision\n\n\n    HooksManager.execute(Object.assign({\n      fromUserStorageService: false,\n      isUserWhitelisted: false\n    }, campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT ? {\n      isFeatureEnabled: !!variationName\n    } : {\n      variationName: variationName,\n      variationId: variationId\n    }, decision));\n    return {\n      variation: variation && variation.variation,\n      variationName: variationName,\n      variationId: variationId\n    };\n  },\n\n  /**\n   * Evaluate a campaign for whitelisting\n   *\n   * @param {Object} campaign\n   * @param {String} campaignKey\n   * @param {String} userId\n   * @param {Object} variationTargetingVariables\n   * @param {Object} decision\n   *\n   * @returns {Object} whitelisted variation\n   */\n  _checkForWhitelisting: function _checkForWhitelisting(campaign, campaignKey, userId, variationTargetingVariables, decision) {\n    var status;\n    var variationName, variationId;\n\n    if (campaign.isForcedVariationEnabled) {\n      var whitelistingResult = DecisionUtil._evaluateWhitelisting(campaign, campaignKey, userId, variationTargetingVariables, !decision);\n\n      var variationString;\n\n      if (whitelistingResult) {\n        status = StatusEnum.PASSED;\n        variationString = whitelistingResult.variationName;\n      } else {\n        status = StatusEnum.FAILED;\n        variationString = '';\n      }\n\n      logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SEGMENTATION_STATUS, {\n        campaignKey: campaignKey,\n        userId: userId,\n        customVariables: JSON.stringify(variationTargetingVariables),\n        file: file,\n        status: status,\n        segmentationType: SegmentationTypeEnum.WHITELISTING,\n        variation: campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT ? '' : \"for variation: \".concat(variationString)\n      }), !decision);\n\n      if (whitelistingResult) {\n        variationName = whitelistingResult.variationName;\n        variationId = whitelistingResult.variationId; // Executing the callback when SDK has made a decision in case of whitelisting\n\n        if (decision) {\n          HooksManager.execute(Object.assign({\n            fromUserStorageService: false,\n            isUserWhitelisted: !!variationName\n          }, campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT ? {\n            isFeatureEnabled: !!variationName\n          } : {\n            variationName: variationName,\n            variationId: variationId\n          }, decision));\n        }\n\n        return whitelistingResult;\n      }\n    } else {\n      logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.WHITELISTING_SKIPPED, {\n        campaignKey: campaignKey,\n        userId: userId,\n        file: file\n      }), !decision);\n    }\n  },\n\n  /**\n   * Check if the variation is present in the user storage\n   *\n   * @param {Object} config\n   * @param {Object} settingsFile\n   * @param {Object} campaign\n   * @param {String} campaignKey\n   * @param {String} userId\n   * @param {Object} userStorageData\n   * @param {Boolean} isTrackUserAPI\n   * @param {Object} decision\n   *\n   * @returns {Object} stored variaition\n   */\n  _checkForUserStorage: function _checkForUserStorage(config, settingsFile, campaign, campaignKey, userId, userStorageData, isTrackUserAPI, decision) {\n    var variationName, variationId;\n    var storedVariation, goalIdentifier; // If userStorageService is used, get the variation from the stored data\n\n    var _ref = DecisionUtil._getStoredVariationAndGoalIdentifiers(config, settingsFile, campaign.key, userId, userStorageData, !decision) || {};\n\n    storedVariation = _ref.storedVariation;\n    goalIdentifier = _ref.goalIdentifier;\n\n    // If stored variation is found, simply return the same\n    if (storedVariation) {\n      variationName = storedVariation.name;\n      variationId = storedVariation.id;\n      logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.GOT_STORED_VARIATION, {\n        file: file,\n        campaignKey: campaignKey,\n        userId: userId,\n        variationName: storedVariation.name\n      }), !decision); // Executing the callback when SDK gets the decision from user storage service\n\n      if (decision) {\n        HooksManager.execute(Object.assign({\n          fromUserStorageService: !!variationName,\n          isUserWhitelisted: false\n        }, campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT ? {\n          isFeatureEnabled: !!variationName\n        } : {\n          variationName: variationName,\n          variationId: variationId\n        }, decision));\n      }\n\n      return {\n        variation: storedVariation,\n        variationName: storedVariation.name,\n        variationId: storedVariation.id,\n        storedGoalIdentifier: goalIdentifier,\n        isStoredVariation: true\n      };\n    } else if (!DataTypeUtil.isUndefined(config.userStorageService) && !isTrackUserAPI && DataTypeUtil.isUndefined(storedVariation)) {\n      logger.log(LogLevelEnum.WARN, LogMessageUtil.build(LogMessageEnum.WARNING_MESSAGES.CAMPAIGN_NOT_ACTIVATED, {\n        file: file,\n        campaignKey: campaignKey,\n        userId: userId,\n        api: config.apiName\n      }), !decision);\n      logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CAMPAIGN_NOT_ACTIVATED, {\n        file: file,\n        campaignKey: campaignKey,\n        userId: userId,\n        reason: config.apiName === ApiEnum.TRACK ? 'track it' : 'get the decision/value'\n      }), !decision);\n      return {};\n    }\n  },\n\n  /**\n   * Evaluate the list of campaigns for pre-segmentation and campaign traffic allocation and assign variation to the user.\n   * This method will be used for MEG campaigns\n   *\n   * @param {Object} config\n   * @param {Array} campaignList\n   * @param {String} userId\n   * @param {Object} customVariables\n   * @param {Object} metaData\n   * @param {String} newGoalIdentifier\n   *\n   * @returns {Array} list of campaigns which satisfies the conditions.\n   */\n  getEligbleCampaigns: function getEligbleCampaigns(campaignList, userId, customVariables) {\n    var eligibleCampaigns = [];\n    var inEligibleCampaigns = [];\n    campaignList.forEach(function (groupCampaign) {\n      var isPartOfCampaign = DecisionUtil._checkForPreSegmentation(groupCampaign, groupCampaign.key, userId, customVariables) && BucketingService.isUserPartOfCampaign(userId, groupCampaign, true);\n\n      if (isPartOfCampaign) {\n        groupCampaign = FunctionUtil.cloneObject(groupCampaign); // campaign satisfies the pre-segmentation\n\n        eligibleCampaigns.push(groupCampaign);\n      } else {\n        inEligibleCampaigns.push(groupCampaign);\n      }\n    });\n    return {\n      eligibleCampaigns: eligibleCampaigns,\n      inEligibleCampaigns: inEligibleCampaigns\n    };\n  },\n\n  /**\n   * Equally distribute the traffic of campaigns and assign a winner campaign by murmur hash.\n   *\n   * @param {Object} config\n   * @param {Object} calledCampaign\n   * @param {Array} shortlistedCampaigns\n   * @param {String} userId\n   * @param {Object} metaData\n   * @param {String} newGoalIdentifier\n   * @param {Object} decision\n   *\n   * @returns {Object} variation of the winner campaign\n   */\n  _normalizeAndFindWinningCampaign: function _normalizeAndFindWinningCampaign(config, calledCampaign, shortlistedCampaigns, userId, groupName, groupId, metaData, newGoalIdentifier, decision) {\n    // normalise the weights of all the shortlisted campaigns\n    shortlistedCampaigns.forEach(function (campaign) {\n      campaign.weight = Math.floor(100 / shortlistedCampaigns.length);\n    }); // re-distribute the traffic for each camapign\n\n    CampaignUtil.setCampaignAllocation(shortlistedCampaigns);\n\n    var winnerCampaign = BucketingService._getVariation(shortlistedCampaigns, BucketingService.calculateBucketValue(CampaignUtil.getBucketingSeed(userId, undefined, groupId)));\n\n    logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.MEG_GOT_WINNER_CAMPAIGN, {\n      userId: userId,\n      groupName: groupName,\n      file: file,\n      campaignKey: winnerCampaign.key\n    }));\n\n    if (winnerCampaign.id === calledCampaign.id) {\n      // if called campaign is the winner campaign, get the variation for the campaign\n      return DecisionUtil.evaluateTrafficAndGetVariation(config, winnerCampaign, winnerCampaign.key, userId, metaData, newGoalIdentifier, decision);\n    } else {\n      // if winning campaign not the called camapaign, return\n      logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.MEG_CALLED_CAMPAIGN_NOT_WINNER, {\n        userId: userId,\n        groupName: groupName,\n        file: file,\n        campaignKey: calledCampaign.key\n      }));\n      return {};\n    }\n  }\n};\nmodule.exports = DecisionUtil;\n\n/***/ }),\n\n/***/ \"./lib/utils/EventDispatcherUtil.js\":\n/*!******************************************!*\\\n  !*** ./lib/utils/EventDispatcherUtil.js ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_204977__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar logging = __nested_webpack_require_204977__(/*! ../services/logging */ \"./lib/services/logging/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_204977__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar logger = logging.getLogger();\n\nvar FunctionUtil = __nested_webpack_require_204977__(/*! ./FunctionUtil */ \"./lib/utils/FunctionUtil.js\");\n\nvar EventEnum = __nested_webpack_require_204977__(/*! ../enums/EventEnum */ \"./lib/enums/EventEnum.js\");\n\nvar excludedProperties = ['url'];\nvar file = FileNameEnum.EventDispatcherUtil;\nvar EventDispatcher = {\n  dispatchGetCall: function dispatchGetCall(properties, _ref) {\n    var _this = this;\n\n    var responseCallback = _ref.responseCallback;\n    var parsedUrl;\n    var queryParams = '?';\n    queryParams += FunctionUtil.convertObjectKeysToString(properties, excludedProperties);\n\n    try {\n      // Require files only if required in respective Engine i.e. Node / Browser\n      if (true) {\n        parsedUrl = new URL(properties.url);\n\n        __nested_webpack_require_204977__(/*! ./HttpImageUtil */ \"./lib/utils/HttpImageUtil.js\").sendCall(parsedUrl, queryParams, {\n          successCallback: responseCallback\n        });\n      } else { var url; }\n    } catch (err) {\n      var endPoint = properties.url;\n      logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.IMPRESSION_FAILED, {\n        file: FileNameEnum.EventDispatcher,\n        endPoint: endPoint,\n        err: err\n      }));\n    }\n\n    return false;\n  },\n  handleGetResponse: function handleGetResponse(properties, error, response) {\n    if (error) {\n      logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.IMPRESSION_FAILED, {\n        file: file,\n        endPoint: response.endPoint,\n        err: error\n      }));\n      return false;\n    } else {\n      var baseParams = {\n        file: file,\n        endPoint: response.endPoint,\n        accountId: properties && properties.account_id\n      };\n      var params = {};\n\n      if (baseParams.endPoint.includes('push')) {\n        var customVariables = JSON.parse(properties.tags).u;\n        params = Object.assign({}, baseParams, {\n          customVariables: customVariables\n        });\n        params.mainKeys = \"customDimension:\".concat(JSON.stringify(params.customVariables));\n      } else {\n        params = Object.assign({}, baseParams, {\n          campaignId: properties && properties.experiment_id,\n          variationId: properties && properties.combination\n        });\n        params.mainKeys = \"campaignId:\".concat(params.campaignId, \" and variationId:\").concat(params.variationId);\n      }\n\n      logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.IMPRESSION_SUCCESS, params));\n      return true;\n    }\n  },\n  dispatchPostCall: function dispatchPostCall(properties, payload, _ref2) {\n    var _this2 = this;\n\n    var responseCallback = _ref2.responseCallback;\n    var parsedUrl;\n    var queryParams = '?';\n    queryParams += FunctionUtil.convertObjectKeysToString(properties, excludedProperties);\n\n    try {\n      // Require files only if required in respective Engine i.e. Node / Browser\n      if (true) {\n        __nested_webpack_require_204977__(/*! ./XhrUtil */ \"./lib/utils/XhrUtil.js\").send({\n          method: 'POST',\n          url: \"\".concat(properties.url).concat(queryParams),\n          payload: payload\n        }).then(function () {\n          _this2.handlePostResponse(properties, payload);\n\n          if (responseCallback) {\n            responseCallback(null, {\n              status: 'success'\n            });\n          }\n        })[\"catch\"](function (error) {\n          _this2.handlePostResponse(properties, payload, error);\n\n          responseCallback(error, {\n            status: 'failure'\n          });\n        });\n      } else { var url; }\n    } catch (err) {\n      var endPoint = properties.url;\n      logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.IMPRESSION_FAILED, {\n        file: FileNameEnum.EventDispatcherUtil,\n        endPoint: endPoint,\n        err: err\n      }));\n    }\n\n    return false;\n  },\n  handlePostResponse: function handlePostResponse(properties, payload, error) {\n    var endPoint = properties.url;\n\n    if (error) {\n      logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.IMPRESSION_FAILED, {\n        file: file,\n        endPoint: endPoint,\n        err: error\n      }));\n      return false;\n    } else {\n      var event = \"\".concat(properties.en, \" event\");\n\n      if (properties.en === EventEnum.VWO_SYNC_VISITOR_PROP) {\n        delete payload.d.visitor.props.vwo_fs_environment;\n        event = \"visitor property:\".concat(JSON.stringify(payload.d.visitor.props));\n      }\n\n      logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.IMPRESSION_SUCCESS_FOR_EVENT_ARCH, {\n        file: file,\n        endPoint: endPoint,\n        accountId: properties.a,\n        event: event\n      }));\n      return true;\n    }\n  }\n};\nmodule.exports = EventDispatcher;\n\n/***/ }),\n\n/***/ \"./lib/utils/FeatureUtil.js\":\n/*!**********************************!*\\\n  !*** ./lib/utils/FeatureUtil.js ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_210958__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar CampaignUtil = __nested_webpack_require_210958__(/*! ./CampaignUtil */ \"./lib/utils/CampaignUtil.js\");\n\nvar DataTypeUtil = __nested_webpack_require_210958__(/*! ./DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n\nvar FeatureVariableTypeEnum = __nested_webpack_require_210958__(/*! ../enums/FeatureVariableTypeEnum */ \"./lib/enums/FeatureVariableTypeEnum.js\");\n\nvar logging = __nested_webpack_require_210958__(/*! ../services/logging */ \"./lib/services/logging/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_210958__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar logger = logging.getLogger();\nvar file = FileNameEnum.FeatureUtil;\nvar FeatureUtil = {\n  getVariableForFeature: function getVariableForFeature(campaign, variableKey) {\n    var variableData = {};\n\n    if (CampaignUtil.isFeatureRolloutCampaign(campaign)) {\n      var variables = campaign.variables || [];\n\n      for (var i = 0; i < variables.length; i++) {\n        if (variables[i].key === variableKey) {\n          variableData = variables[i];\n          break;\n        }\n      }\n\n      return variableData;\n    }\n\n    return variableData;\n  },\n  getVariableValueForVariation: function getVariableValueForVariation(campaign, variation, variableKey) {\n    var variationVariable = {};\n\n    if (CampaignUtil.isFeatureTestCampaign(campaign)) {\n      if (!variation || !variation || !variation.variables) {\n        return variationVariable;\n      }\n\n      if (!variation.isFeatureEnabled) {\n        variation = CampaignUtil.getControlForCampaign(campaign);\n      }\n\n      for (var i = 0; i < variation.variables.length; i++) {\n        var variable = variation.variables[i];\n\n        if (variableKey === variable.key) {\n          variationVariable = variable;\n          break;\n        }\n      }\n    }\n\n    return variationVariable;\n  },\n  getTypeCastVariableValue: function getTypeCastVariableValue(variableValue, variableType) {\n    var typeCastedValue;\n\n    switch (variableType) {\n      case FeatureVariableTypeEnum.INTEGER:\n        typeCastedValue = parseInt(variableValue, 10);\n\n        if (!DataTypeUtil.isNumber(typeCastedValue) || isNaN(typeCastedValue)) {\n          logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, {\n            file: file,\n            variableValue: variableValue,\n            variableType: variableType\n          }));\n          typeCastedValue = null;\n        }\n\n        break;\n\n      case FeatureVariableTypeEnum.DOUBLE:\n        typeCastedValue = parseFloat(variableValue);\n\n        if (!DataTypeUtil.isNumber(typeCastedValue) || isNaN(typeCastedValue)) {\n          logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, {\n            file: file,\n            variableValue: variableValue,\n            variableType: variableType\n          }));\n          typeCastedValue = null;\n        }\n\n        break;\n\n      case FeatureVariableTypeEnum.BOOLEAN:\n        if (!DataTypeUtil.isBoolean(variableValue)) {\n          logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, {\n            file: file,\n            variableValue: variableValue,\n            variableType: variableType\n          }));\n          typeCastedValue = null;\n        } else {\n          typeCastedValue = variableValue;\n        }\n\n        break;\n\n      case FeatureVariableTypeEnum.JSON:\n        if (!DataTypeUtil.isObject(variableValue)) {\n          logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, {\n            file: file,\n            variableValue: variableValue,\n            variableType: variableType\n          }));\n          typeCastedValue = null;\n        } else {\n          typeCastedValue = variableValue;\n        }\n\n        break;\n\n      default:\n        typeCastedValue = variableValue;\n        break;\n    }\n\n    return typeCastedValue;\n  }\n};\nmodule.exports = FeatureUtil;\n\n/***/ }),\n\n/***/ \"./lib/utils/FunctionUtil.js\":\n/*!***********************************!*\\\n  !*** ./lib/utils/FunctionUtil.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_215865__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar FunctionUtil = {\n  cloneObject: function cloneObject(obj) {\n    if (!obj) {\n      return obj;\n    }\n\n    var clonedObj = JSON.parse(JSON.stringify(obj));\n    return clonedObj;\n  },\n  getRandomNumber: function getRandomNumber() {\n    return Math.random();\n  },\n  getCurrentUnixTimestamp: function getCurrentUnixTimestamp() {\n    return Math.ceil(+new Date() / 1000);\n  },\n  getCurrentUnixTimestampInMillis: function getCurrentUnixTimestampInMillis() {\n    return +new Date();\n  },\n  matchWithRegex: function matchWithRegex(string, regex) {\n    try {\n      return string.match(new RegExp(regex));\n    } catch (err) {\n      var logging = __nested_webpack_require_215865__(/*! ../services/logging */ \"./lib/services/logging/index.js\");\n\n      var FileNameEnum = __nested_webpack_require_215865__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\n      var logger = logging.getLogger();\n      var LogLevelEnum = logging.LogLevelEnum,\n          LogMessageEnum = logging.LogMessageEnum,\n          LogMessageUtil = logging.LogMessageUtil;\n      var file = FileNameEnum.FunctionUtil;\n      logger.log(LogLevelEnum.ERROR, LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SEGMENTATION_REGEX_CREATION_FAILED, {\n        file: file,\n        regex: regex\n      }));\n      return null;\n    }\n  },\n  getCurrentTime: function getCurrentTime() {\n    return new Date().toISOString();\n  },\n  convertObjectKeysToString: function convertObjectKeysToString(properties, excludedProperties) {\n    var queryParams = '';\n    excludedProperties = excludedProperties || [];\n\n    for (var prop in properties) {\n      if (properties.hasOwnProperty(prop)) {\n        if (excludedProperties.indexOf(prop) === -1) {\n          queryParams += prop + '=' + properties[prop] + '&';\n        }\n      }\n    }\n\n    return queryParams;\n  },\n  objectValues: function objectValues(obj) {\n    var values = [];\n\n    for (var prop in obj) {\n      values.push(obj[prop]);\n    }\n\n    return values;\n  }\n};\nmodule.exports = FunctionUtil;\n\n/***/ }),\n\n/***/ \"./lib/utils/HttpImageUtil.js\":\n/*!************************************!*\\\n  !*** ./lib/utils/HttpImageUtil.js ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_218718__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar logging = __nested_webpack_require_218718__(/*! ../services/logging */ \"./lib/services/logging/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_218718__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar logger = logging.getLogger();\nvar file = FileNameEnum.HttpImageUtil;\n\nvar noop = function noop() {};\n\nvar printLog = function printLog(url, queryParams) {\n  var properties = new URLSearchParams(queryParams);\n  var baseParams = {\n    file: file,\n    endPoint: \"https://\".concat(url.host).concat(url.pathname),\n    accountId: properties && properties.get('account_id')\n  };\n  var params = {};\n\n  if (baseParams.endPoint.includes('push')) {\n    var customVariables = JSON.parse(properties.get('tags')).u;\n    params = Object.assign({}, baseParams, {\n      customVariables: customVariables\n    });\n    params.mainKeys = \"customDimension:\".concat(JSON.stringify(params.customVariables));\n  } else {\n    params = Object.assign({}, baseParams, {\n      campaignId: properties && properties.get('experiment_id'),\n      variationId: properties && properties.get('combination')\n    });\n    params.mainKeys = \"campaignId:\".concat(params.campaignId, \" and variationId:\").concat(params.variationId);\n  }\n\n  logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.IMPRESSION_SUCCESS, params));\n};\n\nvar HttpImageUtil = {\n  sendCall: function sendCall(url, queryParams) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var endPoint = \"https://\".concat(url.host).concat(url.pathname).concat(queryParams);\n    var successCallback = options.successCallback,\n        errorCallback = options.errorCallback;\n    errorCallback = errorCallback || successCallback;\n    var isCallbackCalled = false;\n    var img = new Image();\n    this.handleGetCall(url, queryParams, img, successCallback, errorCallback, endPoint, isCallbackCalled);\n  },\n  handleGetCall: function handleGetCall(url, queryParams, img, successCallback, errorCallback, endPoint, isCallbackCalled) {\n    successCallback = successCallback || noop;\n    errorCallback = errorCallback || noop;\n\n    img.onload = function () {\n      if (isCallbackCalled) {\n        return;\n      }\n\n      isCallbackCalled = true;\n      successCallback(null, {\n        status: 'success'\n      });\n      printLog(url, queryParams);\n    };\n\n    img.onerror = function () {\n      if (isCallbackCalled) {\n        return;\n      }\n\n      isCallbackCalled = true;\n      errorCallback(null, {\n        status: 'success'\n      });\n      printLog(url, queryParams);\n    };\n\n    img.src = endPoint;\n    return img;\n  }\n};\nmodule.exports = HttpImageUtil;\n\n/***/ }),\n\n/***/ \"./lib/utils/ImpressionUtil.js\":\n/*!*************************************!*\\\n  !*** ./lib/utils/ImpressionUtil.js ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_222361__) {\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Constants = __nested_webpack_require_222361__(/*! ../constants */ \"./lib/constants/index.js\");\n\nvar UrlEnum = __nested_webpack_require_222361__(/*! ../enums/UrlEnum */ \"./lib/enums/UrlEnum.js\");\n\nvar GoalTypeEnum = __nested_webpack_require_222361__(/*! ../enums/GoalTypeEnum */ \"./lib/enums/GoalTypeEnum.js\");\n\nvar UuidUtil = __nested_webpack_require_222361__(/*! ./UuidUtil */ \"./lib/utils/UuidUtil.js\");\n\nvar ValidateUtil = __nested_webpack_require_222361__(/*! ./ValidateUtil */ \"./lib/utils/ValidateUtil.js\");\n\nvar FunctionUtil = __nested_webpack_require_222361__(/*! ./FunctionUtil */ \"./lib/utils/FunctionUtil.js\");\n\nvar logging = __nested_webpack_require_222361__(/*! ../services/logging */ \"./lib/services/logging/index.js\");\n\nvar FileNameEnum = __nested_webpack_require_222361__(/*! ../enums/FileNameEnum */ \"./lib/enums/FileNameEnum.js\");\n\nvar DataTypeUtil = __nested_webpack_require_222361__(/*! ./DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n\nvar LogLevelEnum = logging.LogLevelEnum,\n    LogMessageEnum = logging.LogMessageEnum,\n    LogMessageUtil = logging.LogMessageUtil;\nvar logger = logging.getLogger();\n\nvar UrlService = __nested_webpack_require_222361__(/*! ../services/UrlService */ \"./lib/services/UrlService.js\");\n/**\n * Return primary properties required for every network call to VWO server\n * @param {Object} configObj\n * @param {String} userId\n *\n * @returns primary properties\n */\n\n\nfunction getPrimaryProperties(configObj, userId) {\n  return {\n    sId: FunctionUtil.getCurrentUnixTimestamp(),\n    u: UuidUtil.generateFor(userId, configObj.accountId)\n  };\n}\n/**\n * Return base properties required for every network call to VWO server\n * @param {Object} configObj\n * @param {String} userId\n *\n * @returns base properties\n */\n\n\nfunction getBaseProperties(configObj, userId) {\n  var accountId = configObj.accountId;\n  return Object.assign({}, getPrimaryProperties(configObj, userId), ImpressionUtil.getReportingProperties(configObj), {\n    account_id: accountId,\n    random: FunctionUtil.getRandomNumber(),\n    ap: Constants.PLATFORM\n  });\n}\n\nvar ImpressionUtil = {\n  /**\n   * Build properties for the impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} tagKey the tag name\n   * @param {String} tagValue the tag value\n   */\n  buildEventForPushing: function buildEventForPushing(configObj, tagKey, tagValue, userId) {\n    var properties = Object.assign({}, getBaseProperties(configObj, userId));\n    properties.url = Constants.HTTPS_PROTOCOL + UrlService.getBaseUrl() + UrlEnum.PUSH;\n    properties.tags = JSON.stringify({\n      u: _defineProperty({}, encodeURIComponent(tagKey), encodeURIComponent(tagValue))\n    });\n    logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_PUSH, {\n      file: FileNameEnum.ImpressionUtil,\n      properties: this._getStringifiedLogProperties(properties)\n    }));\n    return properties;\n  },\n\n  /**\n   * Build properties for the bulk impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} tagKey the tag name\n   * @param {String} tagValue the tag value\n   */\n  buildBatchEventForPushing: function buildBatchEventForPushing(configObj, tagKey, tagValue, userId) {\n    if (false) { var properties; }\n  },\n\n  /**\n   * Build properties for the impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} campaignKey, the Campaign ID\n   * @param {Number} variationId, the Variation ID\n   *\n   * @return null if campaign ID or variation ID is invalid\n   */\n  buildEventForTrackingUser: function buildEventForTrackingUser(configObj, campaignKey, variationId, userId, usageStats) {\n    var properties = Object.assign({\n      experiment_id: campaignKey,\n      combination: variationId\n    }, getBaseProperties(configObj, userId), usageStats);\n    properties.ed = JSON.stringify({\n      p: 'server'\n    });\n    properties.url = Constants.HTTPS_PROTOCOL + UrlService.getBaseUrl() + UrlEnum.TRACK_USER;\n    logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_TRACK_USER, {\n      file: FileNameEnum.ImpressionUtil,\n      properties: this._getStringifiedLogProperties(properties)\n    }));\n    return properties;\n  },\n\n  /**\n   * Build properties for the bulk impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} campaignKey, the Campaign ID\n   * @param {Number} variationId, the Variation ID\n   *\n   * @return null if campaign ID or variation ID is invalid\n   */\n  buildBatchEventForTrackingUser: function buildBatchEventForTrackingUser(configObj, campaignKey, variationId, userId) {\n    if (false) { var properties; }\n  },\n\n  /**\n   * Build properties for the impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} campaignKey, the Campaign ID\n   * @param {Number} variationId, the Variation ID\n   * @param {String} goalId, the Goal ID\n   * @param {String} revenue, the revenue generated on conversion\n   *\n   * @return null if campaign ID or variation ID is invalid\n   */\n  buildEventForTrackingGoal: function buildEventForTrackingGoal(configObj, campaignKey, variationId, userId) {\n    var goal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    var revenue = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n    var goalId = goal.id;\n    var properties = Object.assign({\n      experiment_id: campaignKey,\n      combination: variationId\n    }, getBaseProperties(configObj, userId));\n    properties.url = Constants.HTTPS_PROTOCOL + UrlService.getBaseUrl() + UrlEnum.TRACK_GOAL;\n    properties['goal_id'] = goalId;\n\n    if (goal.type === GoalTypeEnum.REVENUE && ValidateUtil.isValidValue(revenue)) {\n      properties['r'] = revenue;\n    }\n\n    logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_TRACK_GOAL, {\n      file: FileNameEnum.ImpressionUtil,\n      properties: this._getStringifiedLogProperties(properties)\n    }));\n    return properties;\n  },\n\n  /**\n   * Build properties for the bulk impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} campaignKey, the Campaign ID\n   * @param {Number} variationId, the Variation ID\n   * @param {String} goalId, the Goal ID\n   * @param {String} revenue, the revenue generated on conversion\n   *\n   * @return null if campaign ID or variation ID is invalid\n   */\n  buildBatchEventForTrackingGoal: function buildBatchEventForTrackingGoal(configObj, campaignKey, variationId, userId) {\n    var goal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    var revenue = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n\n    if (false) { var properties; }\n  },\n\n  /**\n   * Return an object containing properties required for segmenting reports\n   * @param {Object} configObj\n   * @returns reporting properties\n   */\n  getReportingProperties: function getReportingProperties(configObj) {\n    var _ref;\n\n    var sdkKey = configObj.sdkKey;\n    return _ref = {}, _defineProperty(_ref, Constants.SDK_QUERY_PARAM, Constants.SDK_NAME), _defineProperty(_ref, Constants.SDK_VERSION_QUERY_PARAM, Constants.SDK_VERSION), _defineProperty(_ref, \"env\", sdkKey), _ref;\n  },\n\n  /**\n   * Builds generic properties for different tracking calls required by VWO servers.\n   * @param {Object} configObj\n   * @param {String} eventName\n   * @returns properties\n   */\n  getEventsBaseProperties: function getEventsBaseProperties(config, eventName) {\n    var usageStats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var sdkKey = config.sdkKey;\n    var properties = Object.assign({\n      en: eventName,\n      a: config.accountId,\n      env: sdkKey,\n      eTime: FunctionUtil.getCurrentUnixTimestampInMillis(),\n      random: FunctionUtil.getRandomNumber(),\n      p: 'FS'\n    }, usageStats);\n    properties.url = Constants.HTTPS_PROTOCOL + UrlService.getBaseUrl() + UrlEnum.EVENTS;\n    return properties;\n  },\n\n  /**\n   * Builds generic payload required by all the different tracking calls.\n   * @param {Object} configObj\n   * @param {String} userId\n   * @param {String} eventName\n   * @param {Object} usageStats\n   * @returns properties\n   */\n  getEventBasePayload: function getEventBasePayload(configObj, userId, eventName) {\n    var uuid = UuidUtil.generateFor(userId, configObj.accountId);\n    var sdkKey = configObj.sdkKey;\n    var props = {\n      sdkName: Constants.SDK_NAME,\n      sdkVersion: Constants.SDK_VERSION,\n      $visitor: {\n        props: {\n          vwo_fs_environment: sdkKey\n        }\n      }\n    }; // if (usageStats) {\n    //   props = Object.assign({}, props, usageStats);\n    // }\n\n    var properties = {\n      d: {\n        msgId: \"\".concat(uuid, \"-\").concat(FunctionUtil.getCurrentUnixTimestamp()),\n        visId: uuid,\n        sessionId: FunctionUtil.getCurrentUnixTimestamp(),\n        event: {\n          props: props,\n          name: eventName,\n          time: FunctionUtil.getCurrentUnixTimestampInMillis()\n        },\n        visitor: {\n          props: {\n            vwo_fs_environment: sdkKey\n          }\n        }\n      }\n    };\n    return properties;\n  },\n\n  /**\n   * Builds payload to track the visitor.\n   * @param {Object} configObj\n   * @param {String} userId\n   * @param {String} eventName\n   * @param {String} campaignId\n   * @param {Number} variationId\n   * @returns track-user payload\n   */\n  getTrackUserPayloadData: function getTrackUserPayloadData(configObj, userId, eventName, campaignId, variationId) {\n    var properties = this.getEventBasePayload(configObj, userId, eventName);\n    properties.d.event.props.id = campaignId;\n    properties.d.event.props.variation = variationId; // this is currently required by data-layer team, we can make changes on DACDN and remove it from here\n\n    properties.d.event.props.isFirst = 1;\n    logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_EVENT_ARCH_TRACK_USER, {\n      file: FileNameEnum.ImpressionUtil,\n      accountId: configObj.accountId,\n      userId: userId,\n      campaignId: campaignId\n    }));\n    return properties;\n  },\n\n  /**\n   * Builds payload to track the Goal.\n   * @param {Object} configObj\n   * @param {String} userId\n   * @param {String} eventName\n   * @param {Object} metricMap\n   * @param {String} revenueValue\n   * @returns track-goal payload\n   */\n  getTrackGoalPayloadData: function getTrackGoalPayloadData(configObj, userId, eventName, metricMap, revenueValue, revenuePropList) {\n    var properties = this.getEventBasePayload(configObj, userId, eventName);\n    var metric = {};\n    Object.keys(metricMap).forEach(function (key) {\n      metric[\"id_\".concat(key)] = [\"g_\".concat(metricMap[key].goal.id)];\n      logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_EVENT_ARCH_TRACK_GOAL, {\n        file: FileNameEnum.ImpressionUtil,\n        goalName: eventName,\n        accountId: configObj.accountId,\n        u: userId,\n        campaignId: key\n      }));\n    });\n    properties.d.event.props.vwoMeta = {\n      metric: metric\n    };\n\n    if (revenuePropList && revenueValue && revenuePropList.size > 0) {\n      revenuePropList.forEach(function (revenueProp) {\n        properties.d.event.props.vwoMeta[revenueProp] = revenueValue;\n      });\n    }\n\n    properties.d.event.props.isCustomEvent = true;\n    return properties;\n  },\n\n  /**\n   * Builds payload to appply post segmentation on VWO campaign reports.\n   * @param {Object} configObj\n   * @param {String} userId\n   * @param {String} eventName\n   * @param {Object} customDimensionMap\n   * @returns push payload\n   */\n  getPushPayloadData: function getPushPayloadData(configObj, userId, eventName, customDimensionMap) {\n    var properties = this.getEventBasePayload(configObj, userId, eventName);\n    properties.d.event.props.isCustomEvent = true;\n    Object.keys(customDimensionMap).forEach(function (key) {\n      var tagValue = DataTypeUtil.isString(customDimensionMap[key]) ? customDimensionMap[key] : JSON.stringify(customDimensionMap[key]);\n      properties.d.event.props.$visitor.props[key] = tagValue;\n      properties.d.visitor.props[key] = tagValue;\n    });\n    logger.log(LogLevelEnum.DEBUG, LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_EVENT_ARCH_PUSH, {\n      file: FileNameEnum.ImpressionUtil,\n      accountId: configObj.accountId,\n      userId: userId,\n      property: JSON.stringify(customDimensionMap)\n    }));\n    return properties;\n  },\n\n  /**\n   * Remove the sensitive keys from the properties to te displayed in the log.\n   * @param {Object} properties\n   * @returns properties without sensitive keys\n   */\n  _getStringifiedLogProperties: function _getStringifiedLogProperties(properties) {\n    var logProperties = Object.assign({}, properties);\n    delete logProperties.env;\n    return JSON.stringify(logProperties);\n  }\n};\nmodule.exports = ImpressionUtil;\n\n/***/ }),\n\n/***/ \"./lib/utils/LogMessageUtil.js\":\n/*!*************************************!*\\\n  !*** ./lib/utils/LogMessageUtil.js ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_236381__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar DataTypeUtil = __nested_webpack_require_236381__(/*! ./DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n\nvar nargs = /\\{([0-9a-zA-Z_]+)\\}/g;\nvar LogMessageUtil = {\n  /**\n   * Took reference from: string-template\n   *\n   * Name: string-template\n   * Published Name: string-template\n   * URL: https://github.com/Matt-Esch/string-template\n   * Description: A lightweight string replace engine for text-based templates\n   * Author: Matt-Esch (https://github.com/Matt-Esch)\n   * License: MIT License\n   * Local Modifications: This library is not used as a dependency.\n   *       Source code was referenced and is modified as per requirements.\n   */\n  build: function build(template, data) {\n    try {\n      return template.replace(nargs, function (match, key, index) {\n        var result;\n        var isKey;\n\n        if (template[index - 1] === '{' && template[index + match.length] === '}') {\n          return key;\n        } else {\n          isKey = data.hasOwnProperty(key);\n\n          if (isKey) {\n            var value = data[key];\n\n            if (DataTypeUtil.isFunction(value)) {\n              value = data[key]();\n            }\n\n            result = value;\n          } else {\n            result = null;\n          }\n\n          if (result === null || result === undefined) {\n            return '';\n          }\n\n          return result;\n        }\n      });\n    } catch (err) {\n      return template;\n    }\n  }\n};\nmodule.exports = LogMessageUtil;\n\n/***/ }),\n\n/***/ \"./lib/utils/ObjectUtil.js\":\n/*!*********************************!*\\\n  !*** ./lib/utils/ObjectUtil.js ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ObjectUtil = {\n  areObjectKeys: function areObjectKeys() {\n    var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Object.keys(obj).length;\n  },\n  getKeyValue: function getKeyValue(obj) {\n    if (!ObjectUtil.areObjectKeys(obj)) {\n      return;\n    }\n\n    var key = Object.keys(obj)[0];\n    var value = obj[key];\n    return {\n      key: key,\n      value: value\n    };\n  },\n  objectValues: function objectValues(obj) {\n    return Object.keys(obj).map(function (key) {\n      return obj[key];\n    });\n  }\n};\nmodule.exports = ObjectUtil;\n\n/***/ }),\n\n/***/ \"./lib/utils/SegmentUtil.js\":\n/*!**********************************!*\\\n  !*** ./lib/utils/SegmentUtil.js ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_240109__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar DataTypeUtil = __nested_webpack_require_240109__(/*! ../utils/DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n\nvar _require = __nested_webpack_require_240109__(/*! ../utils/FunctionUtil */ \"./lib/utils/FunctionUtil.js\"),\n    matchWithRegex = _require.matchWithRegex;\n\nvar _require2 = __nested_webpack_require_240109__(/*! ../utils/ObjectUtil */ \"./lib/utils/ObjectUtil.js\"),\n    getKeyValue = _require2.getKeyValue;\n\nvar SegmentEnum = __nested_webpack_require_240109__(/*! ../enums/segment */ \"./lib/enums/segment/index.js\");\n\nvar _SegmentEnum$SegmentO = SegmentEnum.SegmentOperandValueTypeRegexes,\n    LOWER_MATCH = _SegmentEnum$SegmentO.LOWER_MATCH,\n    WILDCARD_MATCH = _SegmentEnum$SegmentO.WILDCARD_MATCH,\n    REGEX_MATCH = _SegmentEnum$SegmentO.REGEX_MATCH,\n    STARTING_STAR = _SegmentEnum$SegmentO.STARTING_STAR,\n    ENDING_STAR = _SegmentEnum$SegmentO.ENDING_STAR;\nvar _SegmentEnum$SegmentO2 = SegmentEnum.SegmentOperandValues,\n    LOWER_VALUE = _SegmentEnum$SegmentO2.LOWER_VALUE,\n    STARTING_ENDING_STAR_VALUE = _SegmentEnum$SegmentO2.STARTING_ENDING_STAR_VALUE,\n    STARTING_STAR_VALUE = _SegmentEnum$SegmentO2.STARTING_STAR_VALUE,\n    ENDING_STAR_VALUE = _SegmentEnum$SegmentO2.ENDING_STAR_VALUE,\n    REGEX_VALUE = _SegmentEnum$SegmentO2.REGEX_VALUE,\n    EQUAL_VALUE = _SegmentEnum$SegmentO2.EQUAL_VALUE;\n\nfunction extractOperandValue(operand, regex) {\n  return matchWithRegex(operand, regex) && matchWithRegex(operand, regex)[1];\n}\n\nfunction processValues(operandValue, tagValue) {\n  // this is atomic, either both will be processed or none\n  var processedOperandValue = parseFloat(operandValue, 10);\n  var processedTagValue = parseFloat(tagValue, 10);\n\n  if (!processedOperandValue || !processedTagValue) {\n    return {\n      operandValue: operandValue,\n      tagValue: tagValue\n    };\n  } // now we have surity that both are numbers\n  // now we can convert them independently to int type if they\n  // are int rather than floats\n\n\n  if (processedOperandValue === Math.floor(processedOperandValue)) {\n    processedOperandValue = parseInt(processedOperandValue, 10);\n  }\n\n  if (processedTagValue === Math.floor(processedTagValue)) {\n    processedTagValue = parseInt(processedTagValue, 10);\n  } // convert it back to string and return\n\n\n  return {\n    operandValue: processedOperandValue.toString(),\n    tagValue: processedTagValue.toString()\n  };\n}\n\nfunction preProcessTagValue(tagValue) {\n  if (tagValue === undefined) {\n    tagValue = '';\n  }\n\n  if (DataTypeUtil.isBoolean(tagValue)) {\n    if (tagValue) {\n      tagValue = true;\n    } else {\n      tagValue = false;\n    }\n  }\n\n  if (tagValue !== null) {\n    tagValue = tagValue.toString();\n  }\n\n  return tagValue;\n}\n\nfunction preProcessOperandValue(operand) {\n  var operandType;\n  var operandValue;\n  var startingStar;\n  var endingStar; // Pre process operand value\n\n  if (matchWithRegex(operand, LOWER_MATCH)) {\n    operandType = LOWER_VALUE;\n    operandValue = extractOperandValue(operand, LOWER_MATCH);\n  } else if (matchWithRegex(operand, WILDCARD_MATCH)) {\n    operandValue = extractOperandValue(operand, WILDCARD_MATCH);\n    startingStar = matchWithRegex(operandValue, STARTING_STAR);\n    endingStar = matchWithRegex(operandValue, ENDING_STAR); // In case of wildcard, the operand type is further divided into contains, startswith and endswith\n\n    if (startingStar && endingStar) {\n      operandType = STARTING_ENDING_STAR_VALUE;\n    } else if (startingStar) {\n      operandType = STARTING_STAR_VALUE;\n    } else if (endingStar) {\n      operandType = ENDING_STAR_VALUE;\n    }\n\n    operandValue = operandValue.replace(STARTING_STAR, '').replace(ENDING_STAR, '');\n  } else if (matchWithRegex(operand, REGEX_MATCH)) {\n    operandType = REGEX_VALUE;\n    operandValue = extractOperandValue(operand, REGEX_MATCH);\n  } else {\n    operandType = EQUAL_VALUE;\n    operandValue = operand;\n  }\n\n  return {\n    operandType: operandType,\n    operandValue: operandValue\n  };\n}\n\nfunction operandCustomVariablesParser(operand, customVariables) {\n  // Extract custom_variable_key and custom_variable_value from operand\n  var _getKeyValue = getKeyValue(operand),\n      key = _getKeyValue.key,\n      value = _getKeyValue.value;\n\n  var operandKey = key;\n  operand = value;\n\n  if (!customVariables.hasOwnProperty(key)) {\n    // For handling \".*\" regex case when key is not present in customVariables and matches regex is used.\n    return false;\n  }\n\n  var tagValue = customVariables[operandKey]; // Pre process tag value\n\n  tagValue = preProcessTagValue(tagValue);\n\n  var _preProcessOperandVal = preProcessOperandValue(operand),\n      operandType = _preProcessOperandVal.operandType,\n      operandValue = _preProcessOperandVal.operandValue; // Process both operand and tag values\n\n\n  var processedValues = processValues(operandValue, tagValue);\n  tagValue = processedValues.tagValue;\n  return extractResult(operandType, processedValues.operandValue, tagValue);\n}\n\nfunction operandUserParser(operand, customVariables) {\n  var users = operand.split(',');\n\n  for (var i = 0; i < users.length; i++) {\n    if (users[i].trim() === customVariables._vwoUserId) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction extractResult(operandType, operandValue, tagValue) {\n  var result;\n\n  switch (operandType) {\n    case LOWER_VALUE:\n      if (tagValue !== null) {\n        result = operandValue.toLowerCase() === tagValue.toLowerCase();\n      }\n\n      break;\n\n    case STARTING_ENDING_STAR_VALUE:\n      if (tagValue !== null) {\n        result = tagValue.indexOf(operandValue) > -1;\n      }\n\n      break;\n\n    case STARTING_STAR_VALUE:\n      if (tagValue !== null) {\n        result = tagValue.endsWith(operandValue);\n      }\n\n      break;\n\n    case ENDING_STAR_VALUE:\n      if (tagValue !== null) {\n        result = tagValue.startsWith(operandValue);\n      }\n\n      break;\n\n    case REGEX_VALUE:\n      try {\n        var pattern = new RegExp(operandValue, 'g');\n        result = !!pattern.test(tagValue);\n      } catch (err) {\n        result = false;\n      }\n\n      break;\n\n    default:\n      result = tagValue === operandValue;\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  extractOperandValue: extractOperandValue,\n  processValues: processValues,\n  preProcessTagValue: preProcessTagValue,\n  preProcessOperandValue: preProcessOperandValue,\n  operandCustomVariablesParser: operandCustomVariablesParser,\n  operandUserParser: operandUserParser\n};\n\n/***/ }),\n\n/***/ \"./lib/utils/SettingsFileUtil.js\":\n/*!***************************************!*\\\n  !*** ./lib/utils/SettingsFileUtil.js ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_247335__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Constants = __nested_webpack_require_247335__(/*! ../constants */ \"./lib/constants/index.js\");\n\nvar UrlEnum = __nested_webpack_require_247335__(/*! ../enums/UrlEnum */ \"./lib/enums/UrlEnum.js\");\n\nvar _require = __nested_webpack_require_247335__(/*! ./FunctionUtil */ \"./lib/utils/FunctionUtil.js\"),\n    getRandomNumber = _require.getRandomNumber,\n    getCurrentTime = _require.getCurrentTime;\n\nvar SettingsFileUtil = {\n  get: function get(accountId, sdkKey, userStorageService) {\n    var config = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    if (!accountId || !sdkKey) {\n      console.error('AccountId and sdkKey are required for fetching account settings. Aborting!');\n      return;\n    }\n\n    var protocol = 'https';\n    var port;\n    var hostname = UrlEnum.BASE_URL;\n    var path = UrlEnum.SETTINGS_URL;\n\n    if (config.isViaWebhook) {\n      path = UrlEnum.WEBHOOK_SETTINGS_URL;\n    }\n\n    path += \"?a=\".concat(accountId, \"&\") + \"i=\".concat(sdkKey, \"&\") + \"r=\".concat(getRandomNumber(), \"&\") + \"platform=\".concat(Constants.PLATFORM, \"&\") + \"\".concat(Constants.SDK_QUERY_PARAM, \"=\").concat(Constants.SDK_NAME, \"&\") + \"\".concat(Constants.SDK_VERSION_QUERY_PARAM, \"=\").concat(Constants.SDK_VERSION);\n\n    if (config.hostname && config.path) {\n      protocol = config.protocol;\n      port = config.port;\n      hostname = config.hostname || hostname;\n      path = config.path || path;\n    }\n\n    if (true) {\n      return __nested_webpack_require_247335__(/*! ./XhrUtil */ \"./lib/utils/XhrUtil.js\").send({\n        method: 'GET',\n        url: \"\".concat(protocol, \"://\").concat(hostname).concat(path),\n        userStorageService: userStorageService\n      });\n    } else { var https, http; }\n  },\n  handleHttpRequest: function handleHttpRequest(res, resolve, reject) {\n    var statusCode = res.statusCode;\n    var contentType = res.headers['content-type'];\n    var error;\n    var rawData = '';\n\n    if (!/^application\\/json/.test(contentType)) {\n      error = \"Invalid content-type.\\nExpected application/json but received \".concat(contentType);\n    }\n\n    if (error) {\n      console.error(error.message); // Consume response data to free up memory\n\n      res.resume();\n      reject(error);\n      return;\n    }\n\n    res.setEncoding('utf8');\n    res.on('data', function (chunk) {\n      rawData += chunk;\n    });\n    res.on('end', function () {\n      SettingsFileUtil.handleHttpResponse(statusCode, rawData, resolve, reject);\n    });\n  },\n  handleHttpResponse: function handleHttpResponse(statusCode, rawData, resolve, reject) {\n    try {\n      var parsedData = JSON.parse(rawData);\n\n      if (statusCode !== 200) {\n        var error = \"VWO-SDK - [ERROR]: \".concat(getCurrentTime(), \" Request failed for fetching account settings. Got Status Code: \").concat(statusCode, \" and message: \").concat(rawData);\n        console.error(error);\n        reject(error);\n        return;\n      }\n\n      resolve(parsedData);\n    } catch (err) {\n      console.error(\"VWO-SDK - [ERROR]: \".concat(getCurrentTime(), \" Request failed for fetching account settings - \").concat(err.message));\n      reject(err);\n    }\n  }\n};\nmodule.exports = SettingsFileUtil;\n\n/***/ }),\n\n/***/ \"./lib/utils/UuidUtil.js\":\n/*!*******************************!*\\\n  !*** ./lib/utils/UuidUtil.js ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_251303__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar uuidv5 = __nested_webpack_require_251303__(/*! uuid/v5 */ \"./node_modules/uuid/v5.js\");\n\nvar Constants = __nested_webpack_require_251303__(/*! ../constants */ \"./lib/constants/index.js\");\n\nvar VWO_NAMESPACE = uuidv5(Constants.SEED_URL, uuidv5.URL);\nvar UuidUtil = {\n  generateFor: function generateFor(userId, accountId) {\n    userId = \"\".concat(userId); // type-cast\n\n    var hash = \"\".concat(accountId);\n    var userIdNamespace = UuidUtil.generate(hash, VWO_NAMESPACE);\n    var uuidForUserIdAccountId = UuidUtil.generate(userId, userIdNamespace);\n    var desiredUuid = uuidForUserIdAccountId.replace(/-/gi, '').toUpperCase();\n    return desiredUuid;\n  },\n  generate: function generate(name, namespace) {\n    if (!name || !namespace) {\n      return;\n    }\n\n    return uuidv5(name, namespace);\n  }\n};\nmodule.exports = UuidUtil;\n\n/***/ }),\n\n/***/ \"./lib/utils/ValidateUtil.js\":\n/*!***********************************!*\\\n  !*** ./lib/utils/ValidateUtil.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_252981__) {\n\nvar _APIMethodArgumentsVa;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar DataTypeUtil = __nested_webpack_require_252981__(/*! ./DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\");\n\nvar DataTypeEnum = __nested_webpack_require_252981__(/*! ../enums/DataTypeEnum */ \"./lib/enums/DataTypeEnum.js\");\n\nvar ApiEnum = __nested_webpack_require_252981__(/*! ../enums/ApiEnum */ \"./lib/enums/ApiEnum.js\");\n\nvar GoalTypeEnum = __nested_webpack_require_252981__(/*! ../enums/GoalTypeEnum */ \"./lib/enums/GoalTypeEnum.js\");\n\nvar APIMethodArgumentsValidationEnum = (_APIMethodArgumentsVa = {}, _defineProperty(_APIMethodArgumentsVa, ApiEnum.ACTIVATE, function (_ref) {\n  var campaignKey = _ref.campaignKey,\n      userId = _ref.userId,\n      _ref$customVariables = _ref.customVariables,\n      customVariables = _ref$customVariables === void 0 ? {} : _ref$customVariables,\n      _ref$variationTargeti = _ref.variationTargetingVariables,\n      variationTargetingVariables = _ref$variationTargeti === void 0 ? {} : _ref$variationTargeti,\n      _ref$userStorageData = _ref.userStorageData,\n      userStorageData = _ref$userStorageData === void 0 ? {} : _ref$userStorageData,\n      _ref$shouldTrackRetur = _ref.shouldTrackReturningUser,\n      shouldTrackReturningUser = _ref$shouldTrackRetur === void 0 ? false : _ref$shouldTrackRetur,\n      _ref$metaData = _ref.metaData,\n      metaData = _ref$metaData === void 0 ? {} : _ref$metaData;\n  return [{\n    key: 'campaignKey',\n    value: campaignKey,\n    type: DataTypeEnum.STRING\n  }, {\n    key: 'userId',\n    value: userId,\n    type: DataTypeEnum.STRING\n  }, {\n    key: 'customVariables',\n    value: customVariables,\n    type: DataTypeEnum.OBJECT\n  }, {\n    key: 'variationTargetingVariables',\n    value: variationTargetingVariables,\n    type: DataTypeEnum.OBJECT\n  }, {\n    key: 'userStorageData',\n    value: userStorageData,\n    type: DataTypeEnum.OBJECT\n  }, {\n    key: 'shouldTrackReturningUser',\n    value: shouldTrackReturningUser,\n    type: DataTypeEnum.BOOLEAN\n  }, {\n    key: 'metaData',\n    value: metaData,\n    type: DataTypeEnum.OBJECT\n  }];\n}), _defineProperty(_APIMethodArgumentsVa, ApiEnum.TRACK, function (_ref2) {\n  var campaignKey = _ref2.campaignKey,\n      userId = _ref2.userId,\n      goalIdentifier = _ref2.goalIdentifier,\n      _ref2$customVariables = _ref2.customVariables,\n      customVariables = _ref2$customVariables === void 0 ? {} : _ref2$customVariables,\n      _ref2$variationTarget = _ref2.variationTargetingVariables,\n      variationTargetingVariables = _ref2$variationTarget === void 0 ? {} : _ref2$variationTarget,\n      _ref2$userStorageData = _ref2.userStorageData,\n      userStorageData = _ref2$userStorageData === void 0 ? {} : _ref2$userStorageData,\n      _ref2$goalTypeToTrack = _ref2.goalTypeToTrack,\n      goalTypeToTrack = _ref2$goalTypeToTrack === void 0 ? GoalTypeEnum.ALL : _ref2$goalTypeToTrack,\n      _ref2$shouldTrackRetu = _ref2.shouldTrackReturningUser,\n      shouldTrackReturningUser = _ref2$shouldTrackRetu === void 0 ? false : _ref2$shouldTrackRetu,\n      _ref2$metaData = _ref2.metaData,\n      metaData = _ref2$metaData === void 0 ? {} : _ref2$metaData;\n  return [{\n    key: 'campaignKey',\n    value: campaignKey,\n    type: DataTypeEnum.STRING_NULL_UNDEFINED_ARRAY\n  }, {\n    key: 'userId',\n    value: userId,\n    type: DataTypeEnum.STRING\n  }, {\n    key: 'goalIdentifier',\n    value: goalIdentifier,\n    type: DataTypeEnum.STRING\n  }, {\n    key: 'customVariables',\n    value: customVariables,\n    type: DataTypeEnum.OBJECT\n  }, {\n    key: 'variationTargetingVariables',\n    value: variationTargetingVariables,\n    type: DataTypeEnum.OBJECT\n  }, {\n    key: 'userStorageData',\n    value: userStorageData,\n    type: DataTypeEnum.OBJECT\n  }, {\n    key: 'goalTypeToTrack',\n    value: goalTypeToTrack,\n    type: DataTypeEnum.STRING\n  }, {\n    key: 'shouldTrackReturningUser',\n    value: shouldTrackReturningUser,\n    type: DataTypeEnum.BOOLEAN\n  }, {\n    key: 'metaData',\n    value: metaData,\n    type: DataTypeEnum.OBJECT\n  }];\n}), _defineProperty(_APIMethodArgumentsVa, ApiEnum.IS_FEATURE_ENABLED, function (_ref3) {\n  var campaignKey = _ref3.campaignKey,\n      userId = _ref3.userId,\n      _ref3$customVariables = _ref3.customVariables,\n      customVariables = _ref3$customVariables === void 0 ? {} : _ref3$customVariables,\n      _ref3$variationTarget = _ref3.variationTargetingVariables,\n      variationTargetingVariables = _ref3$variationTarget === void 0 ? {} : _ref3$variationTarget,\n      _ref3$userStorageData = _ref3.userStorageData,\n      userStorageData = _ref3$userStorageData === void 0 ? {} : _ref3$userStorageData,\n      _ref3$shouldTrackRetu = _ref3.shouldTrackReturningUser,\n      shouldTrackReturningUser = _ref3$shouldTrackRetu === void 0 ? false : _ref3$shouldTrackRetu,\n      _ref3$metaData = _ref3.metaData,\n      metaData = _ref3$metaData === void 0 ? {} : _ref3$metaData;\n  return [{\n    key: 'campaignKey',\n    value: campaignKey,\n    type: DataTypeEnum.STRING\n  }, {\n    key: 'userId',\n    value: userId,\n    type: DataTypeEnum.STRING\n  }, {\n    key: 'customVariables',\n    value: customVariables,\n    type: DataTypeEnum.OBJECT\n  }, {\n    key: 'variationTargetingVariables',\n    value: variationTargetingVariables,\n    type: DataTypeEnum.OBJECT\n  }, {\n    key: 'userStorageData',\n    value: userStorageData,\n    type: DataTypeEnum.OBJECT\n  }, {\n    key: 'shouldTrackReturningUser',\n    value: shouldTrackReturningUser,\n    type: DataTypeEnum.BOOLEAN\n  }, {\n    key: 'metaData',\n    value: metaData,\n    type: DataTypeEnum.OBJECT\n  }];\n}), _defineProperty(_APIMethodArgumentsVa, ApiEnum.GET_FEATURE_VARIABLE_VALUE, function (_ref4) {\n  var campaignKey = _ref4.campaignKey,\n      variableKey = _ref4.variableKey,\n      userId = _ref4.userId,\n      _ref4$customVariables = _ref4.customVariables,\n      customVariables = _ref4$customVariables === void 0 ? {} : _ref4$customVariables,\n      _ref4$variationTarget = _ref4.variationTargetingVariables,\n      variationTargetingVariables = _ref4$variationTarget === void 0 ? {} : _ref4$variationTarget,\n      _ref4$userStorageData = _ref4.userStorageData,\n      userStorageData = _ref4$userStorageData === void 0 ? {} : _ref4$userStorageData,\n      _ref4$metaData = _ref4.metaData,\n      metaData = _ref4$metaData === void 0 ? {} : _ref4$metaData;\n  return [{\n    key: 'campaignKey',\n    value: campaignKey,\n    type: DataTypeEnum.STRING\n  }, {\n    key: 'variableKey',\n    value: variableKey,\n    type: DataTypeEnum.STRING\n  }, {\n    key: 'userId',\n    value: userId,\n    type: DataTypeEnum.STRING\n  }, {\n    key: 'customVariables',\n    value: customVariables,\n    type: DataTypeEnum.OBJECT\n  }, {\n    key: 'variationTargetingVariables',\n    value: variationTargetingVariables,\n    type: DataTypeEnum.OBJECT\n  }, {\n    key: 'userStorageData',\n    value: userStorageData,\n    type: DataTypeEnum.OBJECT\n  }, {\n    key: 'metaData',\n    value: metaData,\n    type: DataTypeEnum.OBJECT\n  }];\n}), _defineProperty(_APIMethodArgumentsVa, ApiEnum.PUSH, function (_ref5) {\n  var tagKey = _ref5.tagKey,\n      tagValue = _ref5.tagValue,\n      userId = _ref5.userId,\n      customDimensionMap = _ref5.customDimensionMap;\n  return [{\n    key: 'tagKey',\n    value: tagKey,\n    type: DataTypeEnum.STRING\n  }, {\n    key: 'tagValue',\n    value: tagValue,\n    type: DataTypeEnum.STRING\n  }, {\n    key: 'userId',\n    value: userId,\n    type: DataTypeEnum.STRING\n  }, {\n    key: 'customDimensionMap',\n    value: customDimensionMap,\n    type: DataTypeEnum.OBJECT\n  }];\n}), _APIMethodArgumentsVa); // both have same\n\nAPIMethodArgumentsValidationEnum[ApiEnum.GET_VARIATION_NAME] = APIMethodArgumentsValidationEnum[ApiEnum.ACTIVATE];\nvar ValidateUtil = {\n  isValidValue: function isValidValue(value) {\n    return !!(value !== undefined && value);\n  },\n  isValidString: function isValidString(value) {\n    return ValidateUtil.isValidValue(value) && DataTypeUtil.isString(value);\n  },\n  isValidNumber: function isValidNumber(value) {\n    return ValidateUtil.isValidValue(value) && DataTypeUtil.isNumber(value);\n  },\n  isValidFunction: function isValidFunction(value) {\n    return ValidateUtil.isValidValue(value) && DataTypeUtil.isFunction(value);\n  },\n  isValidBoolean: function isValidBoolean(value) {\n    return value !== undefined && DataTypeUtil.isBoolean(value);\n  },\n  isValidObject: function isValidObject(value) {\n    return value !== undefined && DataTypeUtil.isObject(value);\n  },\n  areValidParamsForAPIMethod: function areValidParamsForAPIMethod(argsObj) {\n    var isValid = false;\n    var args = APIMethodArgumentsValidationEnum[argsObj.method](argsObj);\n    var validators = [];\n\n    for (var i = 0; i < args.length; i++) {\n      var argConfig = args[i];\n      var argValue = argConfig.value;\n      var dataType = argConfig.type; // let value;\n\n      switch (dataType) {\n        case DataTypeEnum.NUMBER:\n          validators.push(ValidateUtil.isValidNumber(argValue));\n          break;\n\n        case DataTypeEnum.STRING:\n          validators.push(ValidateUtil.isValidString(argValue));\n          break;\n\n        case DataTypeEnum.BOOLEAN:\n          validators.push(ValidateUtil.isValidBoolean(argValue));\n          break;\n        // case DataTypeEnum.FUNCTION:\n        //   validators.push(ValidateUtil.isValidFunction(argValue));\n        //   break;\n\n        case DataTypeEnum.OBJECT:\n          validators.push(ValidateUtil.isValidObject(argValue));\n          break;\n\n        case DataTypeEnum.STRING_NULL_UNDEFINED_ARRAY:\n          var value = ValidateUtil.isValidString(argValue) || DataTypeUtil.isUndefined(argValue) || DataTypeUtil.isNull(argValue) || DataTypeUtil.isArray(argValue);\n          validators.push(value);\n          break;\n        // case DataTypeEnum.NUMBER_STRING:\n        //   value = ValidateUtil.isValidNumber(argValue) || ValidateUtil.isValidString(argValue);\n        //   validators.push(value);\n        //   break;\n      }\n    }\n\n    isValid = validators.every(function (val) {\n      return val;\n    });\n    return isValid;\n  }\n};\nmodule.exports = ValidateUtil;\n\n/***/ }),\n\n/***/ \"./lib/utils/XhrUtil.js\":\n/*!******************************!*\\\n  !*** ./lib/utils/XhrUtil.js ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_263962__) {\n\n/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _require = __nested_webpack_require_263962__(/*! ./FunctionUtil */ \"./lib/utils/FunctionUtil.js\"),\n    getCurrentTime = _require.getCurrentTime;\n\nvar _require2 = __nested_webpack_require_263962__(/*! ./DataTypeUtil */ \"./lib/utils/DataTypeUtil.js\"),\n    isObject = _require2.isObject,\n    isFunction = _require2.isFunction;\n\nvar XhrUtil = {\n  _getStoredSettings: function _getStoredSettings(userStorageService) {\n    var isStoredData = false;\n    var parsedSettings;\n\n    if (userStorageService && isObject(userStorageService) && isFunction(userStorageService.getSettings)) {\n      try {\n        var settings = userStorageService.getSettings();\n        parsedSettings = JSON.parse(settings);\n\n        if (parsedSettings && isObject(parsedSettings) && Object.keys(parsedSettings).length > 3) {\n          var info = \"VWO-SDK - [INFO]: \".concat(getCurrentTime(), \" VWO settings found in Storage Service.\");\n          console.info(info);\n          isStoredData = true;\n        } else if (parsedSettings) {\n          var error = \"VWO-SDK - [ERROR]: \".concat(getCurrentTime(), \" VWO settings found in Storage Service is not valid.\");\n          console.error(error);\n        } else {\n          var warning = \"VWO-SDK - [WARNING]: \".concat(getCurrentTime(), \" VWO settings is empty in Storage Service.\");\n          console.warn(warning);\n        }\n      } catch (err) {\n        var _error = \"VWO-SDK - [ERROR]: \".concat(getCurrentTime(), \" VWO settings found in Storage Service is not valid. \").concat(err);\n\n        console.error(_error);\n        isStoredData = false;\n      }\n    }\n\n    return {\n      isStoredData: isStoredData,\n      parsedSettings: parsedSettings\n    };\n  },\n  send: function send() {\n    var _this = this;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        method = _ref.method,\n        url = _ref.url,\n        payload = _ref.payload,\n        userStorageService = _ref.userStorageService;\n\n    if (!url || !method) {\n      return;\n    }\n\n    return new Promise(function (resolve, reject) {\n      var _XhrUtil$_getStoredSe = XhrUtil._getStoredSettings(userStorageService),\n          isStoredData = _XhrUtil$_getStoredSe.isStoredData,\n          parsedSettings = _XhrUtil$_getStoredSe.parsedSettings;\n\n      if (isStoredData) {\n        resolve(parsedSettings);\n      } else {\n        var xhr = new XMLHttpRequest();\n\n        _this.xhrHandler(xhr, method, url, payload, userStorageService, resolve, reject);\n      }\n    });\n  },\n  xhrHandler: function xhrHandler(xhr, method, url, payload, userStorageService, resolve, reject) {\n    var _this2 = this;\n\n    if (method === 'GET') {\n      xhr.onload = function () {\n        _this2.xhrOnLoad(xhr, userStorageService, resolve);\n      };\n\n      xhr.onerror = function () {\n        _this2.xhrOnError(xhr, reject);\n      };\n\n      xhr.open(method, url);\n      xhr.send();\n    } else if (method === 'POST') {\n      xhr.onload = function () {\n        resolve();\n      };\n\n      xhr.onerror = function () {\n        reject('Something went wrong');\n      };\n\n      xhr.open(method, url, true);\n      xhr.send(JSON.stringify(payload));\n    }\n  },\n  xhrOnLoad: function xhrOnLoad(xhr, userStorageService, resolve) {\n    try {\n      var parsedXhrResponse = JSON.parse(xhr.response);\n\n      if (userStorageService && isObject(userStorageService) && isFunction(userStorageService.setSettings)) {\n        userStorageService.setSettings(xhr.response);\n      }\n\n      resolve(parsedXhrResponse);\n    } catch (err) {\n      console.error(err);\n    }\n  },\n  xhrOnError: function xhrOnError(xhr, reject) {\n    var error = \"VWO-SDK - [ERROR]: \".concat(getCurrentTime(), \" Request failed for fetching account settings. Got Status Code: \").concat(xhr.status);\n    console.error(error);\n    reject(error);\n  }\n};\nmodule.exports = XhrUtil;\n\n/***/ }),\n\n/***/ \"./node_modules/murmurhash/murmurhash.js\":\n/*!***********************************************!*\\\n  !*** ./node_modules/murmurhash/murmurhash.js ***!\n  \\***********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function(){\n  var _global = this;\n\n  /**\n   * JS Implementation of MurmurHash2\n   *\n   * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n   * @see http://github.com/garycourt/murmurhash-js\n   * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n   * @see http://sites.google.com/site/murmurhash/\n   *\n   * @param {string} str ASCII only\n   * @param {number} seed Positive integer only\n   * @return {number} 32-bit positive integer hash\n   */\n  function MurmurHashV2(str, seed) {\n    var\n      l = str.length,\n      h = seed ^ l,\n      i = 0,\n      k;\n\n    while (l >= 4) {\n      k =\n        ((str.charCodeAt(i) & 0xff)) |\n        ((str.charCodeAt(++i) & 0xff) << 8) |\n        ((str.charCodeAt(++i) & 0xff) << 16) |\n        ((str.charCodeAt(++i) & 0xff) << 24);\n\n      k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n      k ^= k >>> 24;\n      k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n\n    h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;\n\n      l -= 4;\n      ++i;\n    }\n\n    switch (l) {\n    case 3: h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n    case 2: h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n    case 1: h ^= (str.charCodeAt(i) & 0xff);\n            h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    }\n\n    h ^= h >>> 13;\n    h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    h ^= h >>> 15;\n\n    return h >>> 0;\n  };\n\n  /**\n   * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n   *\n   * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n   * @see http://github.com/garycourt/murmurhash-js\n   * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n   * @see http://sites.google.com/site/murmurhash/\n   *\n   * @param {string} key ASCII only\n   * @param {number} seed Positive integer only\n   * @return {number} 32-bit positive integer hash\n   */\n  function MurmurHashV3(key, seed) {\n    var remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;\n\n    remainder = key.length & 3; // key.length % 4\n    bytes = key.length - remainder;\n    h1 = seed;\n    c1 = 0xcc9e2d51;\n    c2 = 0x1b873593;\n    i = 0;\n\n    while (i < bytes) {\n        k1 =\n          ((key.charCodeAt(i) & 0xff)) |\n          ((key.charCodeAt(++i) & 0xff) << 8) |\n          ((key.charCodeAt(++i) & 0xff) << 16) |\n          ((key.charCodeAt(++i) & 0xff) << 24);\n      ++i;\n\n      k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n      h1 ^= k1;\n          h1 = (h1 << 13) | (h1 >>> 19);\n      h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n      h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n    }\n\n    k1 = 0;\n\n    switch (remainder) {\n      case 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n      case 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n      case 1: k1 ^= (key.charCodeAt(i) & 0xff);\n\n      k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n      h1 ^= k1;\n    }\n\n    h1 ^= key.length;\n\n    h1 ^= h1 >>> 16;\n    h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n    h1 ^= h1 >>> 13;\n    h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n    h1 ^= h1 >>> 16;\n\n    return h1 >>> 0;\n  }\n\n  var murmur = MurmurHashV3;\n  murmur.v2 = MurmurHashV2;\n  murmur.v3 = MurmurHashV3;\n\n  if (true) {\n    module.exports = murmur;\n  } else { var _previousRoot; }\n}());\n\n\n/***/ }),\n\n/***/ \"./node_modules/superstruct/lib/index.es.js\":\n/*!**************************************************!*\\\n  !*** ./node_modules/superstruct/lib/index.es.js ***!\n  \\**************************************************/\n/*! exports provided: Struct, StructError, any, array, assert, boolean, coerce, coercion, date, defaulted, dynamic, empty, enums, func, instance, intersection, is, lazy, length, literal, map, masked, never, nullable, number, object, optional, partial, pattern, record, refinement, set, string, struct, tuple, type, union, validate */\n/***/ (function(module, __webpack_exports__, __nested_webpack_require_273172__) {\n\n\"use strict\";\n__nested_webpack_require_273172__.r(__webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"Struct\", function() { return Struct; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"StructError\", function() { return StructError; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"any\", function() { return any; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"array\", function() { return array; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"assert\", function() { return assert; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"boolean\", function() { return boolean; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"coerce\", function() { return coerce; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"coercion\", function() { return coercion; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"date\", function() { return date; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"defaulted\", function() { return defaulted; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"dynamic\", function() { return dynamic; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"empty\", function() { return empty; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"enums\", function() { return enums; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"func\", function() { return func; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"instance\", function() { return instance; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"intersection\", function() { return intersection; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"is\", function() { return is; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"lazy\", function() { return lazy; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"length\", function() { return length; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"literal\", function() { return literal; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"map\", function() { return map; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"masked\", function() { return masked; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"never\", function() { return never; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"nullable\", function() { return nullable; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"number\", function() { return number; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"object\", function() { return object; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"optional\", function() { return optional; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"partial\", function() { return partial; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"pattern\", function() { return pattern; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"record\", function() { return record; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"refinement\", function() { return refinement; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"set\", function() { return set; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"string\", function() { return string; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"struct\", function() { return struct; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"tuple\", function() { return tuple; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"type\", function() { return type; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"union\", function() { return union; });\n/* harmony export (binding) */ __nested_webpack_require_273172__.d(__webpack_exports__, \"validate\", function() { return validate; });\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\nfunction* toFailures(result, context) {\n  if (result === true) ; else if (result === false) {\n    yield context.fail();\n  } else {\n    yield* result;\n  }\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction iteratorShift(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n\n/**\n * `Struct` objects encapsulate the schema for a specific data type (with\n * optional coercion). You can then use the `assert`, `is` or `validate` helpers\n * to validate unknown data against a struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      coercer = value => value,\n      validator = () => [],\n      refiner = () => []\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.coercer = coercer;\n    this.validator = validator;\n    this.refiner = refiner;\n  }\n\n}\n/**\n * `StructError` objects are thrown (or returned) by Superstruct when its\n * validation fails. The error represents the first error encountered during\n * validation. But they also have an `error.failures` property that holds\n * information for all of the failures encountered.\n */\n\nclass StructError extends TypeError {\n  constructor(failure, moreFailures) {\n    const {\n      path,\n      value,\n      type,\n      branch\n    } = failure,\n          rest = _objectWithoutProperties(failure, [\"path\", \"value\", \"type\", \"branch\"]);\n\n    const message = `Expected a value of type \\`${type}\\`${path.length ? ` for \\`${path.join('.')}\\`` : ''} but received \\`${JSON.stringify(value)}\\`.`;\n    let failuresResult;\n\n    function failures() {\n      if (!failuresResult) {\n        failuresResult = [failure, ...moreFailures];\n      }\n\n      return failuresResult;\n    }\n\n    super(message);\n    this.value = value;\n    Object.assign(this, rest);\n    this.type = type;\n    this.path = path;\n    this.branch = branch;\n    this.failures = failures;\n    this.stack = new Error().stack;\n    this.__proto__ = StructError.prototype;\n  }\n\n}\n/**\n * Assert that a value passes a `Struct`, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Coerce a value with the coercion logic of `Struct` and validate it.\n */\n\nfunction coerce(value, struct) {\n  const ret = struct.coercer(value);\n  assert(ret, struct);\n  return ret;\n}\n/**\n * Check if a value passes a `Struct`.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a `Struct`, returning an error if invalid.\n */\n\nfunction validate(value, struct, coercing = false) {\n  if (coercing) {\n    value = struct.coercer(value);\n  }\n\n  const failures = check(value, struct);\n  const failure = iteratorShift(failures);\n\n  if (failure) {\n    const error = new StructError(failure, failures);\n    return [error, undefined];\n  } else {\n    return [undefined, value];\n  }\n}\n/**\n * Check a value against a `Struct`, returning an iterable of failures.\n */\n\nfunction* check(value, struct, path = [], branch = []) {\n  const {\n    type\n  } = struct;\n  const ctx = {\n    value,\n    type,\n    branch,\n    path,\n\n    fail(props = {}) {\n      return _objectSpread2({\n        value,\n        type,\n        path,\n        branch: [...branch, value]\n      }, props);\n    },\n\n    check(v, s, parent, key) {\n      const p = parent !== undefined ? [...path, key] : path;\n      const b = parent !== undefined ? [...branch, parent] : branch;\n      return check(v, s, p, b);\n    }\n\n  };\n  const failures = toFailures(struct.validator(value, ctx), ctx);\n  const failure = iteratorShift(failures);\n\n  if (failure) {\n    yield failure;\n    yield* failures;\n  } else {\n    yield* toFailures(struct.refiner(value, ctx), ctx);\n  }\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n */\n\nfunction coercion(struct, coercer) {\n  const fn = struct.coercer;\n  return new Struct(_objectSpread2(_objectSpread2({}, struct), {}, {\n    coercer: value => {\n      return fn(coercer(value));\n    }\n  }));\n}\n/**\n * Augment a struct to coerce a default value for missing values.\n *\n * Note: You must use `coerce(value, Struct)` on the value before validating it\n * to have the value defaulted!\n */\n\nfunction defaulted(S, fallback, strict) {\n  return coercion(S, x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (strict !== true && isPlainObject(x) && isPlainObject(f)) {\n      const ret = _objectSpread2({}, x);\n\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Coerce a value to mask its properties to only that defined in the struct.\n */\n\nfunction masked(S) {\n  return coercion(S, x => {\n    if (!isPlainObject(x)) {\n      return x;\n    }\n\n    const ret = {};\n\n    for (const key in S.schema) {\n      ret[key] = x[key];\n    }\n\n    return ret;\n  });\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(value) {\n  if (Object.prototype.toString.call(value) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(value);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Augment a string or array struct to constrain its length to zero.\n */\n\nfunction empty(S) {\n  return refinement(S, `${S.type} & Empty`, value => {\n    return value.length === 0;\n  });\n}\n/**\n * Augment a string or array struct to constrain its length to being between a\n * minimum and maximum size.\n */\n\nfunction length(S, min, max) {\n  return refinement(S, `${S.type} & Length<${min},${max}>`, value => {\n    return min < value.length && value.length < max;\n  });\n}\n/**\n * Refine a string struct to match a specific regexp pattern.\n */\n\nfunction pattern(S, regexp) {\n  return refinement(S, `${S.type} & Pattern<${regexp.source}>`, value => {\n    return regexp.test(value);\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n */\n\nfunction refinement(struct, type, refiner) {\n  const fn = struct.refiner;\n  return new Struct(_objectSpread2(_objectSpread2({}, struct), {}, {\n    type,\n\n    *refiner(value, fail) {\n      yield* toFailures(fn(value, fail), fail);\n      yield* toFailures(refiner(value, fail), fail);\n    }\n\n  }));\n}\n\n/**\n * Validate any value.\n */\n\nfunction any() {\n  return struct('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: `Array<${Element ? Element.type : 'unknown'}>`,\n    schema: Element,\n    coercer: value => {\n      return Element && Array.isArray(value) ? value.map(v => coerce(v, Element)) : value;\n    },\n\n    *validator(value, ctx) {\n      if (!Array.isArray(value)) {\n        yield ctx.fail();\n        return;\n      }\n\n      if (Element) {\n        for (const [i, v] of value.entries()) {\n          yield* ctx.check(v, Element, value, i);\n        }\n      }\n    }\n\n  });\n}\n/**\n * Validate that boolean values.\n */\n\nfunction boolean() {\n  return struct('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Validate that `Date` values.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return struct('Date', value => {\n    return value instanceof Date && !isNaN(value.getTime());\n  });\n}\n/**\n * Validate that a value dynamically, determing which struct to use at runtime.\n */\n\nfunction dynamic(fn) {\n  return struct('Dynamic<...>', (value, ctx) => {\n    return ctx.check(value, fn(value, ctx));\n  });\n}\nfunction enums(values) {\n  return struct(`Enum<${values.map(toLiteralString)}>`, value => {\n    return values.includes(value);\n  });\n}\n/**\n * Validate that a value is a function.\n */\n\nfunction func() {\n  return struct('Function', value => {\n    return typeof value === 'function';\n  });\n}\n/**\n * Validate that a value is an instance of a class.\n */\n\nfunction instance(Class) {\n  return struct(`InstanceOf<${Class.name}>`, value => {\n    return value instanceof Class;\n  });\n}\nfunction intersection(Structs) {\n  return struct(Structs.map(s => s.type).join(' & '), function* (value, ctx) {\n    for (const S of Structs) {\n      yield* ctx.check(value, S);\n    }\n  });\n}\n/**\n * Validate a value lazily, by constructing the struct right before the first\n * validation. This is useful for cases where you want to have self-referential\n * structs for nested data structures.\n */\n\nfunction lazy(fn) {\n  let S;\n  return struct('Lazy<...>', (value, ctx) => {\n    if (!S) {\n      S = fn();\n    }\n\n    return ctx.check(value, S);\n  });\n}\nfunction literal(constant) {\n  return struct(`Literal<${toLiteralString(constant)}>`, value => {\n    return value === constant;\n  });\n}\n/**\n * Validate that a value is a map with specific key and value entries.\n */\n\nfunction map(Key, Value) {\n  return struct(`Map<${Key.type},${Value.type}>`, function* (value, ctx) {\n    if (!(value instanceof Map)) {\n      yield ctx.fail();\n      return;\n    }\n\n    for (const [k, v] of value.entries()) {\n      yield* ctx.check(k, Key, value, k);\n      yield* ctx.check(v, Value, value, k);\n    }\n  });\n}\n/**\n * Validate that a value always fails.\n */\n\nfunction never() {\n  return struct('never', () => false);\n}\n/**\n * Augment a struct to make it accept `null` values.\n */\n\nfunction nullable(S) {\n  return new Struct({\n    type: `${S.type} | null`,\n    schema: S.schema,\n    validator: (value, ctx) => {\n      return value === null || ctx.check(value, S);\n    }\n  });\n}\n/**\n * Validate that a value is a number.\n */\n\nfunction number() {\n  return struct(`number`, value => {\n    return typeof value === 'number' && !isNaN(value);\n  });\n}\nfunction object(Structs) {\n  const knowns = Structs ? Object.keys(Structs) : [];\n  const Never = never();\n  return new Struct({\n    type: Structs ? `Object<{${knowns.join(',')}}>` : 'Object',\n    schema: Structs ? Structs : null,\n    coercer: Structs ? createObjectCoercer(Structs) : x => x,\n\n    *validator(value, ctx) {\n      if (typeof value !== 'object' || value == null) {\n        yield ctx.fail();\n        return;\n      }\n\n      if (Structs) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          const Value = Structs[key];\n          const v = value[key];\n          yield* ctx.check(v, Value, value, key);\n        }\n\n        for (const key of unknowns) {\n          const v = value[key];\n          yield* ctx.check(v, Never, value, key);\n        }\n      }\n    }\n\n  });\n}\n/**\n * Augment a struct to make it optionally accept `undefined` values.\n */\n\nfunction optional(S) {\n  return new Struct({\n    type: `${S.type}?`,\n    schema: S.schema,\n    validator: (value, ctx) => {\n      return value === undefined || ctx.check(value, S);\n    }\n  });\n}\n/**\n * Validate that a partial object with specific entry values.\n */\n\nfunction partial(Structs) {\n  if (Structs instanceof Struct) {\n    Structs = Structs.schema;\n  }\n\n  const knowns = Object.keys(Structs);\n  const Never = never();\n  return new Struct({\n    type: `Partial<{${knowns.join(',')}}>`,\n    schema: Structs,\n    coercer: createObjectCoercer(Structs),\n\n    *validator(value, ctx) {\n      if (typeof value !== 'object' || value == null) {\n        yield ctx.fail();\n        return;\n      }\n\n      const unknowns = new Set(Object.keys(value));\n\n      for (const key of knowns) {\n        unknowns.delete(key);\n\n        if (!(key in value)) {\n          continue;\n        }\n\n        const Value = Structs[key];\n        const v = value[key];\n        yield* ctx.check(v, Value, value, key);\n      }\n\n      for (const key of unknowns) {\n        const v = value[key];\n        yield* ctx.check(v, Never, value, key);\n      }\n    }\n\n  });\n}\n/**\n * Validate that a value is a record with specific key and\n * value entries.\n */\n\nfunction record(Key, Value) {\n  return struct(`Record<${Key.type},${Value.type}>`, function* (value, ctx) {\n    if (typeof value !== 'object' || value == null) {\n      yield ctx.fail();\n      return;\n    }\n\n    for (const k in value) {\n      const v = value[k];\n      yield* ctx.check(k, Key, value, k);\n      yield* ctx.check(v, Value, value, k);\n    }\n  });\n}\n/**\n * Validate that a set of values matches a specific type.\n */\n\nfunction set(Element) {\n  return struct(`Set<${Element.type}>`, (value, ctx) => {\n    if (!(value instanceof Set)) {\n      return false;\n    }\n\n    for (const val of value) {\n      const [failure] = ctx.check(val, Element);\n\n      if (failure) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n}\n/**\n * Validate that a value is a string.\n */\n\nfunction string() {\n  return struct('string', value => {\n    return typeof value === 'string';\n  });\n}\n/**\n * Define a `Struct` instance with a type and validation function.\n */\n\nfunction struct(name, validator) {\n  return new Struct({\n    type: name,\n    validator,\n    schema: null\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return struct(`[${Elements.map(s => s.type).join(',')}]`, function* (value, ctx) {\n    if (!Array.isArray(value)) {\n      yield ctx.fail();\n      return;\n    }\n\n    for (const [index, Element] of Elements.entries()) {\n      const v = value[index];\n      yield* ctx.check(v, Element, value, index);\n    }\n\n    if (value.length > Elements.length) {\n      const index = Elements.length;\n      const v = value[index];\n      yield* ctx.check(v, Never, value, index);\n    }\n  });\n}\n/**\n * Validate that a value matches a specific strutural interface, like the\n * structural typing that TypeScript uses.\n */\n\nfunction type(Structs) {\n  const keys = Object.keys(Structs);\n  return struct(`Type<{${keys.join(',')}}>`, function* (value, ctx) {\n    if (typeof value !== 'object' || value == null) {\n      yield ctx.fail();\n      return;\n    }\n\n    for (const key of keys) {\n      const Value = Structs[key];\n      const v = value[key];\n      yield* ctx.check(v, Value, value, key);\n    }\n  });\n}\nfunction union(Structs) {\n  return struct(`${Structs.map(s => s.type).join(' | ')}`, function* (value, ctx) {\n    for (const S of Structs) {\n      const [...failures] = ctx.check(value, S);\n\n      if (failures.length === 0) {\n        return;\n      }\n    }\n\n    yield ctx.fail();\n  });\n}\n/**\n * Convert a value to a literal string.\n */\n\nfunction toLiteralString(value) {\n  return typeof value === 'string' ? `\"${value.replace(/\"/g, '\"')}\"` : `${value}`;\n}\n/**\n * Coerce the values of an object-like struct.\n */\n\n\nfunction createObjectCoercer(Structs) {\n  const knowns = Object.keys(Structs);\n  return value => {\n    if (typeof value !== 'object' || value == null) {\n      return value;\n    }\n\n    const ret = {};\n    const unknowns = new Set(Object.keys(value));\n\n    for (const key of knowns) {\n      unknowns.delete(key);\n      const Value = Structs[key];\n      const v = value[key];\n      ret[key] = coerce(v, Value);\n    }\n\n    for (const key of unknowns) {\n      ret[key] = value[key];\n    }\n\n    return ret;\n  };\n}\n\n\n//# sourceMappingURL=index.es.js.map\n\n\n/***/ }),\n\n/***/ \"./node_modules/uuid/lib/bytesToUuid.js\":\n/*!**********************************************!*\\\n  !*** ./node_modules/uuid/lib/bytesToUuid.js ***!\n  \\**********************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n\n\n/***/ }),\n\n/***/ \"./node_modules/uuid/lib/sha1-browser.js\":\n/*!***********************************************!*\\\n  !*** ./node_modules/uuid/lib/sha1-browser.js ***!\n  \\***********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\n\n\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0: return (x & y) ^ (~x & z);\n    case 1: return x ^ y ^ z;\n    case 2: return (x & y) ^ (x & z) ^ (y & z);\n    case 3: return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return (x << n) | (x>>> (32 - n));\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof(bytes) == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n    bytes = new Array(msg.length);\n    for (var i = 0; i < msg.length; i++) bytes[i] = msg.charCodeAt(i);\n  }\n\n  bytes.push(0x80);\n\n  var l = bytes.length/4 + 2;\n  var N = Math.ceil(l/16);\n  var M = new Array(N);\n\n  for (var i=0; i<N; i++) {\n    M[i] = new Array(16);\n    for (var j=0; j<16; j++) {\n      M[i][j] =\n        bytes[i * 64 + j * 4] << 24 |\n        bytes[i * 64 + j * 4 + 1] << 16 |\n        bytes[i * 64 + j * 4 + 2] << 8 |\n        bytes[i * 64 + j * 4 + 3];\n    }\n  }\n\n  M[N - 1][14] = ((bytes.length - 1) * 8) /\n    Math.pow(2, 32); M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = ((bytes.length - 1) * 8) & 0xffffffff;\n\n  for (var i=0; i<N; i++) {\n    var W = new Array(80);\n\n    for (var t=0; t<16; t++) W[t] = M[i][t];\n    for (var t=16; t<80; t++) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var t=0; t<80; t++) {\n      var s = Math.floor(t/20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = (H[0] + a) >>> 0;\n    H[1] = (H[1] + b) >>> 0;\n    H[2] = (H[2] + c) >>> 0;\n    H[3] = (H[3] + d) >>> 0;\n    H[4] = (H[4] + e) >>> 0;\n  }\n\n  return [\n    H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff,\n    H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff,\n    H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff,\n    H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff,\n    H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff\n  ];\n}\n\nmodule.exports = sha1;\n\n\n/***/ }),\n\n/***/ \"./node_modules/uuid/lib/v35.js\":\n/*!**************************************!*\\\n  !*** ./node_modules/uuid/lib/v35.js ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_299044__) {\n\nvar bytesToUuid = __nested_webpack_require_299044__(/*! ./bytesToUuid */ \"./node_modules/uuid/lib/bytesToUuid.js\");\n\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  var bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function(hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n\n  return bytes;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n  var bytes = new Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n  return bytes;\n}\n\nmodule.exports = function(name, version, hashfunc) {\n  var generateUUID = function(value, namespace, buf, offset) {\n    var off = buf && offset || 0;\n\n    if (typeof(value) == 'string') value = stringToBytes(value);\n    if (typeof(namespace) == 'string') namespace = uuidToBytes(namespace);\n\n    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');\n    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values');\n\n    // Per 4.3\n    var bytes = hashfunc(namespace.concat(value));\n    bytes[6] = (bytes[6] & 0x0f) | version;\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    if (buf) {\n      for (var idx = 0; idx < 16; ++idx) {\n        buf[off+idx] = bytes[idx];\n      }\n    }\n\n    return buf || bytesToUuid(bytes);\n  };\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch (err) {\n  }\n\n  // Pre-defined namespaces, per Appendix C\n  generateUUID.DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\n  generateUUID.URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n\n  return generateUUID;\n};\n\n\n/***/ }),\n\n/***/ \"./node_modules/uuid/v5.js\":\n/*!*********************************!*\\\n  !*** ./node_modules/uuid/v5.js ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __nested_webpack_require_300976__) {\n\nvar v35 = __nested_webpack_require_300976__(/*! ./lib/v35.js */ \"./node_modules/uuid/lib/v35.js\");\nvar sha1 = __nested_webpack_require_300976__(/*! ./lib/sha1 */ \"./node_modules/uuid/lib/sha1-browser.js\");\nmodule.exports = v35('v5', 0x50, sha1);\n\n\n/***/ }),\n\n/***/ \"./node_modules/vwo-sdk-log-messages/src/debug-messages.json\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/vwo-sdk-log-messages/src/debug-messages.json ***!\n  \\*******************************************************************/\n/*! exports provided: CONFIG_BATCH_EVENT_LIMIT_EXCEEDED, CONFIG_LOG_LEVEL_SET, CONFIG_CUSTOM_LOGGER_USED, CONFIG_DEVELOPMENT_MODE_STATUS, POLLING_SETTINGS_FILE_REGISTERED, SETTINGS_FILE_PROCESSED, IMPRESSION_FOR_TRACK_USER, IMPRESSION_FOR_TRACK_GOAL, IMPRESSION_FOR_PUSH, IMPRESSION_FOR_EVENT_ARCH_TRACK_USER, IMPRESSION_FOR_EVENT_ARCH_TRACK_GOAL, IMPRESSION_FOR_EVENT_ARCH_PUSH, EVENT_BATCH_BEFORE_FLUSHING, EVENT_BATCH_FLUSH, USER_STORAGE_SERVICE_NOT_CONFIGURED, USER_STORAGE_SERVICE_NO_STORED_DATA, VARIATION_RANGE_ALLOCATION, MEG_ELIGIBLE_CAMPAIGNS, SEGMENTATION_SKIPPED, SEGMENTATION_STATUS, WHITELISTING_SKIPPED, USER_UUID, USER_HASH_BUCKET_VALUE, USER_CAMPAIGN_BUCKET_VALUES, default */\n/***/ (function(module) {\n\nmodule.exports = JSON.parse(\"{\\\"CONFIG_BATCH_EVENT_LIMIT_EXCEEDED\\\":\\\"({file}): Impression event - {endPoint} failed due to exceeding payload size. Parameter eventsPerRequest in batchEvents config in launch API has value:{eventsPerRequest} for account ID:{accountId}. Please read the official documentation for knowing the size limits\\\",\\\"CONFIG_LOG_LEVEL_SET\\\":\\\"({file}): Log level set to {level}\\\",\\\"CONFIG_CUSTOM_LOGGER_USED\\\":\\\"({file}): Custom logger used\\\",\\\"CONFIG_DEVELOPMENT_MODE_STATUS\\\":\\\"({file}): DEVELOPMENT mode is ON. No tracking call will be made to VWO Server\\\",\\\"POLLING_SETTINGS_FILE_REGISTERED\\\":\\\"({file}): Polling of settings-file is registered with a periodic interval of {pollingInterval} ms\\\",\\\"SETTINGS_FILE_PROCESSED\\\":\\\"({file}): settings-file matches the schema, validated and properly processed for the Account ID:{accountId}\\\",\\\"IMPRESSION_FOR_TRACK_USER\\\":\\\"({file}): Impression built for tracking user - {properties}\\\",\\\"IMPRESSION_FOR_TRACK_GOAL\\\":\\\"({file}): Impression built for tracking goal - {properties}\\\",\\\"IMPRESSION_FOR_PUSH\\\":\\\"({file}): Impression built for pushing custom dimension - {properties}\\\",\\\"IMPRESSION_FOR_EVENT_ARCH_TRACK_USER\\\":\\\"({file}): Impression built for vwo_variationShown event for Account ID:{accountId}, User ID:{userId}, and Campaign ID:{campaignId}\\\",\\\"IMPRESSION_FOR_EVENT_ARCH_TRACK_GOAL\\\":\\\"({file}): Impression built for {goalName} event for Account ID:{accountId}, User ID:{userId}, and Campaign ID:{campaignId}\\\",\\\"IMPRESSION_FOR_EVENT_ARCH_PUSH\\\":\\\"({file}): Impression built for visitor-property:{property} for Account ID:{accountId} and User ID:{userId}\\\",\\\"EVENT_BATCH_BEFORE_FLUSHING\\\":\\\"({file}): flushing event queue {manually} having {length} events for Account ID:{accountId}. {timer}\\\",\\\"EVENT_BATCH_FLUSH\\\":\\\"{{file}}: Manually flushing batch events for Account ID:{accountId} having {queueLength} events\\\",\\\"USER_STORAGE_SERVICE_NOT_CONFIGURED\\\":\\\"({file}): User Storage Service is not configured to get/set the data\\\",\\\"USER_STORAGE_SERVICE_NO_STORED_DATA\\\":\\\"({file}): No stored variation for User ID:{userId} for Campaign:{campaignKey} found in User Storage Service\\\",\\\"VARIATION_RANGE_ALLOCATION\\\":\\\"({file}): Variation:{variationName} of Campaign:{campaignKey} having weight:{variationWeight} got bucketing range: ( {start} - {end} )\\\",\\\"MEG_ELIGIBLE_CAMPAIGNS\\\":\\\"({file}): Campaigns: {eligibleCampaignKeys} are eligible, {inEligibleText} are ineligible from the Group:{groupName} for the User ID:{userId}\\\",\\\"SEGMENTATION_SKIPPED\\\":\\\"({file}): Segmentation is not used for Campaign:{campaignKey}, hence skipping evaluating segmentation{variation} for User ID:{userId}\\\",\\\"SEGMENTATION_STATUS\\\":\\\"({file}): User ID:{userId} for Campaign:{campaignKey} with variables:{customVariables} {status} {segmentationType} {variation}\\\",\\\"WHITELISTING_SKIPPED\\\":\\\"({file}): Whitelisting is not used for Campaign:{campaignKey}, hence skipping evaluating whitelisting for User ID:{userId}\\\",\\\"USER_UUID\\\":\\\"({file}): VWO UUID generated for Account Id:{accountId} and User ID:{userId} is {uuid}\\\",\\\"USER_HASH_BUCKET_VALUE\\\":\\\"({file}): User ID:{userId} having hash:{hashValue} got bucketValue:{bucketValue}\\\",\\\"USER_CAMPAIGN_BUCKET_VALUES\\\":\\\"({file}): User ID:{userId} for Campaign:{campaignKey} having percent-traffic:{percentTraffic} got hash-value:{hashValue} and bucket-value:{bucketValue}\\\"}\");\n\n/***/ }),\n\n/***/ \"./node_modules/vwo-sdk-log-messages/src/error-messages.json\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/vwo-sdk-log-messages/src/error-messages.json ***!\n  \\*******************************************************************/\n/*! exports provided: CONFIG_PARAMETER_INVALID, CONFIG_POLLING_SDK_KEY_NOT_PROVIVED, CONFIG_CORRUPTED, SETTINGS_FILE_INVALID, SETTINGS_FILE_CORRUPTED, BATCH_QUEUE_EMPTY, API_HAS_CORRUPTED_SETTINGS_FILE, API_BAD_PARAMETERS, API_NOT_APPLICABLE, USER_ID_INVALID, CAMPAIGN_NOT_FOUND_FOR_GOAL, POLLING_FAILED, SEGMENTATION_REGEX_CREATION_FAILED, SEGMENTATION_ERROR, USER_STORAGE_SERVICE_GET_FAILED, USER_STORAGE_SERVICE_SET_FAILED, IMPRESSION_FAILED, TAG_KEY_LENGTH_EXCEEDED, TAG_VALUE_LENGTH_EXCEEDED, TRACK_API_GOAL_NOT_FOUND, TRACK_API_REVENUE_NOT_PASSED_FOR_REVENUE_GOAL, UNABLE_TO_CAST_VALUE, VARIABLE_NOT_FOUND, default */\n/***/ (function(module) {\n\nmodule.exports = JSON.parse(\"{\\\"CONFIG_PARAMETER_INVALID\\\":\\\"({file}): {parameter} paased in {api} API is not correct. It should be of type:{type}\\\",\\\"CONFIG_POLLING_SDK_KEY_NOT_PROVIVED\\\":\\\"({file}): SDK Key is required along with pollingInterval to poll the settings-file\\\",\\\"CONFIG_CORRUPTED\\\":\\\"({file}): Config passed to {api} API is invalid. Please refer developer docs\\\",\\\"SETTINGS_FILE_INVALID\\\":\\\"({file}): Settings file passed while instantiating SDK instance is invalid\\\",\\\"SETTINGS_FILE_CORRUPTED\\\":\\\"({file}): Fetched settings-file doesn't match the desired schema. Please contact VWO Support for help\\\",\\\"BATCH_QUEUE_EMPTY\\\":\\\"{{file}}: No batch queue present for account:{accountId} when calling flushEvents API. Check batchEvents config in launch API\\\",\\\"API_HAS_CORRUPTED_SETTINGS_FILE\\\":\\\"({file}): {api} API has corrupted settings-file. Please check or reach out to VWO support\\\",\\\"API_BAD_PARAMETERS\\\":\\\"({file}): {api} API got bad parameters. Refer the developer docs\\\",\\\"API_NOT_APPLICABLE\\\":\\\"({file}): {api} API is not valid for Campaign:{campaignKey} having type:{campaignType} for User ID:{userId}\\\",\\\"USER_ID_INVALID\\\":\\\"({file}): Invalid User Id:{userId} passed to the API\\\",\\\"CAMPAIGN_NOT_FOUND_FOR_GOAL\\\":\\\"({file}): No such campaign found corresponding to goalIdentifier:{goalIdentifier}. Please verify from VWO app\\\",\\\"POLLING_FAILED\\\":\\\"({file}): Fetching of settings-file failed via polling for the accountId:{accountId}\\\",\\\"SEGMENTATION_REGEX_CREATION_FAILED\\\":\\\"({file}): Regular expression:{regex} used for targeting cound not be evaluated\\\",\\\"SEGMENTATION_ERROR\\\":\\\"({file}): Could not segment the User ID:{userId} for Campaign:{campaignKey}{variation} with customVariables:{customVariables}. Error message: {err}\\\",\\\"USER_STORAGE_SERVICE_GET_FAILED\\\":\\\"({file}): Getting data from User Storage Service failed for User ID:{userId}. Error: {error}\\\",\\\"USER_STORAGE_SERVICE_SET_FAILED\\\":\\\"({file}): Saving data into User Storage Service failed for User ID:{userId}. Error: {error}\\\",\\\"IMPRESSION_FAILED\\\":\\\"({file}): Impression event could not be sent to VWO - {endPoint}. Reason: {err}\\\",\\\"TAG_KEY_LENGTH_EXCEEDED\\\":\\\"({file}): Length of custom dimension key:{tagKey} for User Id:{userId} can not be greater than 255\\\",\\\"TAG_VALUE_LENGTH_EXCEEDED\\\":\\\"({file}): Length of custom dimension value:{tagValue} of tagKey:{tagKey} for User Id:{userId} can not be greater than 255\\\",\\\"TRACK_API_GOAL_NOT_FOUND\\\":\\\"({file}): Goal:{goalIdentifier} not found for Campaign:{campaignKey} and User Id:{userId}\\\",\\\"TRACK_API_REVENUE_NOT_PASSED_FOR_REVENUE_GOAL\\\":\\\"({file}): Revenue value should be passed for revenue goal:{goalIdentifier} for Campaign:{campaignKey} and User Id:{userId}\\\",\\\"UNABLE_TO_CAST_VALUE\\\":\\\"({file}): Unable to cast value:{variableValue} to type:{variableType}, returning null\\\",\\\"VARIABLE_NOT_FOUND\\\":\\\"({file}): Variable:{variableKey} for User ID:{userId} is not found in settings-file, returning null\\\"}\");\n\n/***/ }),\n\n/***/ \"./node_modules/vwo-sdk-log-messages/src/info-messages.json\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/vwo-sdk-log-messages/src/info-messages.json ***!\n  \\******************************************************************/\n/*! exports provided: CONFIG_VALID, CONFIG_PARAMETER_USED, CONFIG_RETURN_PROMISE, SDK_INITIALIZED, POLLING_SUCCESS, POLLING_SETTINGS_FILE_UPDATED, POLLING_SETTINGS_FILE_NOT_UPDATED, DECISION_NO_VARIATION_ALLOTED, EVENT_BATCH_DEFAULTS, EVENT_QUEUE, EVENT_BATCH_After_FLUSHING, CAMPAIGN_NOT_ACTIVATED, CAMPAIGN_USER_ALREADY_TRACKED, CAMPAIGN_GOAL_ALREADY_TRACKED, GOT_STORED_VARIATION, GETTING_DATA_USER_STORAGE_SERVICE, SETTING_DATA_USER_STORAGE_SERVICE, IMPRESSION_SUCCESS, IMPRESSION_SUCCESS_FOR_EVENT_ARCH, IMPRESSION_BATCH_SUCCESS, IMPRESSION_BATCH_FAILED, MEG_ELIGIBLE_CAMPAIGNS, OTHER_CAMPAIGN_SATISFIES_WHITELISTING_STORAGE, SEGMENTATION_STATUS, MEG_CALLED_CAMPAIGN_NOT_WINNER, MEG_GOT_WINNER_CAMPAIGN, FEATURE_STATUS, FEATURE_VARIABLE_VALUE, FEATURE_VARIABLE_DEFAULT_VALUE, USER_NOT_PART_OF_CAMPAIGN, USER_VARIATION_STATUS, USER_CAMPAIGN_ELIGIBILITY, USER_VARIATION_ALLOCATION_STATUS, OPT_OUT_API_CALLED, API_NOT_ENABLED, default */\n/***/ (function(module) {\n\nmodule.exports = JSON.parse(\"{\\\"CONFIG_VALID\\\":\\\"({file}): SDK configuration and account settings-file are valid\\\",\\\"CONFIG_PARAMETER_USED\\\":\\\"({file}): {parameter} paased in launch API having type:{type}\\\",\\\"CONFIG_RETURN_PROMISE\\\":\\\"({file}): {method} API returns a promise as returnPromiseFor is set to true for this API\\\",\\\"SDK_INITIALIZED\\\":\\\"({file}): SDK is properly initialzed with the passed configuration\\\",\\\"POLLING_SUCCESS\\\":\\\"({file}): settings-file fetched successfully via polling for the accountId:{accountId}\\\",\\\"POLLING_SETTINGS_FILE_UPDATED\\\":\\\"({file}): SDK instance is updated with the latest settings-file for the accountId:{accountId}\\\",\\\"POLLING_SETTINGS_FILE_NOT_UPDATED\\\":\\\"{{file}}: settings-file fetched via polling is same as earlier fetched settings\\\",\\\"DECISION_NO_VARIATION_ALLOTED\\\":\\\"({file}): Variation was not assigned to the User ID:{userId} for Campaign:{campaignKey}\\\",\\\"EVENT_BATCH_DEFAULTS\\\":\\\"({file}): {parameter} not passed in SDK configuration, setting it default to {defaultValue}\\\",\\\"EVENT_QUEUE\\\":\\\"({file}): Event with payload:{event} pushed to the {queueType} queue\\\",\\\"EVENT_BATCH_After_FLUSHING\\\":\\\"({file}): Event queue having {length} events has been flushed {manually}\\\",\\\"CAMPAIGN_NOT_ACTIVATED\\\":\\\"({file}): Activate the campaign:{campaignKey} first for User ID:{userId} to {reason}\\\",\\\"CAMPAIGN_USER_ALREADY_TRACKED\\\":\\\"({file}): User ID:{userId} for Campaign:{campaignKey} has already been tracked earlier for \\\\\\\"{api}\\\\\\\" API. No tracking call is made to VWO server\\\",\\\"CAMPAIGN_GOAL_ALREADY_TRACKED\\\":\\\"({file}): Goal:{goalIdentifier} of Campaign:{campaignKey} for User ID:{userId} has already been tracked earlier. No tracking call is made to VWO server\\\",\\\"GOT_STORED_VARIATION\\\":\\\"({file}): Got stored variation from User Storage Service for User ID:{userId} for Campaign:{campaignKey} as Variation:{variationName}\\\",\\\"GETTING_DATA_USER_STORAGE_SERVICE\\\":\\\"({file}): Read data from User Storage Service for User ID:{userId} and Campaign:{campaignKey}\\\",\\\"SETTING_DATA_USER_STORAGE_SERVICE\\\":\\\"({file}): Set data into User Storage Service for User ID:{userId} and Campaign:{campaignKey}\\\",\\\"IMPRESSION_SUCCESS\\\":\\\"({file}): Impression event - {endPoint} was successfully received by VWO having main keys: Account ID:{accountId}, {mainKeys}\\\",\\\"IMPRESSION_SUCCESS_FOR_EVENT_ARCH\\\":\\\"({file}): Impression for {event} - {endPoint} was successfully received by VWO for Account ID:{accountId}\\\",\\\"IMPRESSION_BATCH_SUCCESS\\\":\\\"({file}): Impression event - {endPoint} was successfully received by VWO having Account ID:{accountId}\\\",\\\"IMPRESSION_BATCH_FAILED\\\":\\\"({file}): Batch events couldn\\\\\\\"t be received by VWO. Calling Flush Callback with error and data\\\",\\\"MEG_ELIGIBLE_CAMPAIGNS\\\":\\\"({file}): Got {noOfEligibleCampaigns} eligible winners out of {noOfGroupCampaigns} campaigns from the Group:{groupName} and for User ID:{userId}\\\",\\\"OTHER_CAMPAIGN_SATISFIES_WHITELISTING_STORAGE\\\":\\\"({file}): Campaign:{campaignKey} of Group:{groupName} satisfies {type} for User ID:{userId}\\\",\\\"SEGMENTATION_STATUS\\\":\\\"({file}): User ID:{userId} for Campaign:{campaignKey} with variables:{customVariables} {status} {segmentationType} {variation}\\\",\\\"MEG_CALLED_CAMPAIGN_NOT_WINNER\\\":\\\"({file}): Campaign:{campaignKey} does not qualify from the mutually exclusive group:{groupName} for User ID:{userId}\\\",\\\"MEG_GOT_WINNER_CAMPAIGN\\\":\\\"({file}): Campaign:{campaignKey} is selected from the mutually exclusive group:{groupName} for the User ID:{userId}\\\",\\\"FEATURE_STATUS\\\":\\\"({file}): Campaign:{campaignKey} is {status} for user ID:{userId}\\\",\\\"FEATURE_VARIABLE_VALUE\\\":\\\"({file}): For User ID:{userId}, value for variable:{variableKey} of feature:{campaignKey} is:{variableValue}\\\",\\\"FEATURE_VARIABLE_DEFAULT_VALUE\\\":\\\"({file}): Feature is not enabled for variation:{variationName}. Returning default value for the variable:{variableKey}\\\",\\\"USER_NOT_PART_OF_CAMPAIGN\\\":\\\"({file}): User ID:{userId} did not qualify for Campaign:{campaignKey}\\\",\\\"USER_VARIATION_STATUS\\\":\\\"({file}): User ID:{userId} for Campaign:{campaignKey} {status}\\\",\\\"USER_CAMPAIGN_ELIGIBILITY\\\":\\\"({file}): User ID:{userId} for Campaign:{campaignKey} is {status} to become part of campaign\\\",\\\"USER_VARIATION_ALLOCATION_STATUS\\\":\\\"({file}): User ID:{userId} for Campaign:{campaignKey} {status}\\\",\\\"OPT_OUT_API_CALLED\\\":\\\"({file}): You have opted out for not tracking i.e. all API calls will stop functioning and will simply early return\\\",\\\"API_NOT_ENABLED\\\":\\\"({file}): {api} API is disabled as you opted out for tracking. Reinitialize the SDK to enable the normal functioning of all APIs.\\\"}\");\n\n/***/ }),\n\n/***/ \"./node_modules/vwo-sdk-log-messages/src/warning-messages.json\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/vwo-sdk-log-messages/src/warning-messages.json ***!\n  \\*********************************************************************/\n/*! exports provided: CAMPAIGN_NOT_RUNNING, CAMPAIGN_NOT_ACTIVATED, default */\n/***/ (function(module) {\n\nmodule.exports = JSON.parse(\"{\\\"CAMPAIGN_NOT_RUNNING\\\":\\\"({file}): {api} API called with Campaign:{campaignKey} but the campaign is not RUNNING. Please verify from VWO App\\\",\\\"CAMPAIGN_NOT_ACTIVATED\\\":\\\"({file}): Campaign:{campaignKey} for User ID:{userId} is not yet activated for API:{api}. Use activate API to activate A/B test or isFeatureEnabled API to activate Feature Test\\\"}\");\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=vwo-javascript-sdk.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vwo-node-sdk/dist/vwo-javascript-sdk.js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fhome%2Frunner%2Fvwo-node-nextjs-breaking-ssr%2Fpages%2Findex.js&page=%2F!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);